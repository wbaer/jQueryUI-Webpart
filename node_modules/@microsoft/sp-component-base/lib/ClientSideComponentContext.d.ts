import { ServiceScope } from '@microsoft/sp-core-library';
import { IClientSideComponentManifest } from '@microsoft/sp-module-interfaces';
import IClientSideComponentContext from './IClientSideComponentContext';
/**
 * Constructor parameters for ClientSideComponentContext.
 * @internal
 */
export interface IClientSideComponentContextParameters {
    /**
     * The manager's ServiceScope, which will be used to create the child
     * ServiceScope for this component.
     */
    readonly parentServiceScope: ServiceScope;
    /**
     * The client-side component manifest.
     */
    readonly manifest: IClientSideComponentManifest;
}
/**
 * Base context class for all client side components.
 * @internal
 */
declare abstract class ClientSideComponentContext implements IClientSideComponentContext {
    private _serviceScope;
    private _manifest;
    constructor(parameters: IClientSideComponentContextParameters);
    /**
     * {@inheritdoc IClientSideComponentContext.serviceScope}
     */
    readonly serviceScope: ServiceScope;
    /**
     * {@inheritdoc IClientSideComponentContext.manifest}
     */
    readonly manifest: IClientSideComponentManifest;
    /**
     * The child class's overridden "manifest" property should call this method.
     * @remarks
     * This is a workaround for a TypeScript/ES5 limitation, which prevents
     * a subclass using "super" to access properties from the base class (even though
     * functions work okay).  It will be fixed in TypeScript/ES6.
     */
    protected getBaseManifest(): IClientSideComponentManifest;
    /**
     * Allows child classes to contribute their own services to the new serviceScope.
     * @param parameters - The same "parameters" object that was passed
     *    to the class constructor.
     */
    protected onProvideServices(parameters: IClientSideComponentContextParameters): void;
    /**
     * Allows child classes to consume their own services from the serviceScope.
     */
    protected onConsumeServices(): void;
}
export default ClientSideComponentContext;
