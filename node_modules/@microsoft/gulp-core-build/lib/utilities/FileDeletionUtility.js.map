{"version":3,"sources":["utilities/FileDeletionUtility.ts"],"names":[],"mappings":"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","file":"utilities/FileDeletionUtility.js","sourcesContent":["import * as path from 'path';\r\nimport * as globEscape from 'glob-escape';\r\nimport globby = require('globby');\r\n\r\n/* tslint:disable:typedef */\r\nconst del = require('del');\r\n/* tslint:disable:typedef */\r\n\r\nexport class FileDeletionUtility {\r\n  public static deletePatterns(patterns: string[]) {\r\n    const files: string[] = globby.sync(patterns);\r\n    this.deleteFiles(files);\r\n  }\r\n\r\n  public static deleteFiles(files: string[]) {\r\n    del.sync(this.escapeFilepaths(this.removeChildren(files)));\r\n  }\r\n\r\n  public static escapeFilepaths(files: string[]): string[] {\r\n    return files.map((file: string) => {\r\n      return globEscape(file);\r\n    });\r\n  }\r\n\r\n  public static removeChildren(filenames: string[]): string[] {\r\n    // Appears to be a known issue with `del` whereby\r\n    // if you ask to delete both a folder, and something in the folder,\r\n    // it randomly chooses which one to delete first, which can cause\r\n    // the function to fail sporadically. The fix for this is simple:\r\n    // we need to remove any cleanPaths which exist under a folder we\r\n    // are attempting to delete\r\n\r\n    // First we sort the list of files. We know that if something is a file,\r\n    // if matched, the parent folder should appear earlier in the list\r\n    filenames.sort();\r\n\r\n    // We need to determine which paths exist under other paths, and remove them from the\r\n    // list of files to delete\r\n    const filesToDelete: string[] = [];\r\n\r\n    // current working directory\r\n    let currentParent = undefined;\r\n\r\n    for (let i: number = 0; i < filenames.length; i++) {\r\n      const curFile: string = filenames[i];\r\n      if (this.isParentDirectory(currentParent, curFile)) {\r\n        continue;\r\n      } else {\r\n        filesToDelete.push(curFile);\r\n        currentParent = curFile;\r\n      }\r\n    }\r\n    return filesToDelete;\r\n  }\r\n\r\n  public static isParentDirectory(directory: string, filepath: string): boolean {\r\n    if (!directory || !filepath) {\r\n      return false;\r\n    }\r\n\r\n    const directoryParts: string[] = path.resolve(directory).split(path.sep);\r\n    const fileParts: string[] = path.resolve(filepath).split(path.sep);\r\n\r\n    if (directoryParts[directoryParts.length - 1] === '') {\r\n      // this is to fix an issue with windows roots\r\n      directoryParts.pop();\r\n    }\r\n\r\n    if (directoryParts.length >= fileParts.length) {\r\n      return false;\r\n    }\r\n\r\n    for (let i: number = 0; i < directoryParts.length; i++) {\r\n      if (directoryParts[i] !== fileParts[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}"],"sourceRoot":"..\\..\\src"}