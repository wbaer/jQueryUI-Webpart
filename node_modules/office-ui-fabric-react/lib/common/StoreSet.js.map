{"version":3,"sources":["common/StoreSet.ts"],"names":[],"mappings":";AAEA,0CAAsC;AAEtC;IAKE;QACE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAEM,sBAAG,GAAV,UAAoC,GAAiB,EAAE,KAAQ;QAC7D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,2BAAQ,GAAf,UAAyC,GAAiB;QACxD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAEM,wBAAK,GAAZ,UAAa,MAAgB;QAC3B,IAAI,cAAc,GAAG,IAAI,QAAQ,EAAE,CAAC;QAEpC,cAAc,CAAC,OAAO,GAAG,kBAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAE1D,MAAM,CAAC,cAAc,CAAC;IACxB,CAAC;IACH,eAAC;AAAD,CAzBA,AAyBC,IAAA;AAzBY,4BAAQ","file":"common/StoreSet.js","sourcesContent":["import { IStoreKey } from './storeKey';\r\nimport { ISubscribable } from './ISubscribable';\r\nimport { assign } from '../Utilities';\r\n\r\nexport class StoreSet {\r\n  private _stores: {\r\n    [ key: string]: any;\r\n  };\r\n\r\n  constructor() {\r\n    this._stores = {};\r\n  }\r\n\r\n  public add<T extends ISubscribable>(key: IStoreKey<T>, value: T): StoreSet {\r\n    this._stores[key.id] = value;\r\n    return this;\r\n  }\r\n\r\n  public getStore<T extends ISubscribable>(key: IStoreKey<T>): T {\r\n    return this._stores[key.id];\r\n  }\r\n\r\n  public merge(stores: StoreSet) {\r\n    let mergedStoreSet = new StoreSet();\r\n\r\n    mergedStoreSet._stores = assign({}, this._stores, stores);\r\n\r\n    return mergedStoreSet;\r\n  }\r\n}"],"sourceRoot":"..\\..\\src"}