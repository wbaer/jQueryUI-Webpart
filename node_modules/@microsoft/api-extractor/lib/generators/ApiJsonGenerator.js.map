{"version":3,"sources":["generators/ApiJsonGenerator.ts"],"names":[],"mappings":";;;;;;AAAA,uBAA0B;AAC1B,2BAA6B;AAC7B,+BAAiC;AAOjC,kDAA8D;AAC9D,oDAA+C;AAI/C,sDAAqE;AAErE,oEAAyD;AAEzD,wCAAmC;AACnC,6CAAwC;AAExC;;;;;;;;IAQI;AACJ;IAA8C,oCAAc;IAA5D;QAAA,qEAiNC;QA5MC,qBAAqB;QACX,mBAAa,GAAa;YAClC,yBAAM,CAAC,KAAK;YACZ,yBAAM,CAAC,IAAI;YACX,yBAAM,CAAC,QAAQ;SAChB,CAAC;QAEQ,gBAAU,GAAW,EAAE,CAAC;;IAqMpC,CAAC;IAnMQ,wCAAa,GAApB,UAAqB,cAAsB,EAAE,SAAoB;QAC/D,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAE/C,oEAAoE;QACpE,kBAAQ,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAEvD,uDAAuD;QACvD,IAAM,aAAa,GAAQ,kBAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,iCAAiC,CAAC,CAAC,CAAC;QAE1G,kBAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,EACpD,UAAC,WAAmB;YAClB,IAAM,YAAY,GACd,sFAAsF,GAAG,EAAE,CAAC,GAAG;kBAC/F,cAAc,GAAG,EAAE,CAAC,GAAG;kBACvB,WAAW,CAAC;YAEhB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,SAAS,GAAG,YAAY,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;YACjE,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;QAChC,CAAC,CACF,CAAC;IACJ,CAAC;IAES,iDAAsB,GAAhC,UAAiC,iBAAoC,EAAE,SAAkB;QACvF,IAAM,IAAI,GACR,iBAAiB,CAAC,IAAI,KAAK,qBAAW,CAAC,KAAK,GAAG,qBAAW,CAAC,iBAAiB,CAAC,qBAAW,CAAC,KAAK,CAAC;YAC/F,iBAAiB,CAAC,IAAI,KAAK,qBAAW,CAAC,SAAS;gBAC9C,qBAAW,CAAC,iBAAiB,CAAC,qBAAW,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;QAE9D,IAAM,aAAa,GAAW;YAC5B,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,iBAAiB,CAAC,OAAO,IAAI,EAAE;YACxC,UAAU,EAAE,iBAAiB,CAAC,UAAU,IAAI,EAAE;YAC9C,cAAc,EAAE,iBAAiB,CAAC,cAAc,IAAI,EAAE;YACtD,iBAAiB,EAAE,iBAAiB,CAAC,aAAa,CAAC,iBAAiB,IAAI,EAAE;YAC1E,OAAO,EAAE,iBAAiB,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE;YACtD,OAAO,EAAE,iBAAiB,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE;YACtD,MAAM,EAAE,iBAAiB,CAAC,aAAa,CAAC,MAAM,KAAK,yBAAM,CAAC,IAAI;SAC/D,CAAC;QACF,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC;QAElD,gBAAgB,CAAC,cAAc,GAAG,CAAC,CAAC;QAEpC,IAAM,OAAO,GAAc,iBAAiB,CAAC,oBAAoB,EAAE,CAAC;QAEpE,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9B,IAAM,WAAW,GAAW,EAAE,CAAC;YAC/B,aAAa,CAAC,gBAAgB,CAAC,YAAY,CAAC,GAAG,WAAW,CAAC;YAE3D,GAAG,CAAC,CAAkB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;gBAAxB,IAAM,OAAO,gBAAA;gBAChB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;aAClC;QACH,CAAC;IACH,CAAC;IAES,uCAAY,GAAtB,UAAuB,OAAgB,EAAE,SAAkB;QACzD,IAAM,UAAU,GAAW,EAAE,CAAC;QAC9B,IAAM,QAAQ,GAAW;YACvB,IAAI,EAAE,qBAAW,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC;YACjD,MAAM,EAAE,UAAU;YAClB,iBAAiB,EAAE,OAAO,CAAC,aAAa,CAAC,iBAAiB,IAAI,EAAE;YAChE,OAAO,EAAE,OAAO,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE;YAC5C,OAAO,EAAE,OAAO,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE;YAC5C,MAAM,EAAE,OAAO,CAAC,aAAa,CAAC,MAAM,KAAK,yBAAM,CAAC,IAAI;SACrD,CAAC;QACF,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;QAEnC,GAAG,CAAC,CAAkB,UAA8B,EAA9B,KAAA,OAAO,CAAC,oBAAoB,EAAE,EAA9B,cAA8B,EAA9B,IAA8B;YAA/C,IAAM,OAAO,SAAA;YAChB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;SACjC;IACH,CAAC;IAES,4CAAiB,GAA3B,UAA4B,YAA0B,EAAE,SAAkB;QACxE,IAAM,WAAW,GAAmB,YAAY,CAAC,cAAc,EAAE,CAAC;QAClE,IAAM,UAAU,GAAY,WAAW,GAAG,WAAW,CAAC,aAAa,EAAE,GAAG,SAAS,CAAC;QAClF,IAAM,SAAS,GAAY,WAAW,GAAG,WAAW,CAAC,YAAY,EAAE,GAAG,SAAS,CAAC;QAEhF,IAAM,KAAK,GAAW,SAAS,IAAI,SAAS,KAAK,UAAU,GAAG,SAAS,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC;QAEvF,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG;YAC7B,IAAI,EAAE,qBAAW,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC;YACtD,KAAK,EAAE,KAAK;YACZ,iBAAiB,EAAE,YAAY,CAAC,aAAa,CAAC,iBAAiB,IAAI,EAAE;YACrE,OAAO,EAAE,YAAY,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE;YACjD,OAAO,EAAE,YAAY,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE;YACjD,MAAM,EAAE,YAAY,CAAC,aAAa,CAAC,MAAM,KAAK,yBAAM,CAAC,IAAI;SAC1D,CAAC;IACJ,CAAC;IAES,2CAAgB,GAA1B,UAA2B,WAAwB,EAAE,SAAkB;QACrE,GAAG,CAAC,CAAgB,UAAkB,EAAlB,KAAA,WAAW,CAAC,MAAM,EAAlB,cAAkB,EAAlB,IAAkB;YAAjC,IAAM,KAAK,SAAA;YACd,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;SAC7E;QACD,IAAM,eAAe,GAAY;YAC/B,IAAI,EAAE,WAAW,CAAC,UAAU;YAC5B,WAAW,EAAE,WAAW,CAAC,aAAa,CAAC,cAAc;SACtD,CAAC;QAEF,IAAM,OAAO,GAAW;YACtB,IAAI,EAAE,qBAAW,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC;YACrD,WAAW,EAAE,eAAe;YAC5B,UAAU,EAAE,WAAW,CAAC,aAAa,CAAC,UAAU;YAChD,iBAAiB,EAAE,WAAW,CAAC,aAAa,CAAC,iBAAiB,IAAI,EAAE;YACpE,OAAO,EAAE,WAAW,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE;YAChD,OAAO,EAAE,WAAW,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE;YAChD,MAAM,EAAE,WAAW,CAAC,aAAa,CAAC,MAAM,KAAK,yBAAM,CAAC,IAAI;SACzD,CAAC;QAEF,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;IACxC,CAAC;IAES,0CAAe,GAAzB,UAA0B,UAAsB,EAAE,SAAkB;QAClE,sCAAsC;QACtC,SAAS,CAAC,MAAM,CAAC,GAAG,qBAAW,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACnE,SAAS,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC;QACxD,SAAS,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC;QACxD,qCAAqC;QAErC,IAAM,WAAW,GAAW,EAAE,CAAC;QAC/B,SAAS,CAAC,gBAAgB,CAAC,YAAY,CAAC,GAAG,WAAW,CAAC;QAEvD,GAAG,CAAC,CAAkB,UAAiC,EAAjC,KAAA,UAAU,CAAC,oBAAoB,EAAE,EAAjC,cAAiC,EAAjC,IAAiC;YAAlD,IAAM,OAAO,SAAA;YAChB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;SAClC;IACH,CAAC;IAES,yCAAc,GAAxB,UAAyB,SAAoB,EAAE,SAAkB;QAC/D,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,YAAY,GAAG,SAAS,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC;IAC7E,CAAC;IAES,2CAAgB,GAA1B,UAA2B,WAAwB,EAAE,SAAkB;QACrE,EAAE,CAAC,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;YACpE,MAAM,CAAC;QACT,CAAC;QAED,IAAM,OAAO,GAAW;YACtB,IAAI,EAAE,qBAAW,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC;YACrD,UAAU,EAAE,CAAC,CAAC,WAAW,CAAC,UAAU;YACpC,UAAU,EAAE,CAAC,CAAC,WAAW,CAAC,UAAU;YACpC,QAAQ,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ;YAChC,IAAI,EAAE,WAAW,CAAC,IAAI;YACtB,iBAAiB,EAAE,WAAW,CAAC,aAAa,CAAC,iBAAiB,IAAI,EAAE;YACpE,OAAO,EAAE,WAAW,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE;YAChD,OAAO,EAAE,WAAW,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE;YAChD,MAAM,EAAE,WAAW,CAAC,aAAa,CAAC,MAAM,KAAK,yBAAM,CAAC,IAAI;SACzD,CAAC;QAEF,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;IACxC,CAAC;IAES,yCAAc,GAAxB,UAAyB,SAAoB,EAAE,SAAkB;QAC/D,GAAG,CAAC,CAAgB,UAAgB,EAAhB,KAAA,SAAS,CAAC,MAAM,EAAhB,cAAgB,EAAhB,IAAgB;YAA/B,IAAM,KAAK,SAAA;YACd,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,SAAS,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;SAC3E;QAED,IAAI,OAAe,CAAC;QACpB,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,eAAe,CAAC,CAAC,CAAC;YACvC,OAAO,GAAG;gBACR,IAAI,EAAE,qBAAW,CAAC,iBAAiB,CAAC,qBAAW,CAAC,WAAW,CAAC;gBAC5D,SAAS,EAAE,SAAS,CAAC,kBAAkB,EAAE;gBACzC,UAAU,EAAE,SAAS,CAAC,aAAa,CAAC,UAAU;gBAC9C,iBAAiB,EAAE,SAAS,CAAC,aAAa,CAAC,iBAAiB,IAAI,EAAE;gBAClE,OAAO,EAAE,SAAS,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE;gBAC9C,OAAO,EAAE,SAAS,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE;aAC/C,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,eAAe,GAAY;gBAC/B,IAAI,EAAE,SAAS,CAAC,UAAU;gBAC1B,WAAW,EAAE,SAAS,CAAC,aAAa,CAAC,cAAc;aACpD,CAAC;YAEF,OAAO,GAAG;gBACR,IAAI,EAAE,qBAAW,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC;gBACnD,SAAS,EAAE,SAAS,CAAC,kBAAkB,EAAE;gBACzC,cAAc,EAAE,SAAS,CAAC,cAAc,GAAG,0BAAc,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,GAAG,EAAE;gBACtG,UAAU,EAAE,CAAC,CAAC,SAAS,CAAC,UAAU;gBAClC,QAAQ,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ;gBAC9B,WAAW,EAAE,eAAe;gBAC5B,UAAU,EAAE,SAAS,CAAC,aAAa,CAAC,UAAU;gBAC9C,iBAAiB,EAAE,SAAS,CAAC,aAAa,CAAC,iBAAiB,IAAI,EAAE;gBAClE,OAAO,EAAE,SAAS,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE;gBAC9C,OAAO,EAAE,SAAS,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE;gBAC9C,MAAM,EAAE,SAAS,CAAC,aAAa,CAAC,MAAM,KAAK,yBAAM,CAAC,IAAI;aACvD,CAAC;QACJ,CAAC;QAED,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;IACtC,CAAC;IAES,wCAAa,GAAvB,UAAwB,QAAsB,EAAE,SAAkB;QAChE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACb,SAAoB,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;YACtD,SAAoB,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;YAClD,SAAoB,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC7C,CAAC;IACH,CAAC;IACH,uBAAC;AAAD,CAjNA,AAiNC,CAjN6C,wBAAc;AAC3C,+BAAc,GAAW,CAAC,CAAC;AAC3B,6BAAY,GAAW,SAAS,CAAC;AACjC,6BAAY,GAAW,SAAS,CAAC","file":"generators/ApiJsonGenerator.js","sourcesContent":["import * as os  from 'os';\r\nimport * as path from 'path';\r\nimport * as ts from 'typescript';\r\n\r\nimport Extractor from '../Extractor';\r\nimport ApiStructuredType from '../definitions/ApiStructuredType';\r\nimport ApiEnum from '../definitions/ApiEnum';\r\nimport ApiEnumValue from '../definitions/ApiEnumValue';\r\nimport ApiFunction from '../definitions/ApiFunction';\r\nimport ApiItem, { ApiItemKind } from '../definitions/ApiItem';\r\nimport ApiItemVisitor from '../ApiItemVisitor';\r\nimport ApiPackage from '../definitions/ApiPackage';\r\nimport ApiParameter from '../definitions/ApiParameter';\r\nimport ApiProperty from '../definitions/ApiProperty';\r\nimport ApiMember, { AccessModifier } from '../definitions/ApiMember';\r\nimport ApiMethod from '../definitions/ApiMethod';\r\nimport { ApiTag } from '../definitions/ApiDocumentation';\r\nimport { IReturn, IParam }from '../IDocElement';\r\nimport JsonFile from '../JsonFile';\r\nimport ApiJsonFile from './ApiJsonFile';\r\n\r\n/**\r\n  * For a library such as \"example-package\", ApiFileGenerator generates the \"example-package.api.ts\"\r\n  * report which is used to detect API changes.  The output is pseudocode whose syntax is similar\r\n  * but not identical to a \"*.d.ts\" typings file.  The output file is designed to be committed to\r\n  * Git with a branch policy that will trigger an API review workflow whenever the file contents\r\n  * have changed.  For example, the API file indicates *whether* a class has been documented,\r\n  * but it does not include the documentation text (since minor text changes should not require\r\n  * an API review).\r\n  */\r\nexport default class ApiJsonGenerator extends ApiItemVisitor {\r\n  private static _methodCounter: number = 0;\r\n  private static _MEMBERS_KEY: string = 'members';\r\n  private static _EXPORTS_KEY: string = 'exports';\r\n\r\n  // Only allow @public\r\n  protected apiTagsToSkip: ApiTag[] = [\r\n    ApiTag.Alpha,\r\n    ApiTag.Beta,\r\n    ApiTag.Internal\r\n  ];\r\n\r\n  protected jsonOutput: Object = {};\r\n\r\n  public writeJsonFile(reportFilename: string, extractor: Extractor): void {\r\n    this.visit(extractor.package, this.jsonOutput);\r\n\r\n    // Write the output before validating the schema, so we can debug it\r\n    JsonFile.saveJsonFile(reportFilename, this.jsonOutput);\r\n\r\n    // Validate that the output conforms to our JSON schema\r\n    const apiJsonSchema: { } = JsonFile.loadJsonFile(path.join(__dirname, '../schemas/api-json-schema.json'));\r\n\r\n    JsonFile.validateSchema(this.jsonOutput, apiJsonSchema,\r\n      (errorDetail: string): void => {\r\n        const errorMessage: string\r\n          = `ApiJsonGenerator validation error - output does not conform to api-json-schema.json:` + os.EOL\r\n          + reportFilename + os.EOL\r\n          + errorDetail;\r\n\r\n        console.log(os.EOL + 'ERROR: ' + errorMessage + os.EOL + os.EOL);\r\n        throw new Error(errorMessage);\r\n      }\r\n    );\r\n  }\r\n\r\n  protected visitApiStructuredType(apiStructuredType: ApiStructuredType, refObject?: Object): void {\r\n    const kind: string =\r\n      apiStructuredType.kind === ApiItemKind.Class ? ApiJsonFile.convertKindToJson(ApiItemKind.Class) :\r\n      apiStructuredType.kind === ApiItemKind.Interface ?\r\n        ApiJsonFile.convertKindToJson(ApiItemKind.Interface) : '';\r\n\r\n    const structureNode: Object = {\r\n      kind: kind,\r\n      extends: apiStructuredType.extends || '',\r\n      implements: apiStructuredType.implements || '',\r\n      typeParameters: apiStructuredType.typeParameters || [],\r\n      deprecatedMessage: apiStructuredType.documentation.deprecatedMessage || [],\r\n      summary: apiStructuredType.documentation.summary || [],\r\n      remarks: apiStructuredType.documentation.remarks || [],\r\n      isBeta: apiStructuredType.documentation.apiTag === ApiTag.Beta\r\n    };\r\n    refObject[apiStructuredType.name] = structureNode;\r\n\r\n    ApiJsonGenerator._methodCounter = 0;\r\n\r\n    const members: ApiItem[] = apiStructuredType.getSortedMemberItems();\r\n\r\n    if (members && members.length) {\r\n      const membersNode: Object = {};\r\n      structureNode[ApiJsonGenerator._MEMBERS_KEY] = membersNode;\r\n\r\n      for (const apiItem of members) {\r\n        this.visit(apiItem, membersNode);\r\n      }\r\n    }\r\n  }\r\n\r\n  protected visitApiEnum(apiEnum: ApiEnum, refObject?: Object): void {\r\n    const valuesNode: Object = {};\r\n    const enumNode: Object = {\r\n      kind: ApiJsonFile.convertKindToJson(apiEnum.kind),\r\n      values: valuesNode,\r\n      deprecatedMessage: apiEnum.documentation.deprecatedMessage || [],\r\n      summary: apiEnum.documentation.summary || [],\r\n      remarks: apiEnum.documentation.remarks || [],\r\n      isBeta: apiEnum.documentation.apiTag === ApiTag.Beta\r\n    };\r\n    refObject[apiEnum.name] = enumNode;\r\n\r\n    for (const apiItem of apiEnum.getSortedMemberItems()) {\r\n      this.visit(apiItem, valuesNode);\r\n    }\r\n  }\r\n\r\n  protected visitApiEnumValue(apiEnumValue: ApiEnumValue, refObject?: Object): void {\r\n    const declaration: ts.Declaration = apiEnumValue.getDeclaration();\r\n    const firstToken: ts.Node = declaration ? declaration.getFirstToken() : undefined;\r\n    const lastToken: ts.Node = declaration ? declaration.getLastToken() : undefined;\r\n\r\n    const value: string = lastToken && lastToken !== firstToken ? lastToken.getText() : '';\r\n\r\n    refObject[apiEnumValue.name] = {\r\n      kind: ApiJsonFile.convertKindToJson(apiEnumValue.kind),\r\n      value: value,\r\n      deprecatedMessage: apiEnumValue.documentation.deprecatedMessage || [],\r\n      summary: apiEnumValue.documentation.summary || [],\r\n      remarks: apiEnumValue.documentation.remarks || [],\r\n      isBeta: apiEnumValue.documentation.apiTag === ApiTag.Beta\r\n    };\r\n  }\r\n\r\n  protected visitApiFunction(apiFunction: ApiFunction, refObject?: Object): void {\r\n    for (const param of apiFunction.params) {\r\n      this.visitApiParam(param, apiFunction.documentation.parameters[param.name]);\r\n    }\r\n    const returnValueNode: IReturn = {\r\n      type: apiFunction.returnType,\r\n      description: apiFunction.documentation.returnsMessage\r\n    };\r\n\r\n    const newNode: Object = {\r\n      kind: ApiJsonFile.convertKindToJson(apiFunction.kind),\r\n      returnValue: returnValueNode,\r\n      parameters: apiFunction.documentation.parameters,\r\n      deprecatedMessage: apiFunction.documentation.deprecatedMessage || [],\r\n      summary: apiFunction.documentation.summary || [],\r\n      remarks: apiFunction.documentation.remarks || [],\r\n      isBeta: apiFunction.documentation.apiTag === ApiTag.Beta\r\n    };\r\n\r\n    refObject[apiFunction.name] = newNode;\r\n  }\r\n\r\n  protected visitApiPackage(apiPackage: ApiPackage, refObject?: Object): void {\r\n    /* tslint:disable:no-string-literal */\r\n    refObject['kind'] = ApiJsonFile.convertKindToJson(apiPackage.kind);\r\n    refObject['summary'] = apiPackage.documentation.summary;\r\n    refObject['remarks'] = apiPackage.documentation.remarks;\r\n    /* tslint:enable:no-string-literal */\r\n\r\n    const membersNode: Object = {};\r\n    refObject[ApiJsonGenerator._EXPORTS_KEY] = membersNode;\r\n\r\n    for (const apiItem of apiPackage.getSortedMemberItems()) {\r\n      this.visit(apiItem, membersNode);\r\n    }\r\n  }\r\n\r\n  protected visitApiMember(apiMember: ApiMember, refObject?: Object): void {\r\n    refObject[apiMember.name] = 'apiMember-' + apiMember.getDeclaration().kind;\r\n  }\r\n\r\n  protected visitApiProperty(apiProperty: ApiProperty, refObject?: Object): void {\r\n    if (apiProperty.getDeclaration().kind === ts.SyntaxKind.SetAccessor) {\r\n      return;\r\n    }\r\n\r\n    const newNode: Object = {\r\n      kind: ApiJsonFile.convertKindToJson(apiProperty.kind),\r\n      isOptional: !!apiProperty.isOptional,\r\n      isReadOnly: !!apiProperty.isReadOnly,\r\n      isStatic: !!apiProperty.isStatic,\r\n      type: apiProperty.type,\r\n      deprecatedMessage: apiProperty.documentation.deprecatedMessage || [],\r\n      summary: apiProperty.documentation.summary || [],\r\n      remarks: apiProperty.documentation.remarks || [],\r\n      isBeta: apiProperty.documentation.apiTag === ApiTag.Beta\r\n    };\r\n\r\n    refObject[apiProperty.name] = newNode;\r\n  }\r\n\r\n  protected visitApiMethod(apiMethod: ApiMethod, refObject?: Object): void {\r\n    for (const param of apiMethod.params) {\r\n      this.visitApiParam(param, apiMethod.documentation.parameters[param.name]);\r\n    }\r\n\r\n    let newNode: Object;\r\n    if (apiMethod.name === '__constructor') {\r\n      newNode = {\r\n        kind: ApiJsonFile.convertKindToJson(ApiItemKind.Constructor),\r\n        signature: apiMethod.getDeclarationLine(),\r\n        parameters: apiMethod.documentation.parameters,\r\n        deprecatedMessage: apiMethod.documentation.deprecatedMessage || [],\r\n        summary: apiMethod.documentation.summary || [],\r\n        remarks: apiMethod.documentation.remarks || []\r\n      };\r\n    } else {\r\n      const returnValueNode: IReturn = {\r\n        type: apiMethod.returnType,\r\n        description: apiMethod.documentation.returnsMessage\r\n      };\r\n\r\n      newNode = {\r\n        kind: ApiJsonFile.convertKindToJson(apiMethod.kind),\r\n        signature: apiMethod.getDeclarationLine(),\r\n        accessModifier: apiMethod.accessModifier ? AccessModifier[apiMethod.accessModifier].toLowerCase() : '',\r\n        isOptional: !!apiMethod.isOptional,\r\n        isStatic: !!apiMethod.isStatic,\r\n        returnValue: returnValueNode,\r\n        parameters: apiMethod.documentation.parameters,\r\n        deprecatedMessage: apiMethod.documentation.deprecatedMessage || [],\r\n        summary: apiMethod.documentation.summary || [],\r\n        remarks: apiMethod.documentation.remarks || [],\r\n        isBeta: apiMethod.documentation.apiTag === ApiTag.Beta\r\n      };\r\n    }\r\n\r\n    refObject[apiMethod.name] = newNode;\r\n  }\r\n\r\n  protected visitApiParam(apiParam: ApiParameter, refObject?: Object): void {\r\n    if (refObject) {\r\n      (refObject as IParam).isOptional = apiParam.isOptional;\r\n      (refObject as IParam).isSpread = apiParam.isSpread;\r\n      (refObject as IParam).type = apiParam.type;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}