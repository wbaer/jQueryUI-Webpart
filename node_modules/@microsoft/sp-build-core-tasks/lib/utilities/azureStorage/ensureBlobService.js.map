{"version":3,"sources":["utilities/azureStorage/ensureBlobService.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;;AAEH,qCAAwC;AAExC,2BAA0C,OAAe,EAAE,UAAkB;IAC3E,MAAM,CAAC,IAAI,OAAO,CAAoB,UAAC,OAAyC,EACzC,MAA8B;QACjE,IAAI,CAAC;YACH,IAAM,WAAW,GAAsB,KAAK,CAAC,iBAAiB,CAAC,OAAO,EAAE,UAAU,CAAC;iBACtC,UAAU,CAAC,IAAI,KAAK,CAAC,4BAA4B,EAAE,CAAC,CAAC;YAElG,OAAO,CAAC,WAAW,CAAC,CAAC;QACvB,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC,CACF,CAAC;AACJ,CAAC;;AAbD,oCAaC","file":"utilities/azureStorage/ensureBlobService.js","sourcesContent":["/**\r\n * @file ensureBlobService.d.ts\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * Connects to the Azure Blob Storage service and returns a connection object\r\n */\r\n\r\nimport azure = require('azure-storage');\r\n\r\nexport default function ensureBlobService(account: string, accountKey: string): Promise<IAzureBlobService> {\r\n  return new Promise<IAzureBlobService>((resolve: (svc: IAzureBlobService) => void,\r\n                                         reject: (error: Error) => void) => {\r\n      try {\r\n        const blobService: IAzureBlobService = azure.createBlobService(account, accountKey)\r\n                                                    .withFilter(new azure.ExponentialRetryPolicyFilter());\r\n\r\n        resolve(blobService);\r\n      } catch (error) {\r\n        reject(new Error(error));\r\n      }\r\n    }\r\n  );\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}