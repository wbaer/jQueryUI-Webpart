import ICanvasControl from '../canvasControl/ICanvasControl';
import { IControlPosition, ILayoutItem, ILayoutPart } from './ICanvasLayout';
/**
 * Represents the Canvas Section Layout Part
 */
export default class CanvasSectionPart implements ILayoutItem, ILayoutPart {
    static readonly emptySectionId: 'emptySection';
    private _index;
    private _factor;
    private _controlsMap;
    /**
     * Creates a new instance of a CanvasSectionPart
     * @param sectionIdx represents the section index
     */
    constructor(sectionIdx: number, factor?: number);
    readonly emptySectionControl: ICanvasControl;
    /**
     * Gets the section factor.
     * @returns The section factor.
     */
    readonly factor: number;
    /**
     * Gets the index associated with this section
     * @returns the section index
     */
    readonly index: number;
    /**
     * Gets the controls associated with the current section
     * @returns the controls in that section
     */
    readonly controls: ICanvasControl[];
    /**
     * Adds a new control in the pertinent section
     * @param control represents the control to add
     * @returns id of control that was added
     */
    addControl(canvasControl: ICanvasControl): string;
    /**
     * Removes a control
     * @param controlPosition represents the control to remove
     * @returns id of control that was removed
     */
    removeControl(controlPosition: IControlPosition): string;
    /**
     * Fetches a control from the layout
     * @param controlPosition represents the position of the control
     * @returns the underlying control if available in the section
     */
    fetchControl(controlPosition: IControlPosition): ICanvasControl;
    /**
     * Fetch all controls that are available in that section
     * @returns all the controls associated with the section
     */
    fetchAllControls(): Array<ICanvasControl>;
    /**
     * Determines if the underlying layout is empty
     * @returns true if the section is empty
     */
    isEmpty(): boolean;
    /**
     * Disposes the section
     */
    dispose(): void;
    /**
     * Change the section factor of the section.
     *
     * @param newFactor - The new section factor.
     */
    changeFactor(newFactor: number): void;
}
