"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Validate_1 = require("./Validate");
var SPError = (function (_super) {
    __extends(SPError, _super);
    function SPError(errorCode, message, logProperties) {
        var _this = _super.call(this, message) || this;
        _this.__proto__ = SPError.prototype; 
        Validate_1.default.isNonemptyString(errorCode, 'errorCode');
        Validate_1.default.isNonemptyString(message, 'message');
        _this._errorCode = errorCode;
        _this.message = message;
        _this._logProperties = logProperties;
        _this.stack = (new Error()).stack;
        return _this;
    }
    Object.defineProperty(SPError.prototype, "id", {
        get: function () {
            return -1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPError.prototype, "category", {
        get: function () {
            return 'SPError';
        },
        enumerable: true,
        configurable: true
    });
    SPError.prototype.toStringForUI = function () {
        return this._toString(true);
    };
    SPError.prototype.toString = function () {
        return this._toString();
    };
    SPError.prototype._toString = function (logDebug) {
        if (!this._errorString) {
            this._errorString = "[" + this.category + "." + this._errorCode + "]:: " + this.message;
        }
        if (logDebug || DEBUG) {
            if (this.innerError) {
                this._errorString += " INNERERROR:: " + this.innerError.message;
            }
            if (this.stack) {
                this._errorString += " CALLSTACK:: " + this.stack;
            }
            if (this._logProperties) {
                this._errorString += " LOGPROPERTIES:: " + JSON.stringify(this._logProperties);
            }
        }
        return this._errorString;
    };
    return SPError;
}(Error));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SPError;
