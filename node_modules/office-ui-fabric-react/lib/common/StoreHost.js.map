{"version":3,"sources":["common/StoreHost.tsx"],"names":[],"mappings":";;;;;;AAAA,6BAA+B;AAW/B;IAA+B,6BAAoC;IAAnE;;IAqBA,CAAC;IAVQ,mCAAe,GAAtB;QACQ,IAAA,kCAAoB,CAAkB;QACtC,IAAA,iCAAqB,CAAgB;QAE3C,MAAM,CAAC,EAAE,MAAM,EAAE,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,aAAa,EAAE,CAAC;IACtF,CAAC;IAEM,0BAAM,GAAb;QACE,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAClD,CAAC;IACH,gBAAC;AAAD,CArBA,AAqBC,CArB8B,KAAK,CAAC,SAAS;AAC9B,sBAAY,GAAG;IAC3B,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;CAC/B,CAAC;AAEY,2BAAiB,GAAG;IAChC,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;CAC/B,CAAC;AAPS,8BAAS","file":"common/StoreHost.js","sourcesContent":["import * as React from 'react';\r\nimport { StoreSet } from './StoreSet';\r\n\r\nexport interface IStoreHostProps extends React.Props<StoreHost> {\r\n  stores?: StoreSet;\r\n}\r\n\r\nexport interface IStoreHostContext {\r\n  stores?: StoreSet;\r\n}\r\n\r\nexport class StoreHost extends React.Component<IStoreHostProps, {}> {\r\n  public static contextTypes = {\r\n    stores: React.PropTypes.object\r\n  };\r\n\r\n  public static childContextTypes = {\r\n    stores: React.PropTypes.object\r\n  };\r\n\r\n  public context: IStoreHostContext;\r\n\r\n  public getChildContext(): IStoreHostContext {\r\n    let { stores: parentStores } = this.context;\r\n    let { stores: currentStores } = this.props;\r\n\r\n    return { stores: parentStores ? parentStores.merge(currentStores) : currentStores };\r\n  }\r\n\r\n  public render() {\r\n    return React.Children.only(this.props.children);\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}