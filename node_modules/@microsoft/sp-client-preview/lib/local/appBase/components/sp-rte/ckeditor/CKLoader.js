"use strict";
var sp_telemetry_1 = require("@ms/sp-telemetry");
var odsp_utilities_bundle_1 = require("@ms/odsp-utilities-bundle");
var RESOURCES_PATH = __webpack_public_path__;
var CKEDITOR_PATH_KEY = 'CKEDITOR_BASEPATH';
var CKLoader = (function () {
    function CKLoader() {
    }
    CKLoader.prototype.loadModule = function (editorSrc) {
        if (!CKLoader._editorPromise) {
            window[CKEDITOR_PATH_KEY] = editorSrc || odsp_utilities_bundle_1.Uri.concatenate(RESOURCES_PATH, '/ckeditor/');
            CKLoader._editorPromise = new Promise(function (complete) {
                if (editorSrc) {
                    require.ensure(['ckeditor'], function (require) {
                        var editor = require('ckeditor');
                        CKLoader._editorModule = editor;
                        complete(editor);
                    }, 'sp-client-preview-ckeditor');
                }
                else {
                    require.ensure(['./../../../../temporary-patches/ckeditor.js'], function (require) {
                        var editor = require('./../../../../temporary-patches/ckeditor.js');
                        CKLoader._editorModule = editor;
                        complete(editor);
                    }, 'sp-client-preview-ckeditor');
                }
            });
            CKLoader._editorPromise.catch(function (error) {
                sp_telemetry_1._TraceLogger.logError(CKLoader.logSource, error);
            });
        }
        return CKLoader._editorPromise;
    };
    return CKLoader;
}());
CKLoader.logSource = sp_telemetry_1._LogSource.create('SPRteCKLoader');
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = CKLoader;
