/// <reference types="es6-promise" />
import { ServiceScope } from '@microsoft/sp-core-library';
import { IPageContextData } from '../PageContext';
/**
  * The page context represents contextual information about the SharePoint page that
  * is currently being viewed, such as its site URL, the client side application ID,
  * the current user, etc.  The page context objects themselves represent key information
  * that is needed e.g. to identify the site/web/list/listitem in a REST service call,
  * but it is not a full cache with invalidation and change notifications.
  * @alpha
  */
export default class SharePointPageContextDataProvider {
    private _httpClient;
    /**
     * Populates the webPart pageContext using the data from the app Page Context. AppPageContext
     * must be populated already.
     * @internal
     */
    static _createPageContextData(spPageContextInfo: any): IPageContextData;
    constructor(serviceScope: ServiceScope);
    /**
     * This function is responsible for fetching important data in the PageContext that is likely
     * to become obsolute after changing pages.
     * @param serverRelativePageUrl - a SharePoint url that we want data from.
     */
    fetchComponentContextInfo(serverRelativePageUrl: string): Promise<any>;
}
