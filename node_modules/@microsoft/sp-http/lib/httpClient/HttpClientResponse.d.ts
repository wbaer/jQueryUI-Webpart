/// <reference types="whatwg-fetch" />
/// <reference types="es6-promise" />
/**
 * The Response subclass returned by methods such as HttpClient.fetch().
 * @remarks
 * This is a placeholder.  In the future, additional HttpClient-specific functionality
 * may be added to this class.
 *
 * @internalremarks
 * This class exposes the same members as our typings for the browser's native
 * Response and Body classes, which is why we can say that it "implements" them.
 * It cannot actually inherit from Response because that class does not have a copy
 * constructor (because it would probably be inefficient to copy the response stream).
 *
 * @public
 */
export default class HttpClientResponse implements Response, Body {
    protected nativeResponse: Response;
    /**
     * @internal
     */
    constructor(response: Response);
    /**
     * {@inheritdoc Body.bodyUsed}
     */
    readonly bodyUsed: boolean;
    /**
     * {@inheritdoc Body.arrayBuffer}
     */
    arrayBuffer(): Promise<ArrayBuffer>;
    /**
     * {@inheritdoc Body.blob}
     */
    blob(): Promise<Blob>;
    /**
     * {@inheritdoc Body.formData}
     */
    formData(): Promise<FormData>;
    /**
     * {@inheritdoc Body.json}
     */
    json(): Promise<any>;
    /**
     * {@inheritdoc Body.text}
     */
    text(): Promise<string>;
    /**
     * {@inheritdoc Response.type}
     */
    readonly type: ResponseType;
    /**
     * {@inheritdoc Response.url}
     */
    readonly url: string;
    /**
     * {@inheritdoc Response.status}
     */
    readonly status: number;
    /**
     * {@inheritdoc Response.ok}
     */
    readonly ok: boolean;
    /** {@inheritdoc Response.statusText}
  
    */
    readonly statusText: string;
    /** {@inheritdoc Response.headers}
  
    */
    readonly headers: Headers;
    clone(): HttpClientResponse;
}
