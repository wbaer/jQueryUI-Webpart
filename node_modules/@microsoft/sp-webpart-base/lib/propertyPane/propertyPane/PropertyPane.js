"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var React = require("react");
var ReactDOM = require("react-dom");
var decorators_1 = require("@microsoft/decorators");
var sp_client_base_1 = require("@microsoft/sp-client-base");
var PropertyPaneDefinitions_1 = require("./PropertyPaneDefinitions");
var PropertyPanePage_1 = require("../propertyPanePage/PropertyPanePage");
var PropertyPaneTitleBar_1 = require("../propertyPaneTitleBar/PropertyPaneTitleBar");
var PropertyPaneFooter_1 = require("../propertyPaneFooter/PropertyPaneFooter");
var Strings_resx_1 = require("../loc/Strings.resx");
var PropertyPane_module_scss_1 = require("./PropertyPane.module.scss");
var PropertyPanePage_module_scss_1 = require("../propertyPanePage/PropertyPanePage.module.scss");
var office_ui_fabric_react_1 = require("office-ui-fabric-react");
var CanvasA11y_1 = require("../../utils/CanvasA11y");
var PageDirection;
(function (PageDirection) {
    PageDirection[PageDirection["back"] = -1] = "back";
    PageDirection[PageDirection["next"] = 1] = "next";
})(PageDirection = exports.PageDirection || (exports.PageDirection = {}));
var CLEAR_DELAY = 100;
var NO_WEBPART_ID = 'No_Web_Part_ID';
var PropertyPane = (function (_super) {
    __extends(PropertyPane, _super);
    function PropertyPane(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isSaveButtonEnabled: false,
            saveConfirmationMessage: '',
            currentPage: 1
        };
        _this._currentlyConfiguredWebPartId = props.data.webPartId;
        _this._onChange = _this._onChange.bind(_this);
        _this._onPropertyPaneKeyDown = _this._onPropertyPaneKeyDown.bind(_this);
        _this._flipPage = _this._flipPage.bind(_this);
        _this._handleSaveClick = _this._handleSaveClick.bind(_this);
        _this._handleCloseClick = _this._handleCloseClick.bind(_this);
        _this._propertyPaneShouldLooseFocus = _this._propertyPaneShouldLooseFocus.bind(_this);
        _this._setContainerDiv = _this._setContainerDiv.bind(_this);
        _this._invalidEntries = {};
        return _this;
    }
    PropertyPane.prototype.componentWillReceiveProps = function (props) {
        if (this._currentlyConfiguredWebPartId !== props.data.webPartId || props.data.shouldResetState) {
            var webPartId = props.data.webPartId ? props.data.webPartId : NO_WEBPART_ID;
            this._resetState(webPartId);
        }
        else {
            this.setState({
                saveConfirmationMessage: ''
            });
        }
    };
    PropertyPane.prototype.componentDidMount = function () {
        var domNode = ReactDOM.findDOMNode(this);
        domNode.style.zIndex = '999';
        if (this.props.data.onRendered) {
            this.props.data.onRendered();
        }
        this._setTimeOutForFocus();
    };
    PropertyPane.prototype.componentDidUpdate = function (props) {
        if (this._isPropertyPaneReplaced) {
            this._updateTabIndexes(0, true);
            this._setTimeOutForFocus();
            this._isPropertyPaneReplaced = false;
        }
        if (this.props.data.onRendered) {
            this.props.data.onRendered();
        }
    };
    PropertyPane.prototype.shouldComponentUpdate = function (nextProps, nextState) {
        return !sp_client_base_1.Compare.shallowCompare(this.props, nextProps) ||
            !sp_client_base_1.Compare.shallowCompare(this.state, nextState) ||
            !!(nextProps.data.configuration && nextProps.data.configuration.showLoadingIndicator);
    };
    PropertyPane.prototype.render = function () {
        var _this = this;
        this._properties = this.props.data.properties;
        var showOverlaySpinner = this.props.data.configuration && this.props.data.configuration.showLoadingIndicator;
        var classForPropertyPanePageContentBottom = this._getClassForPropertyPanePageContentBottom();
        return (React.createElement(office_ui_fabric_react_1.Fabric, null,
            React.createElement("div", { role: 'alert', "aria-live": 'polite', className: PropertyPane_module_scss_1.default.propertyPaneScreenReaderOnly },
                React.createElement("span", null, this.state.saveConfirmationMessage)),
            React.createElement(office_ui_fabric_react_1.FocusTrapZone, { isClickableOutsideFocusTrap: true, firstFocusableSelector: this._cssClassForActionableElement, forceFocusInsideTrap: false },
                React.createElement("div", { className: office_ui_fabric_react_1.css('ms-font-m', PropertyPane_module_scss_1.default.propertyPane), role: 'dialog', "aria-labelledby": 'propertyPaneTitleId', "aria-describedby": this._descriptionId, ref: function (c) { return _this._propertyPane = c; }, onKeyDown: this._onPropertyPaneKeyDown, key: this.props.data.webPartId },
                    showOverlaySpinner && (React.createElement(office_ui_fabric_react_1.Overlay, { className: PropertyPane_module_scss_1.default.overlay },
                        React.createElement(office_ui_fabric_react_1.Spinner, { className: PropertyPane_module_scss_1.default.spinner, type: office_ui_fabric_react_1.SpinnerType.large, label: Strings_resx_1.default.PropertyPaneFetchingSettingsDataLabel }))),
                    React.createElement(PropertyPaneTitleBar_1.default, { title: this.props.data.title, onClose: this._handleCloseClick }),
                    React.createElement("div", { className: office_ui_fabric_react_1.css(classForPropertyPanePageContentBottom, PropertyPanePage_module_scss_1.default.propertyPanePageContent) }, this._shouldRenderEmptyPage ? this._renderNoConfigurationState() : this._renderPage()),
                    React.createElement(PropertyPaneFooter_1.default, { isReactive: this.props.data.isReactive || false, isSaveButtonEnabled: this.state.isSaveButtonEnabled, numberOfPages: (this.props.data.configuration &&
                            this.props.data.configuration.pages &&
                            this.props.data.configuration.pages.length) ? this.props.data.configuration.pages.length : 0, currentPage: this.state.currentPage, onSaveClick: this._handleSaveClick, onFlipPage: this._flipPage })))));
    };
    PropertyPane.prototype._renderNoConfigurationState = function () {
        return (React.createElement("div", { role: 'alert', "aria-live": 'polite', className: PropertyPane_module_scss_1.default.propertyPaneDescription }, Strings_resx_1.default.PropertyPaneEmptyStateDescription));
    };
    Object.defineProperty(PropertyPane.prototype, "_descriptionId", {
        get: function () {
            var page = undefined;
            if (this.props.data.configuration && this.props.data.configuration.pages) {
                var pages = this.props.data.configuration.pages;
                page = pages[this.state.currentPage - 1];
            }
            return (page && page.header && page.header.description) ? 'propertyPaneDescriptionId' : undefined;
        },
        enumerable: true,
        configurable: true
    });
    PropertyPane.prototype._renderPage = function () {
        var _this = this;
        var pages = this.props.data.configuration.pages;
        var page = pages[this.state.currentPage - 1];
        return (React.createElement(PropertyPanePage_1.default, { pageDescription: page.header ? page.header.description : '', displayGroupsAsAccordion: page.displayGroupsAsAccordion || false, onChange: this._onChange.bind(this), propertyGroups: page.groups, properties: this._properties, setEntryState: function (targetProperty, isValidEntry) {
                _this._setEntryState(targetProperty, isValidEntry);
            }, setContainerDiv: this._setContainerDiv }));
    };
    PropertyPane.prototype._setContainerDiv = function (containerDiv) {
        this._propertyPaneContent = containerDiv;
    };
    Object.defineProperty(PropertyPane.prototype, "_shouldRenderEmptyPage", {
        get: function () {
            return (!this.props.data.configuration ||
                !this.props.data.configuration.pages ||
                this.props.data.configuration.pages.length === 0 ||
                !this.props.data.configuration.pages[this.state.currentPage - 1].groups ||
                this.props.data.configuration.pages[this.state.currentPage - 1].groups.length === 0);
        },
        enumerable: true,
        configurable: true
    });
    PropertyPane.prototype._flipPage = function (direction) {
        var page = this.state.currentPage + direction;
        this.setState({
            currentPage: page
        });
        if (this.props.data.render) {
            this.props.data.render();
        }
        this._setTimeOutForFocus();
    };
    PropertyPane.prototype._setEntryState = function (targetProperty, isValidEntry) {
        if (isValidEntry) {
            if (this._invalidEntries.hasOwnProperty(targetProperty)) {
                delete this._invalidEntries[targetProperty];
            }
        }
        else {
            this._invalidEntries[targetProperty] = true;
        }
    };
    PropertyPane.prototype._enableSaveButton = function (enabled) {
        this.setState({
            isSaveButtonEnabled: enabled
        });
    };
    PropertyPane.prototype._onChange = function (targetProperty, value) {
        this._properties[targetProperty] = value;
        if (!this.props.data.isReactive) {
            this._enableSaveButton(Object.keys(this._invalidEntries).length === 0);
        }
        if (!this._invalidEntries.hasOwnProperty(targetProperty)) {
            this._raiseEvent(targetProperty, value);
        }
    };
    PropertyPane.prototype._handleSaveClick = function () {
        var _this = this;
        this.setState({
            saveConfirmationMessage: Strings_resx_1.default.SaveConfirmation
        });
        this._enableSaveButton(false);
        setTimeout(function () {
            _this.setState({
                saveConfirmationMessage: ''
            });
        }, CLEAR_DELAY);
        this.props.data.onConfigurationEvent(PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneApplyClicked);
    };
    PropertyPane.prototype._handleCloseClick = function () {
        this._resetState(NO_WEBPART_ID);
        this._updateTabIndexes(-1, false);
        this.props.data.onConfigurationEvent(PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneClosed);
    };
    PropertyPane.prototype._raiseEvent = function (targetProperty, value) {
        this.props.data.onPropertyPaneFieldChanged(targetProperty, value);
    };
    PropertyPane.prototype._onPropertyPaneKeyDown = function (ev) {
        if (CanvasA11y_1.isKey(office_ui_fabric_react_1.KeyCodes.escape, ev)) {
            ev.preventDefault();
            this._handleCloseClick();
        }
        else if (CanvasA11y_1.isKey(CanvasA11y_1.KeyCodes.P, ev, true)) {
            ev.preventDefault();
            this._propertyPaneShouldLooseFocus();
        }
    };
    PropertyPane.prototype._propertyPaneShouldLooseFocus = function () {
        this._resetState(NO_WEBPART_ID);
        this._updateTabIndexes(-1, false);
        this.props.data.onConfigurationEvent(PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneLostFocus);
    };
    PropertyPane.prototype._setTimeOutForFocus = function () {
        var _this = this;
        if (!this._isManagingFocusBySettings) {
            setTimeout(function () {
                var propertyPane = _this._shouldRenderEmptyPage ?
                    _this._propertyPane : _this._propertyPaneContent;
                _this._focusOnFirstActionableElement(propertyPane);
            }, 0);
        }
    };
    Object.defineProperty(PropertyPane.prototype, "_isManagingFocusBySettings", {
        get: function () {
            return this.props.data.configuration &&
                this.props.data.configuration.pages &&
                this.props.data.configuration.pages
                    .some(function (page) { return page.groups
                    .some(function (group) { return group.groupFields
                    .some(function (groupField) { return groupField.shouldFocus || false; }); }); });
        },
        enumerable: true,
        configurable: true
    });
    PropertyPane.prototype._focusOnFirstActionableElement = function (propertyPane) {
        if (propertyPane) {
            var firstElement = CanvasA11y_1.getFirstFocusableChild(propertyPane);
            if (firstElement) {
                firstElement.focus();
            }
        }
    };
    PropertyPane.prototype._updateTabIndexes = function (tabIndex, ignoreTabIndexes) {
        var rootElement = this._propertyPane;
        var elements = CanvasA11y_1.getFocusableChildren(rootElement, ignoreTabIndexes);
        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
            var el = elements_1[_i];
            el.tabIndex = tabIndex;
        }
    };
    PropertyPane.prototype._resetState = function (webPartId) {
        this._isPropertyPaneReplaced = true;
        this._currentlyConfiguredWebPartId = webPartId;
        this.setState({
            isSaveButtonEnabled: false,
            saveConfirmationMessage: '',
            currentPage: 1
        });
    };
    PropertyPane.prototype._getClassForPropertyPanePageContentBottom = function () {
        if (this.props.data.configuration &&
            this.props.data.configuration.pages &&
            this.props.data.configuration.pages.length &&
            this.props.data.configuration.pages.length > 1) {
            if (this.props.data.isReactive) {
                return PropertyPane_module_scss_1.default.oneRowFooter;
            }
            else {
                return PropertyPane_module_scss_1.default.twoRowFooter;
            }
        }
        return undefined;
    };
    return PropertyPane;
}(React.Component));
PropertyPane = __decorate([
    decorators_1.sealed
], PropertyPane);
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = PropertyPane;
