{"version":3,"sources":["GulpProxy.ts"],"names":[],"mappings":";;;;;;AACA,2CAA8C;AAE9C,oCAAoC;AACpC;;GAEG;AACH;IAA+B,6BAAY;IAOzC,mBAAY,YAAuB;QAAnC,YACE,iBAAO,SAKR;QAJC,KAAI,CAAC,KAAK,GAAG,YAAY,CAAC;QAC1B,KAAI,CAAC,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC;QAC5B,KAAI,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;QAC9B,KAAI,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;;IAClC,CAAC;IAED,qCAAqC;IAC9B,wBAAI,GAAX;QACE,MAAM,IAAI,KAAK,CACb,qIAAqI,CACtI,CAAC;IACJ,CAAC;IACH,gBAAC;AAAD,CArBA,AAqBC,CArB8B,YAAY,GAqB1C;AArBY,8BAAS","file":"GulpProxy.js","sourcesContent":["import gulp = require('gulp');\r\nimport Orchestrator = require('orchestrator');\r\n\r\n/* tslint:disable:max-line-length */\r\n/**\r\n * A helper utility for gulp which can be extended to provide additional features to gulp vinyl streams\r\n */\r\nexport class GulpProxy extends Orchestrator implements gulp.Gulp {\r\n  public src: gulp.SrcMethod;\r\n  public dest: gulp.DestMethod;\r\n  public watch: gulp.WatchMethod;\r\n\r\n  private _gulp: gulp.Gulp;\r\n\r\n  constructor(gulpInstance: gulp.Gulp) {\r\n    super();\r\n    this._gulp = gulpInstance;\r\n    this.src = gulpInstance.src;\r\n    this.dest = gulpInstance.dest;\r\n    this.watch = gulpInstance.watch;\r\n  }\r\n\r\n  /* tslint:disable-next-line:no-any */\r\n  public task(): any {\r\n    throw new Error(\r\n      'You should not define gulp tasks directly, but instead subclass the GulpTask or call subTask(), and register it to gulp-core-build.'\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\src"}