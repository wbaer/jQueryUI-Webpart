"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ReactDom = require("react-dom");
var sp_telemetry_1 = require("@ms/sp-telemetry");
var odsp_utilities_bundle_1 = require("@ms/odsp-utilities-bundle");
var office_ui_fabric_react_1 = require("office-ui-fabric-react");
var sp_lodash_subset_1 = require("@microsoft/sp-lodash-subset");
var BaseRte_1 = require("../BaseRte");
var CKEditorForWebPartRte_1 = require("./CKEditorForWebPartRte");
var SPRteCKEditorConfiguration_1 = require("../SPRteCKEditorConfiguration");
var RteA11y_1 = require("../../a11y/RteA11y");
var RteStrings_resx_1 = require("../../loc/RteStrings.resx");
var WebPartRte = (function (_super) {
    __extends(WebPartRte, _super);
    function WebPartRte(props) {
        var _this = _super.call(this, props, WebPartRte.defaultOptions) || this;
        _this.TAG_NAME = 'WebPartRte.';
        return _this;
    }
    WebPartRte._getFormattingBarDefaultPosition = function (isRtl) {
        if (isRtl === void 0) { isRtl = false; }
        var left = isRtl ? undefined : 0;
        var top = -202;
        var position = 'relative';
        var right = isRtl ? 0 : undefined;
        return { left: left, top: top, position: position, right: right };
    };
    WebPartRte.prototype._initState = function () {
        this.state = {
            displayMode: this.props.displayMode,
            formattingBarPosition: WebPartRte._getFormattingBarDefaultPosition(this._isRtl),
            isFormattingBarHidden: false,
            isLinkDialogOpen: false
        };
    };
    WebPartRte.prototype._afterEditorCreated = function (editor) {
        this._editor = editor;
        this._handleTextChange();
        var formattingbarElement = ReactDom.findDOMNode(this._formattingbar);
        this._editorElement.style.position = 'relative';
        this._editorElement.style.top = formattingbarElement.offsetHeight + "px";
        formattingbarElement.style.top = "-" + this._editorElement.offsetHeight + "px";
        this._editorElement.setAttribute('aria-label', odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.RichTextEditorIframeTitle, this.props.ariaLabel || '', RteStrings_resx_1.default.RichTextEditorAriaLabel));
        var iframe = this._editorElement.querySelector('iframe');
        if (iframe) {
            iframe.contentDocument.addEventListener('paste', this._onBeforePaste, true);
            iframe.contentDocument.addEventListener('keydown', this._handleKeyDown);
        }
    };
    WebPartRte.prototype._finalizeAction = function (ariaActionName) {
        _super.prototype._finalizeAction.call(this, ariaActionName);
        if (this.props.onChanged) {
            this.props.onChanged(this._editor ? this._editor.getHTML() : this.props.innerHTML);
        }
    };
    WebPartRte.prototype._handleKeyDown = function (evt) {
        if (RteA11y_1.isKey(RteA11y_1.KeyCodes.F10, evt, true) && this._formattingbarElement) {
            sp_telemetry_1._EngagementLogger.logEvent(this.TAG_NAME + 'ToolbarByKeyboardShortcut.Focus', evt.type);
            RteA11y_1.navigateInside(this._formattingbarElement);
            var screenReaderInstruction = odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.RichTextNavigationAltF10Keys, RteStrings_resx_1.default.ToolbarNavigationArrowKeys, RteStrings_resx_1.default.ToolbarNavigationShiftTabKey);
            RteA11y_1.ariaAlert(screenReaderInstruction);
            evt.stopPropagation();
            evt.preventDefault();
        }
        else if (RteA11y_1.isKey('K'.charCodeAt(0), evt, false, true)) {
            this._handleLink();
            evt.stopPropagation();
            evt.preventDefault();
        }
        else {
            this._redispatchKeyboardEvent(evt);
        }
    };
    WebPartRte.prototype._redispatchKeyboardEvent = function (evt) {
        var emptyEvent = document.createEvent('Event');
        emptyEvent.initEvent(evt.type, true, true);
        var clonedEvent = sp_lodash_subset_1.merge(emptyEvent, {
            keyCode: evt.keyCode,
            code: evt.code,
            which: evt.which,
            altKey: evt.altKey,
            ctrlKey: evt.ctrlKey
        });
        if (this._editorElement) {
            this._editorElement.dispatchEvent(clonedEvent);
        }
    };
    return WebPartRte;
}(BaseRte_1.BaseRte));
WebPartRte.defaultOptions = {
    editor: CKEditorForWebPartRte_1.default,
    config: new SPRteCKEditorConfiguration_1.default(),
    loader: CKEditorForWebPartRte_1.default.moduleLoader
};
__decorate([
    office_ui_fabric_react_1.autobind
], WebPartRte.prototype, "_handleKeyDown", null);
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = WebPartRte;
