/**
  * This interface is used to initialize AlternativeUrlMap class.
  *
  * @alpha
  */
export interface IAlternativeUrlTable {
    /**
     * For a given primaryUrl, this returns the alternativeUrl
     */
    [primaryUrl: string]: string;
}
/**
  * This enum defines sizes of the user photos.
  * Small is 48x48 px
  * Medium is 96x96 px
  * Large is as uploaded by the user
  *
  * @alpha
  */
export declare enum UserPhotoSize {
    /**
     * Small image is 48x48 px.
     */
    Small = 1,
    /**
     * Medium image is 96x96 px.
     */
    Medium = 2,
    /**
     * Large image dimensions are as uploaded by the user.
     */
    Large = 3,
}
/**
  * This class is used to map primary URLs of the SharePoint assets to
  * an alternative URLs with optimized access. The alternative URLs will be
  * commonly pointing to the CDN location.
  *
  * @alpha
  */
export declare class AlternativeUrlMap {
    private static _urlTable;
    /**
      * If an alternative URL is available, then this returns the URL that should be used
      * for rendering the image.  Otherwise, undefined is returned.
      */
    static tryGetAlternativeUrl(primaryUrl: string): string;
    /**
     * Updates the map by adding the specified entries, overwriting any previous entries
     * with the same key names.
     */
    static updateMap(alternativeUrlTable: IAlternativeUrlTable): void;
    /**
     * For diagnostic purposes, this returns the current map.
     * The key is the primaryUrl, and the value is the alternativeUrl.
     */
    static readonly UrlTable: Map<string, string>;
    /**
     * UserPhoto mapping is auto added into the Alternative URL map when private CDN is enabled
     * and tenant admin configured origin * /userphoto.aspx
     * If CDN is not enabled, the default _layouts/15/userphoto.aspx will be used.
     * Size parameter may have value S,L,M. If none or other is provided, S will be used by default.
     */
    static getUserPhotoUrl(accountName?: string, size?: UserPhotoSize): string;
}
