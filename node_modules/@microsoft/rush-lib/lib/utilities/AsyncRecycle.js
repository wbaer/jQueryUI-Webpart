// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
"use strict";
var child_process = require("child_process");
var os = require("os");
var path = require("path");
var fsx = require("fs-extra");
var Utilities_1 = require("./Utilities");
var AsyncRecycle = (function () {
    function AsyncRecycle() {
    }
    /**
     * Moves the specified directory into the recycler directory and asynchronously deletes the recycler directory.
     *  Delete will continue even if the node process is killed.
     */
    AsyncRecycle.recycleDirectory = function (rushConfiguration, directoryPath) {
        // We need to do a simple "fs.renameSync" here, however if the folder we're trying to rename
        // has a lock, or if its destination container doesn't exist yet,
        // then there seems to be some OS process (virus scanner?) that holds
        // a lock on the folder for a split second, which causes renameSync to
        // fail. To workaround that, retry for up to 7 seconds before giving up.
        var maxWaitTimeMs = 7 * 1000;
        var recyclerDirectory = AsyncRecycle._getRecyclerDirectory(rushConfiguration);
        var oldDirectoryName = path.basename(directoryPath);
        var newDirectoryPath = path.join(recyclerDirectory, oldDirectoryName + "_" + new Date().getTime());
        if (!fsx.existsSync(recyclerDirectory)) {
            Utilities_1.default.createFolderWithRetry(recyclerDirectory);
        }
        Utilities_1.default.retryUntilTimeout(function () { return fsx.renameSync(directoryPath, newDirectoryPath); }, maxWaitTimeMs, function (e) { return new Error("Error: " + e + os.EOL + "Often this is caused by a file lock " +
            'from a process like the virus scanner.'); }, 'recycleDirectory');
        // Asynchronously delete the folder contents.
        var recyclerDirectoryContents = path.join(recyclerDirectory, '*');
        var windowsTrimmedRecyclerDirectory = recyclerDirectory.match(/\\$/)
            ? recyclerDirectory.substring(0, recyclerDirectory.length - 1)
            : recyclerDirectory;
        var command = os.platform() === 'win32'
            ? 'cmd.exe'
            : 'rm';
        var args = os.platform() === 'win32'
            ? ['/c', "FOR /F %f IN ('dir /B \\\\?\\" + recyclerDirectoryContents + "') DO rd /S /Q \\\\?\\" + windowsTrimmedRecyclerDirectory + "\\%f"] // tslint:disable-line:max-line-length
            : ['-rf', "\"" + recyclerDirectoryContents + "\""];
        var options = {
            detached: true,
            stdio: ['ignore', 'ignore', 'ignore']
        };
        var process = child_process.spawn(command, args, options);
        process.unref();
    };
    AsyncRecycle._getRecyclerDirectory = function (rushConfiguration) {
        return path.join(rushConfiguration.commonFolder, 'rush-recycler');
    };
    return AsyncRecycle;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = AsyncRecycle;

//# sourceMappingURL=AsyncRecycle.js.map
