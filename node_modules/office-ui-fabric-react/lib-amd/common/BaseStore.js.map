{"version":3,"sources":["common/BaseStore.ts"],"names":[],"mappings":";;IAGA,IAAI,WAAW,GAAG,CAAC,CAAC;IAEpB;QAKE;YACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACvB,CAAC;QAEM,6BAAS,GAAhB,UAAiB,QAAoB;YAArC,iBAMC;YALC,IAAI,EAAE,GAAG,WAAW,EAAE,CAAC;YAEvB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;YAE/B,MAAM,CAAC,EAAE,OAAO,EAAE,cAAM,OAAA,OAAO,KAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAA1B,CAA0B,EAAE,CAAC;QACvD,CAAC;QAES,8BAAU,GAApB;YACE,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACvC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC;gBACxB,CAAC;YACH,CAAC;QACH,CAAC;QACH,gBAAC;IAAD,CAxBA,AAwBC,IAAA;IAxBY,8BAAS","file":"common/BaseStore.js","sourcesContent":["import { ISubscribable } from './ISubscribable';\r\nimport { IDisposable } from '../Utilities';\r\n\r\nlet _instanceId = 0;\r\n\r\nexport class BaseStore implements ISubscribable {\r\n  private _callbacks: {\r\n    [key: string]: () => void;\r\n  };\r\n\r\n  constructor() {\r\n    this._callbacks = {};\r\n  }\r\n\r\n  public subscribe(onChange: () => void): IDisposable {\r\n    let id = _instanceId++;\r\n\r\n    this._callbacks[id] = onChange;\r\n\r\n    return { dispose: () => delete this._callbacks[id] };\r\n  }\r\n\r\n  protected emitChange() {\r\n    for (let id in this._callbacks) {\r\n      if (this._callbacks.hasOwnProperty(id)) {\r\n        this._callbacks[id]();\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}