{"version":3,"sources":["components/Layer/Layer.tsx"],"names":[],"mappings":"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","file":"components/Layer/Layer.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n/* tslint:enable:no-unused-variable */\r\n\r\nimport { Fabric } from '../../Fabric';\r\nimport { ILayerProps } from './Layer.Props';\r\nimport { css, BaseComponent, getDocument, setVirtualParent } from '../../Utilities';\r\nimport './Layer.scss';\r\n\r\nlet _layersByHostId: { [hostId: string]: Layer[] } = {};\r\n\r\nexport class Layer extends BaseComponent<ILayerProps, {}> {\r\n\r\n  public static defaultProps = {\r\n    onLayerDidMount: () => undefined,\r\n    onLayerWillUnmount: () => undefined\r\n  };\r\n\r\n  private _rootElement: HTMLElement;\r\n  private _host: Node;\r\n  private _layerElement: HTMLElement;\r\n  private _hasMounted: boolean;\r\n  /**\r\n   * Used for notifying applicable Layers that a host is available/unavailable and to re-evaluate Layers that\r\n   * care about the specific host.\r\n   */\r\n  public static notifyHostChanged(id: string) {\r\n    if (_layersByHostId[id]) {\r\n      _layersByHostId[id].forEach(layer => layer.forceUpdate());\r\n    }\r\n  }\r\n\r\n  constructor(props: ILayerProps) {\r\n    super(props, {\r\n      // Make sure to deprecate old properties.\r\n      'onLayerMounted': 'onLayerDidMount'\r\n    });\r\n\r\n    if (this.props.hostId) {\r\n      if (!_layersByHostId[this.props.hostId]) {\r\n        _layersByHostId[this.props.hostId] = [];\r\n      }\r\n\r\n      _layersByHostId[this.props.hostId].push(this);\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.componentDidUpdate();\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this._removeLayerElement();\r\n\r\n    if (this.props.hostId) {\r\n      _layersByHostId[this.props.hostId] = _layersByHostId[this.props.hostId].filter(layer => layer !== this);\r\n      if (!_layersByHostId[this.props.hostId].length) {\r\n        delete _layersByHostId[this.props.hostId];\r\n      }\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate() {\r\n    let host = this._getHost();\r\n\r\n    if (host !== this._host) {\r\n      this._removeLayerElement();\r\n    }\r\n\r\n    if (host) {\r\n      this._host = host;\r\n\r\n      if (!this._layerElement) {\r\n        let doc = getDocument(this._rootElement);\r\n\r\n        this._layerElement = doc.createElement('div');\r\n        this._layerElement.className = css('ms-Layer', {\r\n          'ms-Layer--fixed': !this.props.hostId\r\n        });\r\n\r\n        host.appendChild(this._layerElement);\r\n        setVirtualParent(this._layerElement, this._rootElement);\r\n      }\r\n\r\n      // Using this 'unstable' method allows us to retain the React context across the layer projection.\r\n      ReactDOM.unstable_renderSubtreeIntoContainer(\r\n        this,\r\n        <Fabric className='ms-Layer-content'>\r\n          { this.props.children }\r\n        </Fabric>,\r\n        this._layerElement,\r\n        () => {\r\n          if (!this._hasMounted) {\r\n            this._hasMounted = true;\r\n\r\n            // TODO: @deprecated cleanup required.\r\n            if (this.props.onLayerMounted) {\r\n              this.props.onLayerMounted();\r\n            }\r\n\r\n            this.props.onLayerDidMount();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <span\r\n        className='ms-Layer'\r\n        ref={ this._resolveRef('_rootElement') }\r\n        />\r\n    );\r\n  }\r\n\r\n  private _removeLayerElement() {\r\n    if (this._layerElement) {\r\n      this.props.onLayerWillUnmount();\r\n\r\n      ReactDOM.unmountComponentAtNode(this._layerElement);\r\n      let parentNode = this._layerElement.parentNode;\r\n      if (parentNode) {\r\n        parentNode.removeChild(this._layerElement);\r\n      }\r\n      this._layerElement = undefined;\r\n      this._hasMounted = false;\r\n    }\r\n  }\r\n\r\n  private _getHost(): Node {\r\n    let { hostId } = this.props;\r\n    let doc = getDocument(this._rootElement);\r\n\r\n    if (hostId) {\r\n      return doc.getElementById(hostId);\r\n    } else {\r\n      return doc.body;\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}