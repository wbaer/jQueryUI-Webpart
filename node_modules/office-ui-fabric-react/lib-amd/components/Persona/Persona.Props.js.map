{"version":3,"sources":["components/Persona/Persona.Props.ts"],"names":[],"mappings":";;IA4EA,IAAY,WAQX;IARD,WAAY,WAAW;QACrB,6CAAQ,CAAA;QACR,mEAAmB,CAAA;QACnB,yDAAc,CAAA;QACd,+CAAS,CAAA;QACT,mDAAW,CAAA;QACX,+CAAS,CAAA;QACT,yDAAc,CAAA;IAChB,CAAC,EARW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAQtB;IAED,IAAY,eAQX;IARD,WAAY,eAAe;QACzB,qDAAQ,CAAA;QACR,2DAAW,CAAA;QACX,yDAAU,CAAA;QACV,qDAAQ,CAAA;QACR,mDAAO,CAAA;QACP,2DAAW,CAAA;QACX,qDAAQ,CAAA;IACV,CAAC,EARW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAQ1B;IAED,IAAY,oBAgBX;IAhBD,WAAY,oBAAoB;QAC9B,yEAAa,CAAA;QACb,+DAAQ,CAAA;QACR,uEAAY,CAAA;QACZ,+DAAQ,CAAA;QACR,2EAAc,CAAA;QACd,iEAAS,CAAA;QACT,yEAAa,CAAA;QACb,yEAAa,CAAA;QACb,+DAAQ,CAAA;QACR,qEAAW,CAAA;QACX,oEAAW,CAAA;QACX,kEAAU,CAAA;QACV,oEAAW,CAAA;QACX,8DAAQ,CAAA;QACR,sEAAY,CAAA;IACd,CAAC,EAhBW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAgB/B","file":"components/Persona/Persona.Props.js","sourcesContent":["import * as React from 'react';\r\nimport { Persona } from './Persona';\r\n\r\nexport interface IPersonaProps extends React.HTMLProps<Persona> {\r\n  /**\r\n   * Primary text to display, usually the name of the person.\r\n   */\r\n  primaryText?: string;\r\n\r\n  /**\r\n   * Decides the size of the control.\r\n   * @defaultvalue PersonaSize.regular\r\n   */\r\n  size?: PersonaSize;\r\n\r\n  /**\r\n   * If true, adds the css class 'is-fadeIn' to the image.\r\n   */\r\n  imageShouldFadeIn?: boolean;\r\n\r\n  /**\r\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\r\n   * it is successfully loaded. This disables imageShouldFadeIn.\r\n   * @defaultvalue false\r\n   */\r\n  imageShouldStartVisible?: boolean;\r\n\r\n  /**\r\n   * Url to the image to use, should be a square aspect ratio and big enough to fit in the image area.\r\n   */\r\n  imageUrl?: string;\r\n\r\n  /**\r\n   * The user's initials to display in the image area when there is no image.\r\n   * @defaultvalue [Derived from primaryText]\r\n   */\r\n  imageInitials?: string;\r\n\r\n  /**\r\n   * The background color when the user's initials are displayed.\r\n   * @defaultvalue [Derived from primaryText]\r\n   */\r\n  initialsColor?: PersonaInitialsColor;\r\n\r\n  /**\r\n   * Presence of the person to display - will not display presence if undefined.\r\n   * @defaultvalue PersonaPresence.none\r\n   */\r\n  presence?: PersonaPresence;\r\n\r\n  /**\r\n   * Secondary text to display, usually the role of the user.\r\n   */\r\n  secondaryText?: string;\r\n\r\n  /**\r\n   * Tertiary text to display, usually the status of the user.\r\n   */\r\n  tertiaryText?: string;\r\n\r\n  /**\r\n   * Optional text to display, usually a custom message set.\r\n   */\r\n  optionalText?: string;\r\n\r\n  /**\r\n   * Whether to not render persona details, and just render the persona image/initials.\r\n   */\r\n  hidePersonaDetails?: boolean;\r\n\r\n  /**\r\n   * Additional CSS class(es) to apply to the Persona\r\n   */\r\n  className?: string;\r\n}\r\n\r\nexport enum PersonaSize {\r\n  tiny = 0,\r\n  extraExtraSmall = 1,\r\n  extraSmall = 2,\r\n  small = 3,\r\n  regular = 4,\r\n  large = 5,\r\n  extraLarge = 6\r\n}\r\n\r\nexport enum PersonaPresence {\r\n  none = 0,\r\n  offline = 1,\r\n  online = 2,\r\n  away = 3,\r\n  dnd = 4,\r\n  blocked = 5,\r\n  busy = 6\r\n}\r\n\r\nexport enum PersonaInitialsColor {\r\n  lightBlue = 0,\r\n  blue = 1,\r\n  darkBlue = 2,\r\n  teal = 3,\r\n  lightGreen = 4,\r\n  green = 5,\r\n  darkGreen = 6,\r\n  lightPink = 7,\r\n  pink = 8,\r\n  magenta = 9,\r\n  purple = 10,\r\n  black = 11,\r\n  orange = 12,\r\n  red = 13,\r\n  darkRed = 14\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}