{"version":3,"sources":["utilities/selection/SelectionZone.tsx"],"names":[],"mappings":"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","file":"utilities/selection/SelectionZone.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  autobind,\r\n  findScrollableParent,\r\n  getParent,\r\n  getDocument,\r\n  getWindow,\r\n  isElementTabbable\r\n} from '../../Utilities';\r\nimport { SelectionLayout } from './SelectionLayout';\r\nimport {\r\n  ISelection,\r\n  ISelectionLayout,\r\n  SelectionDirection,\r\n  SelectionMode\r\n} from './interfaces';\r\n\r\n// Selection definitions:\r\n//\r\n// Anchor index: the point from which a range selection starts.\r\n// Focus index: the point from which layout movement originates from.\r\n//\r\n// These two can differ. Tests:\r\n//\r\n// If you start at index 5\r\n// Shift click to index 10\r\n//    The focus is 10, the anchor is 5.\r\n// If you shift click at index 0\r\n//    The anchor remains at 5, the items between 0 and 5 are selected and everything else is cleared.\r\n// If you click index 8\r\n//    The anchor and focus are set to 8.\r\n\r\nconst SELECTION_DISABLED_ATTRIBUTE_NAME = 'data-selection-disabled';\r\nconst SELECTION_INDEX_ATTRIBUTE_NAME = 'data-selection-index';\r\nconst SELECTION_TOGGLE_ATTRIBUTE_NAME = 'data-selection-toggle';\r\nconst SELECTION_INVOKE_ATTRIBUTE_NAME = 'data-selection-invoke';\r\nconst SELECTALL_TOGGLE_ALL_ATTRIBUTE_NAME = 'data-selection-all-toggle';\r\n\r\nexport interface ISelectionZoneProps extends React.Props<SelectionZone> {\r\n  selection: ISelection;\r\n  layout?: ISelectionLayout;\r\n  selectionMode?: SelectionMode;\r\n  selectionPreservedOnEmptyClick?: boolean;\r\n  isSelectedOnFocus?: boolean;\r\n  onItemInvoked?: (item?: any, index?: number, ev?: Event) => void;\r\n  onItemContextMenu?: (item?: any, index?: number, ev?: Event) => void;\r\n}\r\n\r\nexport class SelectionZone extends BaseComponent<ISelectionZoneProps, {}> {\r\n  public static defaultProps = {\r\n    layout: new SelectionLayout(SelectionDirection.vertical),\r\n    isMultiSelectEnabled: true,\r\n    isSelectedOnFocus: true,\r\n    selectionMode: SelectionMode.multiple\r\n  };\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance,\r\n    root: HTMLElement\r\n  };\r\n\r\n  private _isCtrlPressed: boolean;\r\n  private _isShiftPressed: boolean;\r\n  private _isMetaPressed: boolean;\r\n  private _shouldIgnoreFocus: boolean;\r\n\r\n  public componentDidMount() {\r\n    let win = getWindow(this.refs.root);\r\n    let scrollElement = findScrollableParent(this.refs.root);\r\n\r\n    // Track the latest modifier keys globally.\r\n    this._events.on(win, 'keydown keyup', this._updateModifiers);\r\n    this._events.on(scrollElement, 'click', this._tryClearOnEmptyClick);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div\r\n        className='ms-SelectionZone'\r\n        ref='root'\r\n        onKeyDown={ this._onKeyDown }\r\n        onMouseDown={ this._onMouseDown }\r\n        onClick={ this._onClick }\r\n        onDoubleClick={ this._onDoubleClick }\r\n        onContextMenu={ this._onContextMenu }\r\n        { ...{\r\n          onMouseDownCapture: this.ignoreNextFocus,\r\n          onFocusCapture: this._onFocus\r\n        } }\r\n      >\r\n        { this.props.children }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * In some cases, the consuming scenario requires to set focus on a row without having SelectionZone\r\n   * react to the event. Note that focus events in IE <= 11 will occur asynchronously after .focus() has\r\n   * been called on an element, so we need a flag to store the idea that we will bypass the \"next\"\r\n   * focus event that occurs. This method does that.\r\n   */\r\n  @autobind\r\n  public ignoreNextFocus() {\r\n    this._shouldIgnoreFocus = true;\r\n  }\r\n\r\n  /**\r\n   * When we focus an item, for single/multi select scenarios, we should try to select it immediately\r\n   * as long as the focus did not originate from a mouse down/touch event. For those cases, we handle them\r\n   * specially.\r\n   */\r\n  @autobind\r\n  private _onFocus(ev: React.FocusEvent<HTMLElement>) {\r\n    let target = ev.target as HTMLElement;\r\n    let { selection, selectionMode } = this.props;\r\n    let isToggleModifierPressed = this._isCtrlPressed || this._isMetaPressed;\r\n\r\n    if (this._shouldIgnoreFocus || selectionMode === SelectionMode.none) {\r\n      this._shouldIgnoreFocus = false;\r\n      return;\r\n    }\r\n\r\n    let isToggle = this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME);\r\n    let itemRoot = this._findItemRoot(target);\r\n\r\n    if (!isToggle && itemRoot) {\r\n      let index = this._getItemIndex(itemRoot);\r\n\r\n      if (isToggleModifierPressed) {\r\n        // set anchor only.\r\n        selection.setIndexSelected(index, selection.isIndexSelected(index), true);\r\n      } else {\r\n        this._onItemSurfaceClick(ev, index);\r\n      }\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onMouseDown(ev: React.MouseEvent<HTMLElement>) {\r\n    this._updateModifiers(ev);\r\n\r\n    let target = ev.target as HTMLElement;\r\n    let itemRoot = this._findItemRoot(target);\r\n\r\n    while (target !== this.refs.root) {\r\n      if (this._hasAttribute(target, SELECTALL_TOGGLE_ALL_ATTRIBUTE_NAME)) {\r\n        break;\r\n      } else if (itemRoot) {\r\n        if (this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME)) {\r\n          break;\r\n        } else if (this._hasAttribute(target, SELECTION_INVOKE_ATTRIBUTE_NAME)) {\r\n          this._onInvokeMouseDown(ev, this._getItemIndex(itemRoot));\r\n          break;\r\n        } else if (target === itemRoot) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      target = getParent(target);\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onClick(ev: React.MouseEvent<HTMLElement>) {\r\n    this._updateModifiers(ev);\r\n\r\n    let target = ev.target as HTMLElement;\r\n    let itemRoot = this._findItemRoot(target);\r\n\r\n    // No-op if selection is disabled\r\n    if (this._isSelectionDisabled(target)) {\r\n      return;\r\n    }\r\n\r\n    while (target !== this.refs.root) {\r\n      if (this._hasAttribute(target, SELECTALL_TOGGLE_ALL_ATTRIBUTE_NAME)) {\r\n        this._onToggleAllClick(ev);\r\n        break;\r\n      } else if (itemRoot) {\r\n        let index = this._getItemIndex(itemRoot);\r\n\r\n        if (this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME)) {\r\n          if (this._isShiftPressed) {\r\n            this._onItemSurfaceClick(ev, index);\r\n          } else {\r\n            this._onToggleClick(ev, index);\r\n          }\r\n          break;\r\n        } else if (this._hasAttribute(target, SELECTION_INVOKE_ATTRIBUTE_NAME)) {\r\n          this._onInvokeClick(ev, index);\r\n          break;\r\n        } else if (target === itemRoot) {\r\n          this._onItemSurfaceClick(ev, index);\r\n          break;\r\n        }\r\n      }\r\n\r\n      target = getParent(target);\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onContextMenu(ev: React.MouseEvent<HTMLElement>) {\r\n    const target = ev.target as HTMLElement;\r\n\r\n    const { onItemContextMenu, selection } = this.props;\r\n    if (onItemContextMenu) {\r\n      const itemRoot = this._findItemRoot(target);\r\n\r\n      if (itemRoot) {\r\n        const index = this._getItemIndex(itemRoot);\r\n        onItemContextMenu(selection.getItems()[index], index, ev.nativeEvent);\r\n        ev.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _isSelectionDisabled(target: HTMLElement): boolean {\r\n    while (target !== this.refs.root) {\r\n      if (this._hasAttribute(target, SELECTION_DISABLED_ATTRIBUTE_NAME)) {\r\n        return true;\r\n      }\r\n      target = getParent(target);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * In multi selection, if you double click within an item's root (but not within the invoke element or input elements),\r\n   * we should execute the invoke handler.\r\n   */\r\n  @autobind\r\n  private _onDoubleClick(ev: React.MouseEvent<HTMLElement>) {\r\n    let target = ev.target as HTMLElement;\r\n\r\n    if (this._isSelectionDisabled(target)) {\r\n      return;\r\n    }\r\n\r\n    let { selectionMode, onItemInvoked } = this.props;\r\n    let itemRoot = this._findItemRoot(target);\r\n\r\n    if (itemRoot && onItemInvoked && selectionMode !== SelectionMode.none && !this._isInputElement(target)) {\r\n      let index = this._getItemIndex(itemRoot);\r\n\r\n      while (target !== this.refs.root) {\r\n        if (\r\n          this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME) ||\r\n          this._hasAttribute(target, SELECTION_INVOKE_ATTRIBUTE_NAME)) {\r\n          break;\r\n        } else if (target === itemRoot) {\r\n          this._onInvokeClick(ev, index);\r\n          break;\r\n        }\r\n\r\n        target = getParent(target);\r\n      }\r\n\r\n      target = getParent(target);\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\r\n    this._updateModifiers(ev);\r\n\r\n    let target = ev.target as HTMLElement;\r\n\r\n    if (this._isSelectionDisabled(target)) {\r\n      return;\r\n    }\r\n\r\n    let { selection, selectionMode } = this.props;\r\n    let isSelectAllKey = ev.which === KeyCodes.a && (this._isCtrlPressed || this._isMetaPressed);\r\n    let isClearSelectionKey = ev.which === KeyCodes.escape;\r\n\r\n    // Ignore key downs from input elements.\r\n    if (this._isInputElement(target)) {\r\n      return;\r\n    }\r\n\r\n    // If ctrl-a is pressed, select all (if all are not already selected.)\r\n    if (isSelectAllKey && selectionMode === SelectionMode.multiple && !selection.isAllSelected()) {\r\n      selection.setAllSelected(true);\r\n      ev.stopPropagation();\r\n      ev.preventDefault();\r\n      return;\r\n    }\r\n\r\n    // If escape is pressed, clear selection (if any are selected.)\r\n    if (isClearSelectionKey && selection.getSelectedCount() > 0) {\r\n      selection.setAllSelected(false);\r\n      ev.stopPropagation();\r\n      ev.preventDefault();\r\n      return;\r\n    }\r\n\r\n    let itemRoot = this._findItemRoot(target);\r\n\r\n    // If a key was pressed within an item, we should treat \"enters\" as invokes and \"space\" as toggle\r\n    if (itemRoot) {\r\n      let index = this._getItemIndex(itemRoot);\r\n\r\n      while (target !== this.refs.root) {\r\n        if (this._hasAttribute(target, SELECTION_TOGGLE_ATTRIBUTE_NAME)) {\r\n          // For toggle elements, assuming they are rendered as buttons, they will generate a click event,\r\n          // so we can no-op for any keydowns in this case.\r\n          break;\r\n        } else if (target === itemRoot) {\r\n          if (ev.which === KeyCodes.enter) {\r\n            this._onInvokeClick(ev, index);\r\n          } else if (ev.which === KeyCodes.space) {\r\n            this._onToggleClick(ev, index);\r\n          }\r\n          break;\r\n        }\r\n\r\n        target = getParent(target);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onToggleAllClick(ev: React.MouseEvent<HTMLElement>) {\r\n    let { selection, selectionMode } = this.props;\r\n\r\n    if (selectionMode === SelectionMode.multiple) {\r\n      selection.toggleAllSelected();\r\n      ev.stopPropagation();\r\n      ev.preventDefault();\r\n    }\r\n  }\r\n\r\n  private _onToggleClick(ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>, index: number) {\r\n    let { selection, selectionMode } = this.props;\r\n\r\n    if (selectionMode === SelectionMode.multiple) {\r\n      selection.toggleIndexSelected(index);\r\n    } else if (selectionMode === SelectionMode.single) {\r\n      let isSelected = selection.isIndexSelected(index);\r\n      selection.setChangeEvents(false);\r\n      selection.setAllSelected(false);\r\n      selection.setIndexSelected(index, !isSelected, true);\r\n      selection.setChangeEvents(true);\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    ev.stopPropagation();\r\n\r\n    // NOTE: ev.preventDefault is not called for toggle clicks, because this will kill the browser behavior\r\n    // for checkboxes if you use a checkbox for the toggle.\r\n  }\r\n\r\n  private _onInvokeClick(ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>, index: number) {\r\n    let { selection, onItemInvoked } = this.props;\r\n\r\n    if (onItemInvoked) {\r\n      onItemInvoked(selection.getItems()[index], index, ev.nativeEvent);\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    }\r\n  }\r\n\r\n  private _onItemSurfaceClick(ev: React.SyntheticEvent<HTMLElement>, index: number) {\r\n    let { selection, selectionMode } = this.props;\r\n    let isToggleModifierPressed = this._isCtrlPressed || this._isMetaPressed;\r\n\r\n    if (selectionMode === SelectionMode.multiple) {\r\n      if (this._isShiftPressed) {\r\n        selection.selectToIndex(index, !isToggleModifierPressed);\r\n      } else if (isToggleModifierPressed) {\r\n        selection.toggleIndexSelected(index);\r\n      } else {\r\n        this._clearAndSelectIndex(index);\r\n      }\r\n    } else if (selectionMode === SelectionMode.single) {\r\n      this._clearAndSelectIndex(index);\r\n    }\r\n  }\r\n\r\n  private _onInvokeMouseDown(ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>, index: number) {\r\n    let { selection } = this.props;\r\n\r\n    // Only do work if item is not selected.\r\n    if (selection.isIndexSelected(index)) {\r\n      return;\r\n    }\r\n\r\n    this._clearAndSelectIndex(index);\r\n  }\r\n\r\n  private _tryClearOnEmptyClick(ev: MouseEvent) {\r\n    if (\r\n      !this.props.selectionPreservedOnEmptyClick &&\r\n      this._isNonHandledClick(ev.target as HTMLElement)\r\n    ) {\r\n      this.props.selection.setAllSelected(false);\r\n    }\r\n  }\r\n\r\n  private _clearAndSelectIndex(index: number) {\r\n    let { selection } = this.props;\r\n    let isAlreadySingleSelected = selection.getSelectedCount() === 1 && selection.isIndexSelected(index);\r\n\r\n    if (!isAlreadySingleSelected) {\r\n      selection.setChangeEvents(false);\r\n      selection.setAllSelected(false);\r\n      selection.setIndexSelected(index, true, true);\r\n      selection.setChangeEvents(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * We need to track the modifier key states so that when focus events occur, which do not contain\r\n   * modifier states in the Event object, we know how to behave.\r\n   */\r\n  private _updateModifiers(ev: React.KeyboardEvent<HTMLElement> | React.MouseEvent<HTMLElement>) {\r\n    this._isShiftPressed = ev.shiftKey;\r\n    this._isCtrlPressed = ev.ctrlKey;\r\n    this._isMetaPressed = ev.metaKey;\r\n  }\r\n\r\n  private _findItemRoot(target: HTMLElement): HTMLElement {\r\n    let { selection } = this.props;\r\n\r\n    while (target !== this.refs.root) {\r\n      let indexValue = target.getAttribute(SELECTION_INDEX_ATTRIBUTE_NAME);\r\n      let index = Number(indexValue);\r\n\r\n      if (indexValue !== null && index >= 0 && index < selection.getItems().length) {\r\n        break;\r\n      }\r\n\r\n      target = getParent(target);\r\n    }\r\n\r\n    if (target === this.refs.root) {\r\n      return undefined;\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  private _getItemIndex(itemRoot: HTMLElement): number {\r\n    return Number(itemRoot.getAttribute(SELECTION_INDEX_ATTRIBUTE_NAME));\r\n  }\r\n\r\n  private _hasAttribute(element: HTMLElement, attributeName: string): boolean {\r\n    let isToggle = false;\r\n\r\n    while (!isToggle && element !== this.refs.root) {\r\n      isToggle = element.getAttribute(attributeName) === 'true';\r\n      element = getParent(element);\r\n    }\r\n\r\n    return isToggle;\r\n  }\r\n\r\n  private _isInputElement(element: HTMLElement): boolean {\r\n    return element.tagName === 'INPUT' || element.tagName === 'TEXTAREA';\r\n  }\r\n\r\n  private _isNonHandledClick(element: HTMLElement): boolean {\r\n    let doc = getDocument();\r\n\r\n    if (doc && element) {\r\n      while (element && element !== doc.documentElement) {\r\n        if (isElementTabbable(element)) {\r\n          return false;\r\n        }\r\n\r\n        element = getParent(element);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}