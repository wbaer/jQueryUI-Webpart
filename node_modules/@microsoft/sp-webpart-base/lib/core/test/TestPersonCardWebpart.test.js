"use strict";
var chai_1 = require("chai");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var TestPersonCardWebPart_1 = require("./TestPersonCardWebPart");
var MockWebPartContext_1 = require("../../test/mock/clientSideWebParts/MockWebPartContext");
function assertEqualJsons(act, exp) {
    chai_1.assert.deepEqual(JSON.parse(JSON.stringify(act)), JSON.parse(JSON.stringify(exp)));
}
describe('server processed content tests', function () {
    var context = new MockWebPartContext_1.default();
    var wp = context.initialize(new TestPersonCardWebPart_1.default());
    it('serialize() extracts server content from the properties', function () {
        wp._properties = TestPersonCardWebPart_1.testPersonCardWebPartMocks.runtimePropertyBag;
        var serializedData = wp._serialize();
        assertEqualJsons(serializedData.properties, TestPersonCardWebPart_1.testPersonCardWebPartMocks.serializedPropertyBag);
        assertEqualJsons(serializedData.serverProcessedContent, TestPersonCardWebPart_1.testPersonCardWebPartMocks.serializedServerContent);
    });
    it('deserialize() fixes the properties using metadata and server processed content', function () {
        var wpSerializedData = {
            dataVersion: sp_core_library_1.Version.parse('1.0'),
            properties: TestPersonCardWebPart_1.testPersonCardWebPartMocks.deserializedPropertyBag,
            serverProcessedContent: TestPersonCardWebPart_1.testPersonCardWebPartMocks.deserializedServerContent
        };
        wp._renderedFromPersistedData = true;
        var fixedProps = wp._deserialize(wpSerializedData);
        assertEqualJsons(fixedProps, TestPersonCardWebPart_1.testPersonCardWebPartMocks.fixedPropertyBag);
    });
});
