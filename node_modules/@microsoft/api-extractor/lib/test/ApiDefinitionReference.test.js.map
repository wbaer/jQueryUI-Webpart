{"version":3,"sources":["test/ApiDefinitionReference.test.ts"],"names":[],"mappings":"AAAA,+BAA+B;;AAE/B,6BAA8B;AAC9B,oEAA+D;AAE/D,uFAAuF;AACvF,IAAM,cAAc,GAId,EAAE,CAAC;AAET,0BAA0B,OAAe,EAAE,QAAgB,EAAE,UAAkB;IAC7E,cAAc,CAAC,IAAI,CAAC,EAAE,OAAO,SAAA,EAAE,QAAQ,UAAA,EAAE,UAAU,YAAA,EAAE,CAAC,CAAC;AACzD,CAAC;AAED,QAAQ,CAAC,wBAAwB,EAAE;IACjC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAEpB,QAAQ,CAAC,mCAAmC,EAAE;QAC5C,IAAI,gBAAwB,CAAC;QAC7B,IAAI,MAA8B,CAAC;QAEnC,EAAE,CAAC,gDAAgD,EAAE;YACnD,gBAAgB,GAAG,iCAAiC,CAAC;YAErD,MAAM,GAAG,gCAAsB,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;YAChF,aAAM,CAAC,KAAK,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;YAC7C,aAAM,CAAC,KAAK,CAAC,iBAAiB,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;YACpD,aAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;YACxC,aAAM,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mDAAmD,EAAE;YACtD,gBAAgB,GAAG,sBAAsB,CAAC;YAE1C,MAAM,GAAG,gCAAsB,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;YAChF,aAAM,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;YACnC,aAAM,CAAC,KAAK,CAAC,iBAAiB,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;YACpD,aAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;YACxC,aAAM,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wEAAwE,EAAE;YAC3E,gBAAgB,GAAG,6BAA6B,CAAC;YAEjD,MAAM,GAAG,gCAAsB,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;YAChF,aAAM,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;YACnC,aAAM,CAAC,KAAK,CAAC,iBAAiB,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;YACpD,aAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;YACxC,aAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0EAA0E,EAAE;YAC7E,aAAa;YACb,gBAAgB,GAAG,6BAA6B,CAAC;YACjD,IAAI,WAAW,GAAY,KAAK,CAAC;YACjC,IAAI,CAAC;gBACH,MAAM,GAAG,gCAAsB,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;YAClF,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,WAAW,GAAG,IAAI,CAAC;YACrB,CAAC;YACD,aAAM,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"test/ApiDefinitionReference.test.js","sourcesContent":["/// <reference types=\"mocha\" />\r\n\r\nimport { assert } from 'chai';\r\nimport ApiDefinitionReference from '../ApiDefinitionReference';\r\n\r\n/* tslint:disable:no-function-expression - Mocha uses a poorly scoped \"this\" pointer */\r\nconst capturedErrors: {\r\n  message: string;\r\n  fileName: string;\r\n  lineNumber: number;\r\n}[] = [];\r\n\r\nfunction testErrorHandler(message: string, fileName: string, lineNumber: number): void {\r\n  capturedErrors.push({ message, fileName, lineNumber });\r\n}\r\n\r\ndescribe('ApiDocumentation tests', function (): void {\r\n  this.timeout(10000);\r\n\r\n  describe('ApiDocumentation internal methods', function (): void {\r\n    let apiReferenceExpr: string;\r\n    let actual: ApiDefinitionReference;\r\n\r\n    it('_parseApiReferenceExpression() with scope name', function (): void {\r\n      apiReferenceExpr = '@microsoft/sp-core-library:Guid';\r\n\r\n      actual = ApiDefinitionReference.createFromString(apiReferenceExpr, console.log);\r\n      assert.equal('@microsoft', actual.scopeName);\r\n      assert.equal('sp-core-library', actual.packageName);\r\n      assert.equal('Guid', actual.exportName);\r\n      assert.equal('', actual.memberName);\r\n    });\r\n\r\n    it('_parseApiReferenceExpression() without scope name', function (): void {\r\n      apiReferenceExpr = 'sp-core-library:Guid';\r\n\r\n      actual = ApiDefinitionReference.createFromString(apiReferenceExpr, console.log);\r\n      assert.equal('', actual.scopeName);\r\n      assert.equal('sp-core-library', actual.packageName);\r\n      assert.equal('Guid', actual.exportName);\r\n      assert.equal('', actual.memberName);\r\n    });\r\n\r\n    it('_parseApiReferenceExpression() without scope name and with member name', function (): void {\r\n      apiReferenceExpr = 'sp-core-library:Guid.equals';\r\n\r\n      actual = ApiDefinitionReference.createFromString(apiReferenceExpr, console.log);\r\n      assert.equal('', actual.scopeName);\r\n      assert.equal('sp-core-library', actual.packageName);\r\n      assert.equal('Guid', actual.exportName);\r\n      assert.equal('equals', actual.memberName);\r\n    });\r\n\r\n    it('_parseApiReferenceExpression() without scope name and invalid memberName', function (): void {\r\n      // (Error #6)\r\n      apiReferenceExpr = 'sp-core-library:Guid:equals';\r\n      let caughtError: boolean = false;\r\n      try {\r\n        actual = ApiDefinitionReference.createFromString(apiReferenceExpr, console.log);\r\n      } catch (error) {\r\n        caughtError = true;\r\n      }\r\n      assert.equal(caughtError, true);\r\n    });\r\n  });\r\n});"],"sourceRoot":"..\\..\\src"}