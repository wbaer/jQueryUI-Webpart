{"version":3,"sources":["next/PersistentStream.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AACH,0BAA0B;;;;;;;AAE1B,IAAY,MAAM,WAAM,QAAQ,CAAC,CAAA;AAEjC;;GAEG;AACH;IAA8C,oCAAgB;IAG5D,0BAAY,IAA8B;QACxC,kBAAM,IAAI,CAAC,CAAC;QAHN,YAAO,GAAa,EAAE,CAAC;IAI/B,CAAC;IAEM,qCAAU,GAAjB,UAAkB,KAAsB,EAAE,QAAgB,EAAE,IAA2C;QACrG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IACpC,CAAC;IAEM,kCAAO,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IACH,uBAAC;AAAD,CAfA,AAeC,CAf6C,MAAM,CAAC,SAAS,GAe7D;AAfD;kCAeC,CAAA","file":"next/PersistentStream.js","sourcesContent":["/**\r\n * @file PersistentStream.ts\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * A special type of strean which keeps track of everything written to it, which can be read with the readAll() function\r\n */\r\n/* istanbul ignore next */\r\n\r\nimport * as stream from 'stream';\r\n\r\n/**\r\n * A special type of strean which keeps track of everything written to it, which can be read with the readAll() function\r\n */\r\nexport default class PersistentStream extends stream.Transform {\r\n  private _buffer: string[] = [];\r\n\r\n  constructor(opts?: stream.TransformOptions) {\r\n    super(opts);\r\n  }\r\n\r\n  public _transform(chunk: Buffer | String, encoding: string, done: (err?: Object, data?: Object) => void): void {\r\n    this._buffer.push(chunk.toString());\r\n    done(undefined, chunk.toString());\r\n  }\r\n\r\n  public readAll(): string {\r\n    return this._buffer.join('');\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}