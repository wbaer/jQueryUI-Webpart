"use strict";
var odsp_utilities_bundle_1 = require("@ms/odsp-utilities-bundle");
var sp_telemetry_1 = require("@ms/sp-telemetry");
var UserPhotoSize;
(function (UserPhotoSize) {
    UserPhotoSize[UserPhotoSize["Small"] = 1] = "Small";
    UserPhotoSize[UserPhotoSize["Medium"] = 2] = "Medium";
    UserPhotoSize[UserPhotoSize["Large"] = 3] = "Large";
})(UserPhotoSize = exports.UserPhotoSize || (exports.UserPhotoSize = {}));
var AlternativeUrlMap = (function () {
    function AlternativeUrlMap() {
    }
    AlternativeUrlMap.tryGetAlternativeUrl = function (primaryUrl) {
        var qosMonitor = new sp_telemetry_1._QosMonitor('tryGetAlternativeUrl');
        try {
            if (AlternativeUrlMap._urlTable) {
                var alternativeUrl = AlternativeUrlMap._urlTable.get(primaryUrl);
                if (alternativeUrl) {
                    var uri = new odsp_utilities_bundle_1.Uri(alternativeUrl);
                    if (uri) {
                        var authToken = uri.getQueryParameter('_eat_');
                        if (authToken) {
                            var split = authToken.split('_');
                            if (split && split.length === 2 && split[0] && Number(split[0])) {
                                var expirationTime = Number(split[0]);
                                expirationTime -= 30;
                                if (((new Date()).getTime() / 1000) > expirationTime) {
                                    AlternativeUrlMap._urlTable.delete(primaryUrl);
                                    qosMonitor.writeExpectedFailure('PrivateCdnUrlExpired');
                                    return undefined;
                                }
                            }
                            else {
                                qosMonitor.writeUnexpectedFailure('EatParamUnexpectedFormat', undefined, [{ 'eatParam': authToken }]);
                            }
                        }
                    }
                    qosMonitor.writeSuccess([{ 'alternativeUrlFound': true }]);
                    return alternativeUrl;
                }
            }
        }
        catch (error) {
            qosMonitor.writeUnexpectedFailure('Unexpected', error);
        }
        qosMonitor.writeSuccess([{ 'alternativeUrlFound': false }]);
        return undefined;
    };
    AlternativeUrlMap.updateMap = function (alternativeUrlTable) {
        if (!alternativeUrlTable) {
            return;
        }
        Object.keys(alternativeUrlTable).forEach(function (key) {
            AlternativeUrlMap._urlTable.set(key, alternativeUrlTable[key]);
        });
    };
    Object.defineProperty(AlternativeUrlMap, "UrlTable", {
        get: function () {
            return AlternativeUrlMap._urlTable;
        },
        enumerable: true,
        configurable: true
    });
    AlternativeUrlMap.getUserPhotoUrl = function (accountName, size) {
        var userPhotoBaseUrl = AlternativeUrlMap.tryGetAlternativeUrl('UserPhotoAspx');
        if (!userPhotoBaseUrl) {
            userPhotoBaseUrl = '/_layouts/15/userphoto.aspx';
        }
        var userPhotoUri = new odsp_utilities_bundle_1.Uri(userPhotoBaseUrl);
        if (!size) {
            size = UserPhotoSize.Small;
        }
        if (!accountName) {
            accountName = '';
        }
        var sizeLetter;
        switch (size) {
            case UserPhotoSize.Medium:
                sizeLetter = 'M';
                break;
            case UserPhotoSize.Large:
                sizeLetter = 'L';
                break;
            default:
                sizeLetter = 'S';
        }
        userPhotoUri.setQueryParameter('size', sizeLetter);
        userPhotoUri.setQueryParameter('accountname', accountName);
        return userPhotoUri.toString();
    };
    return AlternativeUrlMap;
}());
AlternativeUrlMap._urlTable = new Map();
exports.AlternativeUrlMap = AlternativeUrlMap;
