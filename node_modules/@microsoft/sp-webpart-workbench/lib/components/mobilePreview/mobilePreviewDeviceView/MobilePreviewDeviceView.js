"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require("react");
var office_ui_fabric_react_1 = require("office-ui-fabric-react");
var MobilePreviewDeviceView_module_scss_1 = require("./MobilePreviewDeviceView.module.scss");
var MobilePreview_1 = require("../mobilePreview/MobilePreview");
var MobilePreviewDeviceView = (function (_super) {
    __extends(MobilePreviewDeviceView, _super);
    function MobilePreviewDeviceView(props) {
        return _super.call(this, props) || this;
    }
    MobilePreviewDeviceView.prototype.render = function () {
        var formStyle = {
            width: this.props.currentDevice.width,
            height: this.props.currentDevice.height
        };
        var mobilePreviewClassName = office_ui_fabric_react_1.css(MobilePreviewDeviceView_module_scss_1.default.mobilePreviewDevice, 'ms-borderColor-neutralSecondaryAlt', this.props.deviceType === MobilePreview_1.DeviceType.Tablet ? MobilePreviewDeviceView_module_scss_1.default.mobilePreviewTablet :
            this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Portrait ? MobilePreviewDeviceView_module_scss_1.default.mobilePreviewPortrait :
                MobilePreviewDeviceView_module_scss_1.default.mobilePreviewLandscape);
        var iFrameStyle = office_ui_fabric_react_1.css(MobilePreviewDeviceView_module_scss_1.default.mobilePreviewIframe, 'ms-bgColor-white');
        if (this.props.deviceType === MobilePreview_1.DeviceType.Phone) {
            if (this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Landscape) {
                formStyle.width = this.props.currentDevice.height;
                formStyle.height = this.props.currentDevice.width;
            }
        }
        if (this.props.deviceType === MobilePreview_1.DeviceType.Tablet) {
            if (this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Portrait) {
                formStyle.width = this.props.currentDevice.height;
                formStyle.height = this.props.currentDevice.width;
            }
        }
        return (React.createElement("div", { className: mobilePreviewClassName, style: formStyle },
            React.createElement("iframe", { className: iFrameStyle, src: this.props.url })));
    };
    return MobilePreviewDeviceView;
}(React.Component));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = MobilePreviewDeviceView;
