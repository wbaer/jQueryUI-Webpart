"use strict";
var chai_1 = require("chai");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var sp_webpart_base_1 = require("@microsoft/sp-webpart-base");
var sp_page_context_1 = require("@microsoft/sp-page-context");
var sp_http_1 = require("@microsoft/sp-http");
var CanvasWebPartHost_1 = require("../canvasWebPartHost/CanvasWebPartHost");
describe('Canvas Webpart Host tests', function () {
    var rootScope = sp_core_library_1.ServiceScope.startNewRoot();
    rootScope.provide(sp_http_1.SPHttpClient.serviceKey, new sp_http_1.SPHttpClient(rootScope));
    rootScope.provide(sp_page_context_1.PageContext.serviceKey, new sp_page_context_1.PageContext(rootScope));
    rootScope.finish();
    var canvasWebPartHost;
    var handleResize;
    var handleCanvasChanged;
    var reclaimFocus;
    beforeEach(function () {
        handleResize = sinon.spy();
        handleCanvasChanged = sinon.spy();
        reclaimFocus = sinon.spy();
        canvasWebPartHost =
            new CanvasWebPartHost_1.default(rootScope, handleResize, handleCanvasChanged, reclaimFocus);
    });
    it('should set the service scope as expected', function (done) {
        chai_1.expect(canvasWebPartHost.serviceScope).to.equal(rootScope, 'service scope should be same');
        done();
    });
    it('should call the canvas change callback when canvas is changed', function (done) {
        canvasWebPartHost.setDirty('mockId');
        chai_1.expect(handleCanvasChanged.calledOnce).to.be.true;
        done();
    });
    it('should calls resize callback when property pane is opened', function (done) {
        canvasWebPartHost.webPartConfigurationEventCallback(sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneOpened);
        chai_1.expect(handleResize.calledOnce).to.be.true;
        done();
    });
    it('should calls reclaim focus callback when property pane closed', function (done) {
        canvasWebPartHost.webPartConfigurationEventCallback(sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneClosed);
        chai_1.expect(reclaimFocus.calledOnce).to.be.true;
        done();
    });
    it('should calls reclaim focus callback when property pane lost focus', function (done) {
        canvasWebPartHost.webPartConfigurationEventCallback(sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneLostFocus);
        chai_1.expect(reclaimFocus.calledOnce).to.be.true;
        done();
    });
});
