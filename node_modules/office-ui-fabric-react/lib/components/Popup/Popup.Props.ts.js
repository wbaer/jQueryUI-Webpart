module.exports = "/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\nimport { Popup } from './Popup';\r\n\r\nexport interface IPopupProps extends React.HTMLProps<Popup> {\r\n  /**\r\n   * Aria role for popup\r\n   */\r\n  role?: string;\r\n\r\n  /**\r\n   *  Defines the element id referencing the element containing label text for popup.\r\n   */\r\n  ariaLabelledBy?: string;\r\n\r\n /**\r\n   * Defines the element id referencing the element containing the description for the popup.\r\n   */\r\n  ariaDescribedBy?: string;\r\n\r\n /**\r\n  * A callback function for when the popup is dismissed from the close button or light dismiss. If provided, will\r\n  * handle escape keypresses and call this. The event will be stopped/canceled.\r\n  */\r\n  onDismiss?: (ev?: React.MouseEvent<HTMLElement>) => any;\r\n\r\n  /**\r\n   *  Optional class name for the root popup div.\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * If true, the unmounting of this component will cause focus to be restored to the element that had focus when first mounted.\r\n   * @default true\r\n   */\r\n  shouldRestoreFocus?: boolean;\r\n}";