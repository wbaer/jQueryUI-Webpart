/// <reference types="whatwg-fetch" />
/// <reference types="es6-promise" />
import { ServiceScope } from '@microsoft/sp-core-library';
import { IHttpClientOptions } from './HttpClient';
import HttpClientConfiguration from './HttpClientConfiguration';
/**
 * Private - this class contains some internal code shared between HttpClient
 * and SPHttpClient.
 */
export default class HttpClientHelper {
    private _fetchProvider;
    private _serviceScope;
    private _logSource;
    /**
     * The “logSource” parameter should be a name like “HttpClient” or “SPHttpClient” to indicate
     * the original caller's class name.
     */
    constructor(serviceScope: ServiceScope, logSource: string);
    /**
     * Clones the original options and sets the method to the passed in method name.
     */
    overrideHttpMethod(options: IHttpClientOptions | undefined, httpRequestMethod: string): IHttpClientOptions;
    /**
     * All network requests are routed through this method, which calls the
     * underlying IFetchProvider.fetch().
     */
    fetchCore(configuration: HttpClientConfiguration, request: Request): Promise<Response>;
}
