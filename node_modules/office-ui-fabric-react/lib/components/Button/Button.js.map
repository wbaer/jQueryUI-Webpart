{"version":3,"sources":["components/Button/Button.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,uCAAuC;AACvC,6BAA+B;AAC/B,sCAAsC;AAEtC,6CAAgD;AAChD,+CAAmE;AAGnE,+DAA8D;AAC9D,+DAA8D;AAC9D,kEAAiE;AACjE,sDAAqD;AACrD,+DAA8D;AAE9D;;;GAGG;AACH;IAA4B,0BAA+B;IAA3D;;IA6BA,CAAC;IA1BQ,uBAAM,GAAb;QACE,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvB,MAAM,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;YACzB,KAAK,yBAAU,CAAC,OAAO;gBACrB,MAAM,CAAC,oBAAC,6BAAa,eAAM,KAAK,IAAG,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAK,CAAC;YAE5E,KAAK,yBAAU,CAAC,QAAQ;gBACtB,MAAM,CAAC,oBAAC,+BAAc,eAAM,KAAK,IAAG,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAK,CAAC;YAE7E,KAAK,yBAAU,CAAC,IAAI;gBAClB,MAAM,CAAC,oBAAC,uBAAU,eAAM,KAAK,IAAG,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAK,CAAC;YAEzE,KAAK,yBAAU,CAAC,OAAO;gBACrB,MAAM,CAAC,oBAAC,6BAAa,eAAM,KAAK,IAAG,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAK,CAAC;YAE5E;gBACE,MAAM,CAAC,oBAAC,6BAAa,eAAM,KAAK,IAAG,GAAG,EAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAK,CAAC;QAC9E,CAAC;IACH,CAAC;IAEM,sBAAK,GAAZ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;IACH,aAAC;AAAD,CA7BA,AA6BC,CA7B2B,yBAAa,GA6BxC;AA7BY,wBAAM","file":"components/Button/Button.js","sourcesContent":["/* tslint:disable:no-unused-variable */\r\nimport * as React from 'react';\r\n/* tslint:enable:no-unused-variable */\r\n\r\nimport { BaseComponent } from '../../Utilities';\r\nimport { ButtonType, IButton, IButtonProps } from './Button.Props';\r\nimport { BaseButton } from './BaseButton';\r\n\r\nimport { DefaultButton } from './DefaultButton/DefaultButton';\r\nimport { CommandButton } from './CommandButton/CommandButton';\r\nimport { CompoundButton } from './CompoundButton/CompoundButton';\r\nimport { IconButton } from './IconButton/IconButton';\r\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\r\n\r\n/**\r\n * @deprecated\r\n * This class is deprecated. Use the individual *Button components instead.\r\n */\r\nexport class Button extends BaseComponent<IButtonProps, {}> implements IButton {\r\n  private _button: BaseButton;\r\n\r\n  public render() {\r\n    let props = this.props;\r\n\r\n    switch (props.buttonType) {\r\n      case ButtonType.command:\r\n        return <CommandButton { ...props } ref={ this._resolveRef('_button') } />;\r\n\r\n      case ButtonType.compound:\r\n        return <CompoundButton { ...props } ref={ this._resolveRef('_button') } />;\r\n\r\n      case ButtonType.icon:\r\n        return <IconButton { ...props } ref={ this._resolveRef('_button') } />;\r\n\r\n      case ButtonType.primary:\r\n        return <PrimaryButton { ...props } ref={ this._resolveRef('_button') } />;\r\n\r\n      default:\r\n        return <DefaultButton { ...props } ref={ this._resolveRef('_button') } />;\r\n    }\r\n  }\r\n\r\n  public focus() {\r\n    if (this._button) {\r\n      this._button.focus();\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}