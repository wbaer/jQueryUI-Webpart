{"version":3,"sources":["manifestSchemas/IClientSideWebPartManifest.ts"],"names":[],"mappings":"AAAA;;;;GAIG","file":"manifestSchemas/IClientSideWebPartManifest.js","sourcesContent":["/**\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * @file Client side Web Part manifest definition.\r\n */\r\n\r\nimport {\r\n  IClientSideComponentManifest,\r\n  ILocalizedString\r\n} from './IClientSideComponentManifest';\r\n\r\n// @betadocumentation - (SPPPLAT VSO#218656)\r\n/**\r\n * The client side SharePoint framework identifies a Web Part by its manifest. All Web Parts are expected to have a\r\n *  manifest. The manifest is a schematized JSON blob that is used in multiple parts of the SharePoint infrastructure\r\n *  to identify, load and process a Web Part. The schema for this manifest is completely owned and versioned by\r\n *  Microsoft. There are some required properties in the manifest and some optional properties. Optional properties\r\n *  need to be provided only if the Web Part needs the specific functionality. An invalid manifest could lead to issues\r\n *  with Web Part loading and functionality problems.\r\n *\r\n * @public\r\n */\r\nexport interface IClientSideWebPartManifest<TProperties> extends\r\n  IClientSideComponentManifest {\r\n\r\n  /**\r\n   * Definition: If true, this web part is disabled on Classic Sharepoint pages ?\r\n   * Usage: Certain web parts may not be required on or apply to Classic Sharepoint pages. This flag helps control\r\n   *  that. If this flag is true, the web part will not appear in the classic page web part gallery.\r\n   * Required: no\r\n   * Type: boolean\r\n   * Example: false\r\n   */\r\n  disabledOnClassicSharepoint?: boolean;\r\n\r\n  /**\r\n   * Definition: A Web Part can have pre-configured properties like the title, description, toolbox group name and Web\r\n   *  Part specific custom properties. And there can be multiple instances of these pre-configured properties. This\r\n   *  helps support scenarios where an organization may want to present multiple pre-configured entries for a Web Part\r\n   *  in the Toolbox. Each entry is expected to configure the Web Part with a different set of pre-configured\r\n   *  properties. A developer may decide to seed some initial values for these properties but an organization admin can\r\n   *  go ahead and customize these properties per the needs of his/her organization. The properties can also be modified\r\n   *  by the author of the page.\r\n   * Usage: help display a Web Part in the Tooblox, PropertyPane and the initial rendering of the Web Part.\r\n   * Required: yes\r\n   * Type: JSON object\r\n   * Localized: Depends on the property.\r\n   * Supported values: Array of IClientSideWebPartManifestEntry objects.\r\n   * Example:\r\n   *   \"[{\r\n   *      title:\"Image Web Part\",\r\n   *      description: \"This Web Part displays an image\",\r\n   *      group: \"Media\",\r\n   *      iconFontName: \"image\",\r\n   *      properties: {\r\n   *        imageSource: \"https://contoso.akamaihd.net/files/mountRainier.jpg\",\r\n   *        captionText: \"Mount Rainier\"\r\n   *      }\r\n   *    }]\"\r\n   */\r\n  preconfiguredEntries: IClientSideWebPartManifestEntry<TProperties>[];\r\n}\r\n\r\n/**\r\n * Manifest that is relevant to a Web Part instance.\r\n *\r\n * @public\r\n */\r\nexport interface IClientSideWebPartManifestInstance<TProperties> extends\r\n  IClientSideComponentManifest {\r\n}\r\n\r\n/**\r\n * This interface specifies the set of properties that can be pre-configured by a Web Part developer. Each\r\n * pre-configured instance of the Web Part will need a copy of these properties. Organization admins and\r\n * content authors can modify these properties on a need basis.\r\n *\r\n * @public\r\n */\r\nexport interface IClientSideWebPartManifestEntry<TProperties> {\r\n\r\n  /**\r\n   * Definition: Title of the web part represented as a single a dictionary of locale keys to title values. This\r\n   *  value will be displayed to the user in the toolbox. This title should be used in the Toolbox and other display\r\n   *  areas. The Web Part developer may give an initial title to the web part. The organization admin and page author\r\n   *  will have the ability to change this title as per need.\r\n   * Usage: display the name of the web part in the toolbox, web part gallery and the page.\r\n   * Required: yes\r\n   * Type: Object\r\n   * Localized: yes\r\n   * Supported values: a dictionary of locale keys to strings. Should always have a 'default' key.\r\n   * Example: \"My Webpart\"\r\n   *          {\r\n   *            \"default\": \"My WebPart\"\r\n   *            \"en-us\": \"My WebPart\",\r\n   *            \"fr-fr\": \"Ma WebPart\",\r\n   *            \"zh\": \"我的 web 部件\"\r\n   *          }\r\n   */\r\n  title: ILocalizedString;\r\n\r\n  /**\r\n   * Definition: Description of the web part represented as a dictionary of locale keys to description values. This\r\n   *  value will be displayed to the user in the toolbox. This description should be used in the Toolbox tooltip and\r\n   *  other display areas. The Web Part developer may give an initial description to the web part. The organization\r\n   *  admin and page author will have the ability to change this description as per need.\r\n   * Usage: display the description of the web part in the toolbox tooltip, web part gallery and the page.\r\n   * Required: yes\r\n   * Type: Object\r\n   * Localized: yes\r\n   * Supported values: a dictionary of locale keys to strings. Should always have a 'default' key.\r\n   * Example: \"A tool for displaying neat information.\"\r\n   *          {\r\n   *            \"default\": \"A tool for displaying neat information.\",\r\n   *            \"en-us\": \"A tool for displaying neat information.\",\r\n   *            \"fr-fr\": \"Un outil d’affichage des informations soignées.\",\r\n   *            \"zh\": \"用於顯示整潔資訊的工具。\"\r\n   *          }\r\n   */\r\n  description: ILocalizedString;\r\n\r\n  /**\r\n   * Definition: The icon for the Web Part, to be displayed in the toolbox, represented as a character name in the\r\n   *  Office 365 icon font file. The icon font is specified here: http://o365icons.cloudapp.net/. If this field has\r\n   *  a value, the '{@link iconImageUrl}' field will be ignored.\r\n   * Required: no\r\n   * Type: string\r\n   * Localized: no\r\n   * Supported values: Any character name in the Office 365 Icon Font.\r\n   * Example: \"graph\"\r\n   */\r\n  officeFabricIconFontName?: string;\r\n\r\n  /**\r\n   * Definition: The icon for the web part, to be displayed in the toolbox, represented an image URL. The image at the\r\n   *  URL must be exactly 38x38 px (SPPPLAT VSO#218660 to fix the size of the icon image).\r\n   *  If the '{@link officeFabricIconFontName}' field does not have a value, this field must have a value.\r\n   * Required: no\r\n   * Type: string\r\n   * Localized: no\r\n   * Supported values: Any absolute URL.\r\n   * Example: \"https://contoso.akamaihd.net/files/myWebpartIcon.png\"\r\n   */\r\n  iconImageUrl?: string;\r\n\r\n  /* @todo: refactor the group design based on API review (SPPPLAT VSO#218387).\r\n\r\n /**\r\n  * Definition: A group id. This group id should be used to decide which toolbox group the web part should be\r\n  *   placed into. The client side framework has reserved group ids for default groups. The developer can pick\r\n  *   one of those groups. In that case the group field will be ignored. Alternatively, the developer can pick\r\n  *   a completely unique id and a group name. The toolbox will then show the web part in its own group.\r\n  * Usage: display of the Web Part icon in a specific group in the authoring toolbox.\r\n  * Required: yes\r\n  * Localized: no\r\n  * Supported values: any GUID\r\n  * Example: \"dbef608d-3ad5-4f8f-b139-d916f2f0a294\"\r\n  *\r\n  * @beta\r\n  */\r\n  groupId: string;\r\n\r\n  // @todo - does this group also affect the web part gallery in the ClassicPage scenario\r\n  /**\r\n   * Definition: This field is used to help decide the Toolbox group for the Web Part in the authoring\r\n   *  experience. In the server rendered page, the Web Part gallery is equivalent of the Toolbox. If no value is\r\n   *  provided, the Web Part will be displayed in the \"Custom\" group.\r\n   * Usage: display of the Web Part icon in a specific group in the authoring toolbox.\r\n   * Required: no\r\n   * Localized: yes\r\n   * Supported values: string\r\n   * Example: { \"default\": \"Media Web Parts\" }\r\n   *\r\n   * @beta\r\n   */\r\n  group?: ILocalizedString;\r\n\r\n  /**\r\n   * Definition: Use this field to specify the data version of the pre-configured data provided to the web part.\r\n   *  Note that data version is different from the version field in the manifest. The manifest version\r\n   *  is used to control the versioning of the web part code, while data version is used to control the versioning of\r\n   *  the serialized data of the web part. Refer to dataVersion field of your web part for more information.\r\n   * Usage: versioning and evolving the serialized data of the web part\r\n   * Required: no\r\n   * Type: string representing a semantic version (http://semver.org)\r\n   * Supported values: MAJOR.MINOR\r\n   * Example: \"1.0\"\r\n   */\r\n  dataVersion?: string;\r\n\r\n  /**\r\n   * Definition: every Web Part is expected to have some custom properties. e.g. an image Web Part may have the image\r\n   *  url and caption text as custom properties, a list Web Part may have the list id and list title as custom\r\n   *  properties, and so on. The Web Part framework is transparent to these properties. It just acts as a conduit to\r\n   *  pass these properties in and out to the Web Parts. The Web Part developer fully controls the schema of these\r\n   *  properties. The Web Part developer should follow versioning rules (@todo: pointer to Web Part versioning document)\r\n   *  to evolve these properties.\r\n   *\r\n   * Usage: rendering of the Web Part.\r\n   * Required: yes\r\n   * Localized: no\r\n   * Supported values: any\r\n   * Example: {\"imageSource\": \"https://contoso.akamaihd.net/files/contosoLogo.jpg\", \"captionText\": \"Contoso logo\"}\"\r\n   */\r\n  properties: TProperties;\r\n}"],"sourceRoot":"..\\..\\src"}