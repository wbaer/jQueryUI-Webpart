"use strict";
var chai_1 = require("chai");
var index_1 = require("./index");
var SPKillSwitch_1 = require("../SPKillSwitch");
var Guid_1 = require("../Guid");
describe('SPKillSwitches tests', function () {
    var emptyKillSwitches = {};
    var validKillSwitchesWithNull = {
        'Guid(1158fbf1-8dac-4252-b378-77489fd230d8)': true,
        TEST_NULL: true,
        '{e25dc355-64df-4d3d-beb8-001e5dae531c}': true
    };
    var validKillSwitchesWithUndefined = {
        'Guid(1158fbf1-8dac-4252-b378-77489fd230d8)': true,
        TEST_NULL: true,
        '{e25dc355-64df-4d3d-beb8-001e5dae531c}': true
    };
    var validNormalizedKillSwitchesWithNull = {
        '9d4f312c-e365-45b4-b6ef-fa24e512e7e5': true,
        TEST_NULL: true,
        '1158fbf1-8dac-4252-b378-77489fd230d8': true
    };
    var validNormalizedKillSwitchesWithUndefined = {
        '9d4f312c-e365-45b4-b6ef-fa24e512e7e5': true,
        TEST_UNDEFINED: true,
        '1158fbf1-8dac-4252-b378-77489fd230d8': true
    };
    var validKillSwitches = {
        '9d4f312c-e365-45b4-b6ef-fa24e512e7e5': true,
        '{e25dc355-64df-4d3d-beb8-001e5dae531c}': true,
        'Guid(1158fbf1-8dac-4252-b378-77489fd230d8)': true
    };
    var validNormalizedKillSwitches = {
        '9d4f312c-e365-45b4-b6ef-fa24e512e7e5': true,
        'e25dc355-64df-4d3d-beb8-001e5dae531c': true,
        '1158fbf1-8dac-4252-b378-77489fd230d8': true
    };
    var invalidKillSwitches = {
        'not-a-guid': true,
        '{not-a-guid}': true,
        'Guid(not-a-guid)': true,
        '': true,
        '1158fbf1-8dac-5252-b378-77489fd230d8': true,
        '1158fbf1-8dac-4252-6378-77489fd230d8': true,
        '9x4f312y-z365-45b4-b6ef-fa24e512e7e5': true,
        TEST_UNDEFINED: true,
        TEST_NULL: true
    };
    var invalidNormalizedKillSwitches = {
        'not-a-guid': true,
        '': true,
        '1158fbf1-8dac-5252-b378-77489fd230d8': true,
        '9x4f312y-z365-45b4-b6ef-fa24e512e7e5': true,
        TEST_UNDEFINED: true,
        TEST_NULL: true
    };
    var validAndInvalidKillSwitches = {
        'not-a-guid': true,
        '': true,
        '9d4f312c-e365-45b4-b6ef-fa24e512e7e5': true,
        '1158fbf1-8dac-5252-b378-77489fd230d8': true,
        '9x4f312y-z365-45b4-b6ef-fa24e512e7e5': true,
        TEST_UNDEFINED: true,
        TEST_NULL: true
    };
    it('Can parse an undefined killswitch array', function () {
        SPKillSwitch_1.default.initialize(index_1.TEST_UNDEFINED);
        chai_1.assert.isTrue(true);
    });
    it('Can parse a null killswitch array', function () {
        SPKillSwitch_1.default.initialize(index_1.TEST_NULL);
        chai_1.assert.isTrue(true);
    });
    it('Can parse an empty killswitch array', function () {
        SPKillSwitch_1.default.initialize(emptyKillSwitches);
        chai_1.assert.isTrue(true);
    });
    it('Can parse a killswitch array with an undefined entry', function () {
        SPKillSwitch_1.default.initialize(validKillSwitchesWithUndefined);
        chai_1.assert.isTrue(true);
    });
    it('Can parse a killswitch array with an null entry', function () {
        SPKillSwitch_1.default.initialize(validKillSwitchesWithNull);
        chai_1.assert.isTrue(true);
    });
    it('Can parse a normalized killswitch array with an undefined entry', function () {
        SPKillSwitch_1.default.initialize(validNormalizedKillSwitchesWithUndefined);
        chai_1.assert.isTrue(true);
    });
    it('Can parse a normalized killswitch array with an null entry', function () {
        SPKillSwitch_1.default.initialize(validNormalizedKillSwitchesWithNull);
        chai_1.assert.isTrue(true);
    });
    it('Can parse a valid killswitch array', function () {
        SPKillSwitch_1.default.initialize(validKillSwitches);
        chai_1.assert.isTrue(true);
    });
    it('Can parse a valid normalized killswitch array', function () {
        SPKillSwitch_1.default.initialize(validNormalizedKillSwitches);
        chai_1.assert.isTrue(true);
    });
    it('Can parse an invalid killswitch array', function () {
        SPKillSwitch_1.default.initialize(invalidKillSwitches);
        chai_1.assert.isTrue(true);
    });
    it('Can parse a invalid normalized killswitch array', function () {
        SPKillSwitch_1.default.initialize(invalidNormalizedKillSwitches);
        chai_1.assert.isTrue(true);
    });
    it('Can parse an array with both valid and invalidkillswitches', function () {
        SPKillSwitch_1.default.initialize(validAndInvalidKillSwitches);
        describe('SPKillSwitches object tests', function () {
            it('Can find a killswitch contained in SPKillSwitch object', function () {
                chai_1.assert.isTrue(SPKillSwitch_1.default.isActivated(Guid_1.default.parse('9d4f312c-e365-45b4-b6ef-fa24e512e7e5'), '9/17/2015', 'SPEED_FeatureX'));
            });
            it('Cannot find a killswitch not contained in a SPKillSwitch object', function () {
                chai_1.assert.isTrue(!SPKillSwitch_1.default.isActivated(Guid_1.default.parse('{e25dc355-64df-4d3d-beb8-001e5dae531c}'), '9/17/2015', 'SPEED_FeatureX'));
            });
            it('Cannot find an invalid killswitch not contained in a SPKillSwitch object', function () {
                chai_1.assert.isTrue(
                !SPKillSwitch_1.default.isActivated(Guid_1.default.tryParse('not-a-guid'), '9/17/2015', 'SPEED_FeatureX'));
            });
            it('Cannot find a null killswitch in a SPKillSwitch object', function () {
                chai_1.assert.isTrue(!SPKillSwitch_1.default.isActivated(index_1.TEST_NULL, '9/17/2015', 'SPEED_FeatureX'));
            });
            it('Cannot find an undefined killswitch in a SPKillSwitch object', function () {
                chai_1.assert.isTrue(!SPKillSwitch_1.default.isActivated(index_1.TEST_UNDEFINED, '9/17/2015', 'SPEED_FeatureX'));
            });
        });
        chai_1.assert.isTrue(true);
    });
});
