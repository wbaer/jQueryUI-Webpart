{"version":3,"sources":["utilities/decorators/withResponsiveMode.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;IAQA,IAAY,cAOX;IAPD,WAAY,cAAc;QACxB,qDAAS,CAAA;QACT,uDAAU,CAAA;QACV,qDAAS,CAAA;QACT,uDAAU,CAAA;QACV,yDAAW,CAAA;QACX,2DAAY,CAAA;IACd,CAAC,EAPW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAOzB;IAED,IAAM,yBAAyB,GAAG;QAChC,GAAG;QACH,GAAG;QACH,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,QAAQ;KACT,CAAC;IAEF,IAAI,YAA4B,CAAC;IAEjC;;OAEG;IACH,2BAAkC,cAA8B;QAC9D,YAAY,GAAG,cAAc,CAAC;IAChC,CAAC;IAFD,8CAEC;IAED,4BAAqF,iBAA4E;QAE/J,MAAM;YAAkC,sCAA0C;YAEhF;gBAAA,YACE,iBAAO,SAMR;gBALC,KAAI,CAAC,2BAA2B,GAAG,KAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;gBAE/E,KAAI,CAAC,KAAK,GAAG;oBACX,cAAc,EAAE,KAAI,CAAC,kBAAkB,EAAE;iBAC1C,CAAC;;YACJ,CAAC;YAEM,8CAAiB,GAAxB;gBAAA,iBAUC;gBATC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE;oBAChC,IAAI,cAAc,GAAG,KAAI,CAAC,kBAAkB,EAAE,CAAC;oBAE/C,EAAE,CAAC,CAAC,cAAc,KAAK,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;wBACjD,KAAI,CAAC,QAAQ,CAAC;4BACZ,cAAc,EAAE,cAAc;yBAC/B,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YAEM,iDAAoB,GAA3B;gBACE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACzB,CAAC;YAEM,mCAAM,GAAb;gBACQ,IAAA,0CAAc,CAAgB;gBAEpC,MAAM,CAAC,CACL,oBAAC,iBAAiB,aAAC,GAAG,EAAG,IAAI,CAAC,2BAA2B,EAAG,cAAc,EAAG,cAAc,IAAQ,IAAI,CAAC,KAAK,EAAK,CACnH,CAAC;YACJ,CAAC;YAEO,+CAAkB,GAA1B;gBACE,IAAI,cAAc,GAAG,cAAc,CAAC,KAAK,CAAC;gBAC1C,IAAI,GAAG,GAAG,qBAAS,EAAE,CAAC;gBAEtB,EAAE,CAAC,CAAC,OAAO,GAAG,KAAK,WAAW,CAAC,CAAC,CAAC;oBAC/B,OAAO,GAAG,CAAC,UAAU,GAAG,yBAAyB,CAAC,cAAc,CAAC,EAAE,CAAC;wBAClE,cAAc,EAAE,CAAC;oBACnB,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,EAAE,CAAC,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;wBAC/B,cAAc,GAAG,YAAY,CAAC;oBAChC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,IAAI,KAAK,CACb,4FAA4F;4BAC5F,+DAA+D,CAChE,CAAC;oBACJ,CAAC;gBACH,CAAC;gBAED,MAAM,CAAC,cAAc,CAAC;YACxB,CAAC;YACH,yBAAC;QAAD,CAxDO,AAwDN,CAxDuC,6BAAa,GAwDnD;IACJ,CAAC;IA3DD,gDA2DC","file":"utilities/decorators/withResponsiveMode.js","sourcesContent":["import * as React from 'react';\r\nimport { BaseDecorator } from './BaseDecorator';\r\nimport { getWindow } from '../../Utilities';\r\n\r\nexport interface IWithResponsiveModeState {\r\n  responsiveMode?: ResponsiveMode;\r\n}\r\n\r\nexport enum ResponsiveMode {\r\n  small = 0,\r\n  medium = 1,\r\n  large = 2,\r\n  xLarge = 3,\r\n  xxLarge = 4,\r\n  xxxLarge = 5\r\n}\r\n\r\nconst RESPONSIVE_MAX_CONSTRAINT = [\r\n  479,\r\n  639,\r\n  1023,\r\n  1365,\r\n  1919,\r\n  99999999\r\n];\r\n\r\nlet _defaultMode: ResponsiveMode;\r\n\r\n/**\r\n * Allows a server rendered scenario to provide a default responsive mode.\r\n */\r\nexport function setResponsiveMode(responsiveMode: ResponsiveMode) {\r\n  _defaultMode = responsiveMode;\r\n}\r\n\r\nexport function withResponsiveMode<P extends { responsiveMode?: ResponsiveMode }, S>(ComposedComponent: (new (props: P, ...args: any[]) => React.Component<P, S>)): any {\r\n\r\n  return class WithResponsiveMode extends BaseDecorator<P, IWithResponsiveModeState> {\r\n\r\n    constructor() {\r\n      super();\r\n      this._updateComposedComponentRef = this._updateComposedComponentRef.bind(this);\r\n\r\n      this.state = {\r\n        responsiveMode: this._getResponsiveMode()\r\n      };\r\n    }\r\n\r\n    public componentDidMount() {\r\n      this._events.on(window, 'resize', () => {\r\n        let responsiveMode = this._getResponsiveMode();\r\n\r\n        if (responsiveMode !== this.state.responsiveMode) {\r\n          this.setState({\r\n            responsiveMode: responsiveMode\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n      this._events.dispose();\r\n    }\r\n\r\n    public render() {\r\n      let { responsiveMode } = this.state;\r\n\r\n      return (\r\n        <ComposedComponent ref={ this._updateComposedComponentRef } responsiveMode={ responsiveMode } { ...this.props } />\r\n      );\r\n    }\r\n\r\n    private _getResponsiveMode(): ResponsiveMode {\r\n      let responsiveMode = ResponsiveMode.small;\r\n      let win = getWindow();\r\n\r\n      if (typeof win !== 'undefined') {\r\n        while (win.innerWidth > RESPONSIVE_MAX_CONSTRAINT[responsiveMode]) {\r\n          responsiveMode++;\r\n        }\r\n      } else {\r\n        if (_defaultMode !== undefined) {\r\n          responsiveMode = _defaultMode;\r\n        } else {\r\n          throw new Error(\r\n            'Content was rendered in a server environment without providing a default responsive mode. ' +\r\n            'Call setResponsiveMode to define what the responsive mode is.'\r\n          );\r\n        }\r\n      }\r\n\r\n      return responsiveMode;\r\n    }\r\n  };\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}