/// <reference types="es6-collections" />
/**
 * Part of IPackageReviewJson.
 */
export interface IPackageReviewItemJson {
    name: string;
    allowedCategories: string[];
}
/**
 * Part of IPackageReviewJson.
 */
export interface IPackageReviewSettingsJson {
    ignoredNpmScopes?: string[];
}
/**
 * This represents the JSON data structure for the "PackageDependencies.json" configuration file.
 * See packagereview-schema.json for documentation.
 */
export interface IPackageReviewJson {
    $schema: string;
    settings?: IPackageReviewSettingsJson;
    browserPackages: IPackageReviewItemJson[];
    nonBrowserPackages: IPackageReviewItemJson[];
}
export declare class PackageReviewItem {
    packageName: string;
    allowedInBrowser: boolean;
    allowedCategories: Set<string>;
}
/**
 * This represents the JSON file specified via the "packageReviewFile" option in rush.json.
 */
export default class PackageReviewConfiguration {
    items: PackageReviewItem[];
    private _itemsByName;
    private _ignoredNpmScopes;
    private _loadedJson;
    /**
     * Loads the configuration data from PackageDependencies.json and returns
     * an PackageReviewFile object.
     */
    static loadFromFile(jsonFilename: string): PackageReviewConfiguration;
    /**
     * DO NOT CALL -- Use PackageReviewFile.loadFromFile() instead.
     */
    constructor(packageReviewJson: IPackageReviewJson, jsonFilename: string);
    /**
     * A list of NPM package scopes that will be excluded from review (e.g. \"@types\")
     */
    readonly ignoredNpmScopes: Set<string>;
    getItemByName(packageName: string): PackageReviewItem;
    addOrUpdatePackage(packageName: string, allowedInBrowser: boolean, reviewCategory: string): void;
    saveFile(jsonFilename: string): void;
    /**
     * Helper function only used by the constructor when loading the file.
     */
    private _addItemJson(itemJson, jsonFilename, allowedInBrowser);
    /**
     * Helper function that adds an already created PackageReviewItem to the
     * list and set.
     */
    private _addItem(item);
}
