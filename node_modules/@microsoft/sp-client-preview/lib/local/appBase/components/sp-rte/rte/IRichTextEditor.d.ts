/**
 * @copyright Microsoft Corporation. All rights reserved.
 */
import { IBounds } from './IBounds';
import { IRange } from './IRange';
import { IRichTextFormat } from './IRichTextFormat';
/**
 * The interface for SPRte interaction with Quill
 * SPRte only depend on this interface and should not directly depend on Quill API
 * In case of a Quill upgrade, we can create a new implementation of this interface to use in SPRte
 */
export interface IRichTextEditor {
    /**
     * @param start - Start position of selection
     * @param end - End position of selection
     *
     * Clear formattings in a given selection
     */
    clearFormatting(start: number, end: number): void;
    /**
     * @return editor's HTML content
     *
     * Destroy the editor instance
     */
    destroy(): string;
    /**
     * Set the focus inside the editor
     */
    focus(): void;
    /**
     * @param start - Start position of selection
     * @param end - End position of selection
     * @param formats - Map of key:value pairs for formats to apply
     * @param applyAllFormatsToLine - Forces all formats to be applied to the whole line(s). If not provided,
     * formats are divided into two buckets (line vs non-line) based on their isLine field
     *
     * A unified method for applying Quill formats to any selection
     */
    format(start: number, end: number, formats: Object, applyAllFormatsToLine?: boolean): void;
    /**
     * Get rendered position of the cursor for a given cursor position
     */
    getBounds(position: number): IBounds;
    /**
     * Get editor's HTML content
     */
    getHTML(): string;
    /**
     * Get the current selection in the editor
     */
    getSelection(): IRange;
    /**
     * @param start - Optional desired range of the text
     *
     * Get editor's text content
     */
    getText(range?: IRange): string;
    /**
     * @param format - Format to apply
     * @param start - Start value of range
     * @param end - End value of range
     *
     * @return The value of the format on the given range; undefined if the format is not applied
     */
    getFormatValue(start: number, end: number, format: IRichTextFormat): boolean | string | number;
    /**
     * Gets the type of editor
     */
    getEditorType(): string;
    /**
     * @param format - Format to apply
     * @param start - Start value of range
     * @param end - End value of range
     *
     * @return If the format is applied to the given range
     */
    isFormatAppliedToRange(start: number, end: number, format: IRichTextFormat): boolean;
    /**
     * Set the current selection in the editor
     */
    setSelection(range: IRange): void;
    /**
     * Applies the format to the table in the RTE
     */
    formatTable(format: string, target: Element): void;
}
