"use strict";
var chai_1 = require("chai");
var test_1 = require("@microsoft/sp-core-library/lib/test");
var resolveAddress_1 = require("../resolveAddress");
var TestManifests_1 = require("./TestManifests");
var SPSystemJsComponentLoader_1 = require("../SPSystemJsComponentLoader");
describe('resolveAddress tests', function () {
    var fullPath = 'http://my.domain.com/path';
    describe('Error cases', function () {
        it('throws with no manifest', function () {
            chai_1.assert.throw(function () { return resolveAddress_1.default(test_1.TEST_UNDEFINED, 'anyName'); });
        });
        it('throws with no resource name', function () {
            chai_1.assert.throw(function () { return resolveAddress_1.default(TestManifests_1.default.manifestWithPathDependency, test_1.TEST_UNDEFINED); });
        });
        it('throws with empty resource name', function () {
            chai_1.assert.throw(function () { return resolveAddress_1.default(TestManifests_1.default.manifestWithPathDependency, ''); });
        });
        it('throws with wrong resource name', function () {
            chai_1.assert.throw(function () { return resolveAddress_1.default(TestManifests_1.default.manifestWithPathDependency, 'notTheRightName'); });
        });
    });
    describe('Path / localizedPath dependency', function () {
        it('resolves path dependency', function () {
            var url = resolveAddress_1.default(TestManifests_1.default.manifestWithPathDependency, TestManifests_1.default.pathDependencyName);
            chai_1.assert.equal(url, TestManifests_1.default.pathDependencyFullUrl);
        });
        it('resolves localized path dependency with paths in en-US', function () {
            SPSystemJsComponentLoader_1.default._currentLocale = 'en-us';
            var url = resolveAddress_1.default(TestManifests_1.default.manifestWithLocalizedPathWithPathsDependency, TestManifests_1.default.localizedPathWithPathsDependencyName);
            chai_1.assert.equal(url, TestManifests_1.default.localizedPathWithPathsDependencyFullUrlEnUs);
        });
        it('resolves localized path dependency with paths in es-ES', function () {
            SPSystemJsComponentLoader_1.default._currentLocale = 'es-es';
            var url = resolveAddress_1.default(TestManifests_1.default.manifestWithLocalizedPathWithPathsDependency, TestManifests_1.default.localizedPathWithPathsDependencyName);
            chai_1.assert.equal(url, TestManifests_1.default.localizedPathWithPathsDependencyFullUrlEsEs);
        });
        it('resolves localized path dependency with default path', function () {
            var url = resolveAddress_1.default(TestManifests_1.default.manifestWithLocalizedPathDependency, TestManifests_1.default.localizedPathDependencyName);
            chai_1.assert.equal(url, TestManifests_1.default.localizedPathDependencyFullUrl);
        });
    });
    describe('Component dependency', function () {
        it('resolves component dependency with failover path', function () {
            var url = resolveAddress_1.default(TestManifests_1.default.manifestWithComponentDependencyWithFailoverPath, TestManifests_1.default.componentDependencyName);
            chai_1.assert.equal(url, TestManifests_1.default.failoverPath);
        });
        it('throws on component dependency without failover path', function () {
            chai_1.assert.throws(function () {
                resolveAddress_1.default(TestManifests_1.default.manifestWithComponentDependency, TestManifests_1.default.componentDependencyName);
            });
        });
    });
});
