{"version":3,"sources":["components/CommandBar/CommandBar.tsx"],"names":[],"mappings":"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","file":"components/CommandBar/CommandBar.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  EventGroup,\r\n  autobind,\r\n  buttonProperties,\r\n  css,\r\n  divProperties,\r\n  getId,\r\n  getNativeProps\r\n} from '../../Utilities';\r\nimport { ICommandBar, ICommandBarProps } from './CommandBar.Props';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { ContextualMenu, IContextualMenuProps, IContextualMenuItem, hasSubmenuItems } from '../../ContextualMenu';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nimport {\r\n  Icon,\r\n  IconName,\r\n  IIconProps\r\n} from '../../Icon';\r\nimport './CommandBar.scss';\r\n\r\nconst OVERFLOW_KEY = 'overflow';\r\nconst OVERFLOW_WIDTH = 41.5;\r\n\r\nexport interface ICommandBarState {\r\n  renderedItems?: IContextualMenuItem[];\r\n  renderedOverflowItems?: IContextualMenuItem[];\r\n  expandedMenuItemKey?: string;\r\n  expandedMenuId?: string;\r\n  contextualMenuProps?: IContextualMenuProps;\r\n  contextualMenuTarget?: HTMLElement;\r\n  renderedFarItems?: IContextualMenuItem[];\r\n}\r\n\r\nexport class CommandBar extends React.Component<ICommandBarProps, ICommandBarState> implements ICommandBar {\r\n  public static defaultProps = {\r\n    items: [],\r\n    overflowItems: [],\r\n    farItems: []\r\n  };\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    commandSurface: HTMLElement;\r\n    farCommandSurface: HTMLElement;\r\n    commandBarRegion: HTMLElement;\r\n    searchSurface: HTMLElement;\r\n    focusZone: FocusZone;\r\n  };\r\n\r\n  private _id: string;\r\n  private _overflowWidth: number;\r\n  private _commandItemWidths: { [key: string]: number };\r\n  private _events: EventGroup;\r\n\r\n  constructor(props: ICommandBarProps) {\r\n    super(props);\r\n\r\n    this.state = this._getStateFromProps(props);\r\n\r\n    this._id = getId('CommandBar');\r\n    this._events = new EventGroup(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this._updateItemMeasurements();\r\n    this._updateRenderedItems();\r\n\r\n    this._events.on(window, 'resize', this._updateRenderedItems);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this._events.dispose();\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: ICommandBarProps) {\r\n    this.setState(this._getStateFromProps(nextProps));\r\n    this._commandItemWidths = null;\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: ICommandBarProps, prevStates: ICommandBarState) {\r\n    if (!this._commandItemWidths) {\r\n      this._updateItemMeasurements();\r\n      this._updateRenderedItems();\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { isSearchBoxVisible, searchPlaceholderText, className } = this.props;\r\n    const { renderedItems, contextualMenuProps, expandedMenuItemKey, expandedMenuId, renderedOverflowItems, contextualMenuTarget, renderedFarItems } = this.state;\r\n    let searchBox;\r\n\r\n    if (isSearchBoxVisible) {\r\n      searchBox = (\r\n        <div className='ms-CommandBarSearch' ref='searchSurface'>\r\n          <input className='ms-CommandBarSearch-input' type='text' placeholder={ searchPlaceholderText } />\r\n          <div className='ms-CommandBarSearch-iconWrapper ms-CommandBarSearch-iconSearchWrapper'>\r\n            <i className='ms-Icon ms-Icon--Search'></i>\r\n          </div>\r\n          <div className='ms-CommandBarSearch-iconWrapper ms-CommandBarSearch-iconClearWrapper ms-font-s'>\r\n            <i className='ms-Icon ms-Icon--Cancel'></i>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className={ css('ms-CommandBar', className) } ref='commandBarRegion'>\r\n        { searchBox }\r\n        <FocusZone ref='focusZone' direction={ FocusZoneDirection.horizontal } rootProps={ { role: 'menubar' } }>\r\n          <div className='ms-CommandBar-primaryCommands' ref='commandSurface'>\r\n            { renderedItems.map((item, index) => (\r\n              this._renderItemInCommandBar(item, index, expandedMenuItemKey)\r\n            )).concat((renderedOverflowItems && renderedOverflowItems.length) ? [\r\n              <div className='ms-CommandBarItem' key={ OVERFLOW_KEY } ref={ OVERFLOW_KEY }>\r\n                <button\r\n                  id={ this._id + OVERFLOW_KEY }\r\n                  className={ css('ms-CommandBarItem-link', { 'is-expanded': (expandedMenuItemKey === OVERFLOW_KEY) }) }\r\n                  onClick={ this._onOverflowClick }\r\n                  role='menuitem'\r\n                  aria-label={ this.props.elipisisAriaLabel || '' }\r\n                  aria-haspopup={ true }\r\n                  data-automation-id='commandBarOverflow'\r\n                >\r\n                  <i className='ms-CommandBarItem-overflow ms-Icon ms-Icon--More' />\r\n                </button>\r\n              </div>\r\n            ] : []) }\r\n          </div>\r\n          <div className='ms-CommandBar-sideCommands' ref='farCommandSurface'>\r\n            { renderedFarItems.map((item, index) => (\r\n              this._renderItemInCommandBar(item, index, expandedMenuItemKey, true)\r\n            )) }\r\n          </div>\r\n        </FocusZone>\r\n        { (contextualMenuProps) ?\r\n          (<ContextualMenu\r\n            className='ms-CommandBar-menuHost'\r\n            isBeakVisible={ true }\r\n            directionalHint={ DirectionalHint.bottomAutoEdge }\r\n            { ...contextualMenuProps }\r\n            targetElement={ contextualMenuTarget }\r\n            labelElementId={ expandedMenuId }\r\n            onDismiss={ this._onContextMenuDismiss }\r\n          />\r\n          ) : (null) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    this.refs.focusZone.focus();\r\n  }\r\n\r\n  private _renderItemInCommandBar(item: IContextualMenuItem, index: number, expandedMenuItemKey: string, isFarItem?: boolean) {\r\n    const itemKey = item.key || String(index);\r\n    const className = css(item.onClick ? 'ms-CommandBarItem-link' : 'ms-CommandBarItem-text', !item.name && 'ms-CommandBarItem--noName');\r\n    const classNameValue = css(className, { 'is-expanded': (expandedMenuItemKey === item.key) });\r\n    let hasIcon = !!item.icon || !!item.iconProps;\r\n\r\n    return <div className={ css('ms-CommandBarItem', item.className) } key={ itemKey } ref={ itemKey }>\r\n      { (() => {\r\n        if (item.onClick || hasSubmenuItems(item)) {\r\n          return <button\r\n            { ...getNativeProps(item, buttonProperties) }\r\n            id={ this._id + item.key }\r\n            className={ classNameValue }\r\n            onClick={ (ev) => this._onItemClick(ev, item) }\r\n            data-command-key={ index }\r\n            aria-haspopup={ hasSubmenuItems(item) }\r\n            role='menuitem'\r\n            aria-label={ item.ariaLabel || item.name }\r\n          >\r\n            { (hasIcon) ? this._renderIcon(item) : (null) }\r\n            { (!!item.name) && <span className='ms-CommandBarItem-commandText'>{ item.name }</span> }\r\n            { hasSubmenuItems(item) ? (\r\n              <i className='ms-CommandBarItem-chevronDown ms-Icon ms-Icon--ChevronDown' />\r\n            ) : (null) }\r\n          </button>;\r\n        } else {\r\n          return <div\r\n            { ...getNativeProps(item, divProperties) }\r\n            id={ this._id + item.key }\r\n            className={ classNameValue }\r\n            data-command-key={ index }\r\n            aria-haspopup={ hasSubmenuItems(item) }\r\n          >\r\n            { (hasIcon) ? this._renderIcon(item) : (null) }\r\n            <span className='ms-CommandBarItem-commandText ms-font-m ms-font-weight-regular' aria-hidden='true' role='presentation'>{ item.name }</span>\r\n          </div>;\r\n        }\r\n      })() }\r\n    </div>;\r\n  }\r\n\r\n  private _renderIcon(item: IContextualMenuItem) {\r\n    // Only present to allow continued use of item.icon which is deprecated.\r\n    let iconProps: IIconProps = item.iconProps ? item.iconProps : {\r\n      iconName: item.icon as IconName\r\n    };\r\n    // Use the default icon color for the known icon names\r\n    let iconColorClassName = iconProps.iconName === 'None' ? '' : 'ms-CommandBarItem-iconColor';\r\n    let iconClassName = css('ms-CommandBarItem-icon', iconColorClassName, iconProps.className);\r\n\r\n    return <Icon { ...iconProps } className={ iconClassName } />;\r\n  }\r\n\r\n  private _updateItemMeasurements() {\r\n    // the generated width for overflow is 35 in chrome, 38 in IE, but the actual value is 41.5\r\n    if (this.refs[OVERFLOW_KEY] || (this.props.overflowItems && this.props.overflowItems.length)) {\r\n      this._overflowWidth = OVERFLOW_WIDTH;\r\n    } else {\r\n      this._overflowWidth = 0;\r\n    }\r\n\r\n    if (!this._commandItemWidths) {\r\n      this._commandItemWidths = {};\r\n    }\r\n\r\n    for (let i = 0; i < this.props.items.length; i++) {\r\n      let item = this.props.items[i];\r\n\r\n      if (!this._commandItemWidths[item.key]) {\r\n        let el = this.refs[item.key] as HTMLElement;\r\n\r\n        if (el) {\r\n          this._commandItemWidths[item.key] = el.getBoundingClientRect().width;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _updateRenderedItems() {\r\n    let { items, overflowItems } = this.props;\r\n    let commandSurface = this.refs.commandSurface;\r\n    let farCommandSurface = this.refs.farCommandSurface;\r\n    let commandBarRegion = this.refs.commandBarRegion;\r\n    let searchSurface = this.refs.searchSurface;\r\n    let renderedItems = [].concat(items);\r\n    let renderedOverflowItems = overflowItems;\r\n    let consumedWidth = 0;\r\n    let isOverflowVisible = overflowItems && overflowItems.length;\r\n\r\n    let style = window.getComputedStyle(commandSurface);\r\n    let availableWidth = commandBarRegion.clientWidth - parseInt(style.marginLeft, 10) - parseInt(style.marginRight, 10);\r\n    if (searchSurface) {\r\n      availableWidth -= searchSurface.getBoundingClientRect().width;\r\n    }\r\n    if (farCommandSurface) {\r\n      availableWidth -= farCommandSurface.getBoundingClientRect().width;\r\n    }\r\n\r\n    if (isOverflowVisible) {\r\n      availableWidth -= this._overflowWidth;\r\n    }\r\n\r\n    for (let i = 0; i < renderedItems.length; i++) {\r\n      let item = renderedItems[i];\r\n      let itemWidth = this._commandItemWidths[item.key];\r\n\r\n      if ((consumedWidth + itemWidth) >= availableWidth) {\r\n        if (i > 0 && !isOverflowVisible && (availableWidth - consumedWidth) < OVERFLOW_WIDTH) {\r\n          i--;\r\n        }\r\n\r\n        renderedOverflowItems = renderedItems.splice(i).concat(overflowItems);\r\n        break;\r\n      } else {\r\n        consumedWidth += itemWidth;\r\n      }\r\n\r\n    }\r\n\r\n    let renderedContextualMenuProps = this._getContextualMenuPropsAfterUpdate(\r\n      renderedItems.concat(this.state.renderedFarItems),\r\n      renderedOverflowItems);\r\n\r\n    this.setState({\r\n      renderedItems: renderedItems,\r\n      renderedOverflowItems: renderedOverflowItems,\r\n      expandedMenuItemKey: renderedContextualMenuProps ? this.state.expandedMenuItemKey : null,\r\n      contextualMenuProps: renderedContextualMenuProps,\r\n      contextualMenuTarget: renderedContextualMenuProps ? this.state.contextualMenuTarget : null\r\n    });\r\n  }\r\n\r\n  private _onItemClick(ev, item) {\r\n    if (item.key === this.state.expandedMenuItemKey || !hasSubmenuItems(item)) {\r\n      this._onContextMenuDismiss();\r\n    } else {\r\n      this.setState({\r\n        expandedMenuId: ev.currentTarget.id,\r\n        expandedMenuItemKey: item.key,\r\n        contextualMenuProps: this._getContextualMenuPropsFromItem(item),\r\n        contextualMenuTarget: ev.currentTarget\r\n      });\r\n    }\r\n    if (item.onClick) {\r\n      item.onClick(ev, item);\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onOverflowClick(ev) {\r\n    if (this.state.expandedMenuItemKey === OVERFLOW_KEY) {\r\n      this._onContextMenuDismiss();\r\n    } else {\r\n      this.setState({\r\n        expandedMenuId: ev.currentTarget.id,\r\n        expandedMenuItemKey: OVERFLOW_KEY,\r\n        contextualMenuProps: { items: this.state.renderedOverflowItems },\r\n        contextualMenuTarget: ev.currentTarget\r\n      });\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onContextMenuDismiss(ev?: any) {\r\n    if (!ev || !ev.relatedTarget || !this.refs.commandSurface.contains(ev.relatedTarget as HTMLElement)) {\r\n      let { contextualMenuProps } = this.state;\r\n\r\n      if (contextualMenuProps && contextualMenuProps.onDismiss) {\r\n        this.state.contextualMenuProps.onDismiss(ev);\r\n      }\r\n\r\n      this.setState({\r\n        expandedMenuItemKey: null,\r\n        contextualMenuProps: null,\r\n        contextualMenuTarget: null\r\n      });\r\n    } else {\r\n      ev.stopPropagation();\r\n      ev.preventDefault();\r\n    }\r\n  }\r\n\r\n  private _getStateFromProps(nextProps: ICommandBarProps) {\r\n    return {\r\n      renderedItems: nextProps.items || [],\r\n      renderedOverflowItems: null,\r\n      contextualMenuProps: this._getContextualMenuPropsAfterUpdate(\r\n        nextProps.items.concat(nextProps.farItems),\r\n        nextProps.overflowItems),\r\n      renderedFarItems: nextProps.farItems || null\r\n    };\r\n  }\r\n\r\n  private _getContextualMenuPropsAfterUpdate(renderedItems: IContextualMenuItem[], overflowItems: IContextualMenuItem[]) {\r\n    if (this.state && this.state.expandedMenuItemKey) {\r\n      if (this.state.expandedMenuItemKey === OVERFLOW_KEY) {\r\n        // Keep the overflow menu open\r\n        return { items: overflowItems };\r\n      } else {\r\n        // Find the currently open key in the new props\r\n        let matchingItem = renderedItems.filter(item => item.key === this.state.expandedMenuItemKey);\r\n\r\n        if (matchingItem.length === 1) {\r\n          return this._getContextualMenuPropsFromItem(matchingItem[0]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private _getContextualMenuPropsFromItem(item: IContextualMenuItem) {\r\n    return item.subMenuProps || (item.items && { items: item.items });\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}