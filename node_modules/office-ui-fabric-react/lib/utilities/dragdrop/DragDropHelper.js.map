{"version":3,"sources":["utilities/dragdrop/DragDropHelper.tsx"],"names":[],"mappings":"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","file":"utilities/dragdrop/DragDropHelper.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { EventGroup } from '../../Utilities';\r\nimport {\r\n  IDragDropHelper,\r\n  IDragDropTarget,\r\n  IDragDropOptions,\r\n  IDragDropEvent,\r\n  IDragDropContext\r\n} from './interfaces';\r\nimport { ISelection } from '../../utilities/selection/interfaces';\r\n\r\nconst DISTANCE_FOR_DRAG_SQUARED = 25; // the minimum mouse move distance to treat it as drag event\r\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\r\nconst MOUSEMOVE_PRIMARY_BUTTON = 1; // for mouse move event we are using ev.buttons property, 1 means left button\r\n\r\nexport interface IDragDropHelperParams {\r\n  selection: ISelection;\r\n}\r\n\r\nexport class DragDropHelper implements IDragDropHelper {\r\n  private _dragEnterCounts: { [key: string]: number };\r\n  private _isDragging: boolean;\r\n  private _dragData: {\r\n    eventTarget: EventTarget;\r\n    clientX: number;\r\n    clientY: number;\r\n    dataTransfer?: DataTransfer;\r\n    dropTarget?: IDragDropTarget;\r\n    dragTarget?: IDragDropTarget;\r\n  };\r\n  private _selection: ISelection;\r\n  private _activeTargets: {\r\n    [key: string]: {\r\n      target: IDragDropTarget;\r\n      dispose: () => void;\r\n    };\r\n  };\r\n  private _events: EventGroup;\r\n  private _lastId: number;\r\n\r\n  constructor(params: IDragDropHelperParams) {\r\n    this._selection = params.selection;\r\n    this._dragEnterCounts = {};\r\n    this._activeTargets = {};\r\n    this._lastId = 0;\r\n\r\n    this._events = new EventGroup(this);\r\n    // clear drag data when mouse up, use capture event to ensure it will be run\r\n    this._events.on(document.body, 'mouseup', this._onMouseUp.bind(this), true);\r\n    this._events.on(document, 'mouseup', this._onDocumentMouseUp.bind(this), true);\r\n  }\r\n\r\n  public dispose() {\r\n    this._events.dispose();\r\n  }\r\n\r\n  public subscribe(root: HTMLElement, events: EventGroup, dragDropOptions: IDragDropOptions): {\r\n    key: string;\r\n    dispose(): void;\r\n  } {\r\n    const {\r\n      key = `${++this._lastId}`\r\n    } = dragDropOptions;\r\n\r\n    const handlers: {\r\n      callback: (context: IDragDropContext, event?: any) => void;\r\n      eventName: string;\r\n    }[] = [];\r\n\r\n    let onDragLeave: (event: DragEvent) => void;\r\n    let onDragEnter: (event: DragEvent) => void;\r\n    let onDragEnd: (event: DragEvent) => void;\r\n    let onDrop: (event: DragEvent) => void;\r\n    let onMouseDown: (event: MouseEvent) => void;\r\n\r\n    let isDraggable: boolean;\r\n    let isDroppable: boolean;\r\n\r\n    let activeTarget: {\r\n      target: IDragDropTarget;\r\n      dispose: () => void;\r\n    };\r\n\r\n    if (dragDropOptions && root) {\r\n      const {\r\n        eventMap,\r\n        context,\r\n        updateDropState\r\n      } = dragDropOptions;\r\n\r\n      const dragDropTarget: IDragDropTarget = {\r\n        root: root,\r\n        options: dragDropOptions,\r\n        key: key\r\n      };\r\n\r\n      isDraggable = this._isDraggable(dragDropTarget);\r\n      isDroppable = this._isDroppable(dragDropTarget);\r\n\r\n      if (isDraggable || isDroppable) {\r\n        if (eventMap) {\r\n          for (const event of eventMap) {\r\n            const handler = {\r\n              callback: event.callback.bind(null, context),\r\n              eventName: event.eventName\r\n            };\r\n\r\n            handlers.push(handler);\r\n\r\n            this._events.on(root, handler.eventName, handler.callback);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (isDroppable) {\r\n        // If the target is droppable, wire up global event listeners to track drop-related events.\r\n        onDragLeave = (event: DragEvent) => {\r\n          if (!(event as IDragDropEvent).isHandled) {\r\n            (event as IDragDropEvent).isHandled = true;\r\n            this._dragEnterCounts[key]--;\r\n            if (this._dragEnterCounts[key] === 0) {\r\n              updateDropState(false /* isDropping */, event);\r\n            }\r\n          }\r\n        };\r\n\r\n        onDragEnter = (event: DragEvent) => {\r\n          event.preventDefault(); // needed for IE\r\n          if (!(event as IDragDropEvent).isHandled) {\r\n            (event as IDragDropEvent).isHandled = true;\r\n            this._dragEnterCounts[key]++;\r\n            if (this._dragEnterCounts[key] === 1) {\r\n              updateDropState(true /* isDropping */, event);\r\n            }\r\n          }\r\n        };\r\n\r\n        onDragEnd = (event: DragEvent) => {\r\n          this._dragEnterCounts[key] = 0;\r\n          updateDropState(false /* isDropping */, event);\r\n        };\r\n\r\n        onDrop = (event: DragEvent) => {\r\n          this._dragEnterCounts[key] = 0;\r\n          updateDropState(false /* isDropping */, event);\r\n        };\r\n\r\n        this._dragEnterCounts[key] = 0;\r\n\r\n        // dragenter and dragleave will be fired when hover to the child element\r\n        // but we only want to change state when enter or leave the current element\r\n        // use the count to ensure it.\r\n        events.on(root, 'dragenter', onDragEnter);\r\n        events.on(root, 'dragleave', onDragLeave);\r\n        events.on(root, 'dragend', onDragEnd);\r\n        events.on(root, 'drop', onDrop);\r\n      }\r\n\r\n      if (isDraggable) {\r\n        // If the target is draggable, wire up local event listeners for mouse events.\r\n        onMouseDown = this._onMouseDown.bind(this, dragDropTarget);\r\n\r\n        events.on(root, 'mousedown', onMouseDown);\r\n      }\r\n\r\n      activeTarget = {\r\n        target: dragDropTarget,\r\n        dispose: () => {\r\n          if (this._activeTargets[key] === activeTarget) {\r\n            delete this._activeTargets[key];\r\n          }\r\n\r\n          if (root) {\r\n            for (const handler of handlers) {\r\n              this._events.off(root, handler.eventName, handler.callback);\r\n            }\r\n\r\n            if (isDroppable) {\r\n              events.off(root, 'dragenter', onDragEnter);\r\n              events.off(root, 'dragleave', onDragLeave);\r\n              events.off(root, 'dragend', onDragEnd);\r\n              events.off(root, 'drop', onDrop);\r\n            }\r\n\r\n            if (isDraggable) {\r\n              events.off(root, 'mousedown', onMouseDown);\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n      this._activeTargets[key] = activeTarget;\r\n    }\r\n\r\n    return {\r\n      key: key,\r\n      dispose: () => {\r\n        if (activeTarget) {\r\n          activeTarget.dispose();\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  public unsubscribe(root: HTMLElement, key: string): void {\r\n    const activeTarget = this._activeTargets[key];\r\n\r\n    if (activeTarget) {\r\n      activeTarget.dispose();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * clear drag data when mouse up on body\r\n   */\r\n  private _onMouseUp(event: MouseEvent) {\r\n    this._isDragging = false;\r\n    if (this._dragData) {\r\n      for (const key of Object.keys(this._activeTargets)) {\r\n        const activeTarget = this._activeTargets[key];\r\n\r\n        if (activeTarget.target.root) {\r\n          this._events.off(activeTarget.target.root, 'mousemove');\r\n          this._events.off(activeTarget.target.root, 'mouseleave');\r\n        }\r\n      }\r\n\r\n      if (this._dragData.dropTarget) {\r\n        // raise dargleave event to let dropTarget know it need to remove dropping style\r\n        EventGroup.raise(this._dragData.dropTarget.root, 'dragleave');\r\n      }\r\n    }\r\n    this._dragData = null;\r\n  }\r\n\r\n  /**\r\n   * clear drag data when mouse up outside of the document\r\n   */\r\n  private _onDocumentMouseUp(event: MouseEvent) {\r\n    if (event.target === document.documentElement) {\r\n      this._onMouseUp(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * when mouse move over a new drop target while dragging some items,\r\n   * fire dragleave on the old target and fire dragenter to the new target\r\n   * The target will handle style change on dragenter and dragleave events.\r\n   */\r\n  private _onMouseMove(target: IDragDropTarget, event: MouseEvent) {\r\n    let {\r\n      // use buttons property here since ev.button in some edge case is not updating well during the move.\r\n      // but firefox doesn't support it, so we set the default value when it is not defined.\r\n      buttons = MOUSEMOVE_PRIMARY_BUTTON\r\n    } = event;\r\n\r\n    if (this._dragData && buttons !== MOUSEMOVE_PRIMARY_BUTTON) {\r\n      // cancel mouse down event and return early when the primary button is not pressed\r\n      this._onMouseUp(event);\r\n      return;\r\n    }\r\n\r\n    let { root, options, key } = target;\r\n    if (this._isDragging) {\r\n      if (this._isDroppable(target)) {\r\n        // we can have nested drop targets in the DOM, like a folder inside a group. In that case, when we drag into\r\n        // the inner target (folder), we first set dropTarget to the inner element. But the same event is bubbled to the\r\n        // outer target too, and we need to prevent the outer one from taking over.\r\n        // So, check if the last dropTarget is not a child of the current.\r\n        if (this._dragData.dropTarget &&\r\n          this._dragData.dropTarget.key !== key &&\r\n          !this._isChild(root, this._dragData.dropTarget.root)) {\r\n          EventGroup.raise(this._dragData.dropTarget.root, 'dragleave');\r\n          this._dragData.dropTarget = null;\r\n        }\r\n\r\n        if (!this._dragData.dropTarget) {\r\n          EventGroup.raise(root, 'dragenter');\r\n          this._dragData.dropTarget = target;\r\n        }\r\n      }\r\n    } else if (this._dragData) {\r\n      if (this._isDraggable(target)) {\r\n        let xDiff = this._dragData.clientX - event.clientX;\r\n        let yDiff = this._dragData.clientY - event.clientY;\r\n        if (xDiff * xDiff + yDiff * yDiff >= DISTANCE_FOR_DRAG_SQUARED) {\r\n          if (this._dragData.dragTarget &&\r\n            this._selection.isIndexSelected(options.selectionIndex)) {\r\n            this._isDragging = true;\r\n            if (options.onDragStart) {\r\n              options.onDragStart(options.context.data, options.context.index, this._selection.getSelection(), event);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * when mouse leave a target while dragging some items, fire dragleave to the target\r\n   */\r\n  private _onMouseLeave(target: IDragDropTarget, event: MouseEvent) {\r\n    if (this._isDragging) {\r\n      if (this._dragData && this._dragData.dropTarget && this._dragData.dropTarget.key === target.key) {\r\n        EventGroup.raise(target.root, 'dragleave');\r\n        this._dragData.dropTarget = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * when mouse down on a draggable item, we start to track dragdata.\r\n   */\r\n  private _onMouseDown(target: IDragDropTarget, event: MouseEvent) {\r\n    if (event.button !== MOUSEDOWN_PRIMARY_BUTTON) {\r\n      // Ignore anything except the primary button.\r\n      return;\r\n    }\r\n\r\n    if (this._isDraggable(target)) {\r\n      this._dragData = {\r\n        clientX: event.clientX,\r\n        clientY: event.clientY,\r\n        eventTarget: event.target,\r\n        dragTarget: target\r\n      };\r\n\r\n      for (const key of Object.keys(this._activeTargets)) {\r\n        const activeTarget = this._activeTargets[key];\r\n        if (activeTarget.target.root) {\r\n          this._events.on(activeTarget.target.root, 'mousemove', this._onMouseMove.bind(this, activeTarget.target));\r\n          this._events.on(activeTarget.target.root, 'mouseleave', this._onMouseLeave.bind(this, activeTarget.target));\r\n        }\r\n      }\r\n    } else {\r\n      this._dragData = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * determine whether the child target is a descendant of the parent\r\n   */\r\n  private _isChild(parent: React.ReactInstance, child: React.ReactInstance): boolean {\r\n    let parentElement = ReactDOM.findDOMNode(parent);\r\n    let childElement = ReactDOM.findDOMNode(child);\r\n    while (childElement && childElement.parentElement) {\r\n      if (childElement.parentElement === parentElement) {\r\n        return true;\r\n      }\r\n      childElement = childElement.parentElement;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _isDraggable(target: IDragDropTarget): boolean {\r\n    let { options } = target;\r\n    return options.canDrag && options.canDrag(options.context.data);\r\n  }\r\n\r\n  private _isDroppable(target: IDragDropTarget): boolean {\r\n    // TODO: take the drag item into consideration to prevent dragging an item into the same group\r\n    let { options } = target;\r\n    let dragContext = this._dragData && this._dragData.dragTarget ? this._dragData.dragTarget.options.context : null;\r\n    return options.canDrop && options.canDrop(options.context, dragContext);\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}