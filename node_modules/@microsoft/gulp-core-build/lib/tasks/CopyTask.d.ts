/// <reference types="es6-promise" />
/// <reference types="node" />
import { GulpTask } from './GulpTask';
import gulp = require('gulp');
/** Configuration for CopyTask */
export interface ICopyConfig {
    /**
     * The list of patterns and the destination which where they should be copied
     */
    copyTo: {
        /**
         * A mapping of destination paths (absolute or relative) to a list of glob pattern matches
         */
        [destPath: string]: string[];
    };
    /**
     * If true, the files will be copied into a flattened folder. If false, they will retain the original
     * folder structure. True by default.
     */
    shouldFlatten?: boolean;
}
/**
 * This task takes in a map of dest: [sources], and copies items from one place to another.
 */
export declare class CopyTask extends GulpTask<ICopyConfig> {
    /**
     * Instantiates a CopyTask with an empty configuration
     */
    constructor();
    /**
     * Loads the z-schema object for this task
     * @internal
     */
    loadSchema(): Object;
    /**
     * Executes the copy task, which copy files based on the task's Configuration
     */
    executeTask(gulp: gulp.Gulp, completeCallback: (result?: Object) => void): Promise<Object> | NodeJS.ReadWriteStream | void;
}
