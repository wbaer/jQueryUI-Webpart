define([], function() {
  var strings = {
    "_gIErrcTokcw+/VVwa+ReIA": {
      "invalidEnvironmentTypeError": "Недопустимый параметр EnvironmentType",
      "invalidGuidStringError": "Недопустимая строка GUID: {0}",
      "isFalseValidateError": "Параметр {0} имеет значение false",
      "isNullValidateError": "Параметр {0} не должен иметь значение null",
      "isUndefinedValidateError": "Параметр {0} не должен иметь неопределенное значение",
      "isEmptyStringValidateError": "Значение параметра {0} не должно быть пустой строкой",
      "invalidVersionStringError": "Недопустимая строка версии: {0}",
      "logVerboseLevelMessage": "{0}: подробно. {1}",
      "logInfoLevelMessage": "{0}. {1}",
      "logWarningLevelMessage": "{0}: предупреждение. {1}",
      "logErrorLevelMessage": "{0}: ошибка. {1}",
      "serviceScopeConsumingBeforeFinished": "Не удается использовать службы, поскольку область еще не обработана",
      "serviceScopeConsumingDuringAutoCreation": "Невозможно использовать службы во время автоматического создания ServiceScope",
      "serviceScopeAlreadyFinishedError": "Область ServiceScope уже обработана",
      "serviceScopeProvideServiceAfterFinishedError": "Не удается зарегистрировать службу, поскольку область уже обработана",
      "serviceScopeProvideServiceThatAlreadyExists": "Ключ службы {0} уже зарегистрирован в этой области"
    },
    "_nQNACBeQ34aV6bVwtFBayA": {
      "platformFailedToLoadError": "Не удалось загрузить платформу. Идентификатор: {0}; имя: \"{1}\"",
      "applicationFailedToLoadError": "Не удалось загрузить приложение. Идентификатор: {0}; имя: \"{1}\"",
      "applicationFailedToLoadWithMessageError": "Не удалось загрузить приложение. Идентификатор: {0}; имя: \"{1}\", ошибка: {2}",
      "applicationFailedToInitializeError": "Сбой инициализации приложения. Ошибка: {0}",
      "invalidPreloadedDataError": "Предварительно загруженные данные недействительны.",
      "missingApplicationIdError": "Отсутствует идентификатор приложения.",
      "manifestNotFoundByIdError": "Манифест для компонента с идентификатором {0} не найден.",
      "manifestNotFoundError": "Манифест для компонента с идентификатором \"{0}\" и версией \"{1}\" не найден.",
      "debugManifestLoadingWarning": "ПРЕДУПРЕЖДЕНИЕ. На этой странице запрашивается загрузка небезопасных сценариев, которые могут нанести вред компьютеру! Продолжайте работу, только если доверяете разработчику и осознаете риски.",
      "debugManifestLoadingWarning2": "Если вы не уверены, нажмите кнопку \"{0}\".",
      "debugManifestLoadingConfirm": "Загрузить сценарии отладки",
      "debugManifestLoadingCancel": "Не загружать сценарии отладки",
      "systemConfigDisabledError": "System.config() не поддерживается. Укажите конфигурацию с помощью манифеста.",
      "loadComponentLog": "Loading component \"{0}\" ({1}).",
      "loadComponentEndLog": "Компонент {0} ({1}) загружен.",
      "loadComponentRetryLog": "Загрузка компонента {0} ({1}). Попытка {2} из {3}.",
      "loadComponentError": "Сбой загрузки компонента \"{0}\" ({1}). Исходная ошибка: {2}",
      "loadComponentMaxRetriesError": "Не удалось загрузить компонент {0} ({1}). Предпринято попыток: {2}.",
      "loadComponentDependencyError": "Не удалось загрузить зависимость компонента {0} из компонента {1} ({2}).",
      "loadComponentDependencyFailoverPathError": "Не удалось загрузить зависимость компонента {0} с путем отработки отказа {1} из компонента {2} ({3}).",
      "loadPathDependencyLog": "Загрузка зависимости пути \"{0}\" из компонента {1} ({2})",
      "loadPathDependencyError": "Не удалось загрузить зависимость пути {0} из компонента {1} ({2}).",
      "loadPathDependencyBlockedByAnotherDependencyError": "Не удалось загрузить зависимость пути \"{0}\" из компонента {1} ({2}) из-за сбоя загрузки другой зависимости.",
      "loadEntryPointError": "Не удалось загрузить точку входа из компонента {0} ({1}).",
      "loadComponentReturnsEmptyError": "Метод loadComponent() вернул пустой объект для компонента \"{0}\" ({1}).",
      "loadComponentReturnsDefaultEmptyError": "Метод loadComponent() вернул объект с пустым свойством по умолчанию для компонента \"{0}\" ({1}).",
      "loadScriptWithStringError": "Функция loadScript не допускает строку как второй параметр. Вместо этого следует используйте ILoadScriptOptions.",
      "tooManyManifestsError": "Найдено манифестов (версий {1}) для компонента \"{2}\": {0}.",
      "tooManyCompatibleVersionsError": "Найдено совместимых версий ({1}) для компонента \"{2}\" версии \"{3}\": {0}.",
      "tooManyComponentsError": "Найдено слишком много компонентов для идентификатора \"{0}\".",
      "noComponentFoundError": "Не найден компонент для идентификатора {0}.",
      "deleteComponentLog": "Удаление компонента {0} версии {1} из хранилища.",
      "browserNotSupportedError": "Текущая версия вашего браузера не поддерживается.\r\nОбновите браузер до последней версии.",
      "resourceNotFoundError": "Ресурс \"{0}\" не найден в конфигурации загрузки манифеста для компонента \"{1}\" ({2}).",
      "noFailoverPathError": "Не удается вызвать метод resolveAddress() для компонента без пути отработки отказа"
    },
    "_RPELcTeq3ZByqi3N5dt18w": {
      "missingDeveloperToolsTabInitFunctionError": "Отсутствует компонент или функция инициализатора.",
      "closeDeveloperToolsAriaLabel": "Закрыть средства разработчика."
    },
    "_SxImp5ewsUToxeAHBkB+pw": {
      "developerToolsTabLoadingText": "Загрузка...",
      "developerToolsTabLoadingUnknownError": "Неизвестная ошибка при загрузке модуля средств разработчика."
    },
    "_sovI4qDAUPMnD4jg3Vsyfg": {
      "tabTitle": "Манифесты",
      "noManifestSelected": "Манифест не выбран"
    },
    "_g7G0QHJ5bQYlxe+lk+DcxA": {
      "TabTitle": "Производительность",
      "ErrorAccessingPerfDataErrorMessage": "Не удалось получить данные о производительности: объект имеет нулевое значение или не определен.",
      "ErrorAccessingRedirectDataErrorMessage": "При доступе к данным о производительности перенаправления HTTP возникла проблема.",
      "ErrorParsingPercievedLatencyErrorMessage": "При анализе в полученных данных о задержках обнаружена ошибка.",
      "ErrorParsingApiDataErrorMessage": "При анализе в данных API обнаружена ошибка.",
      "UnkownPerformanceDataErrorMessage": "Произошла неизвестная ошибка: {0}",
      "DefaultWebPartName": "Веб-часть",
      "ServerResponseLabel": "Отклик сервера",
      "ApplicationInitializationLabel": "Инициализация приложения",
      "PageRenderLabel": "Отрисовка страницы",
      "LeftNavRenderLabel": "Отрисовка левой области навигации",
      "CanvasRenderLabel": "Отрисовка холста",
      "RedirectResponseLabel": "Отклик перенаправления",
      "AppLoadLabel": "Загрузка приложения",
      "RenderWebPartsLabel": "Отрисовка веб-частей",
      "TotalRenderTimeLabel": "Всего",
      "GeneralErrorMessage": "К сожалению, при получении данных о производительности что-то пошло не так.",
      "ErrorMessagePrefix": "Сообщение об ошибке: {0}",
      "PerformanceDataHint": "Примечание. После добавления или удаления веб-части обновите страницу, чтобы увидеть обновленные данные производительности.",
      "ModulesLoadedLegendLabel": "Модули загружены",
      "InitializationLegendLabel": "Инициализация",
      "RenderTimeLegendLabel": "Время отрисовки",
      "InitializationTimeLabel": "Время инициализации",
      "ModuleLoadingTimeLabel": "Время загрузки модуля",
      "DataFetchTimeLabel": "Время получения данных",
      "DataFetchLegendLabel": "Получение данных",
      "ItemsColumnHeader": "Элементы",
      "DurationColumnHeader": "Длительность",
      "MillisecondsUnitLabel": "{0} мс",
      "NAPlaceholder": "Н/Д"
    },
    "_gqinlPQb8HZprTeCpwNz2w": {
      "TabTitle": "Трассировка",
      "EmptyTraceData": "Трассировки не загружены.",
      "ExportCSVButtonLabel": "Экспорт CSV",
      "LevelHeaderLabel": "Уровень",
      "MessageHeaderLabel": "Сообщение",
      "ScopeHeaderLabel": "Область",
      "SourceHeaderLabel": "Источник",
      "TimestampHeaderLabel": "Метка времени",
      "ErrorAccessingTraceDataErrorMessage": "Возникла проблема при доступе к данным трассировки."
    }
  };

  strings.default = strings;
  return strings;
});