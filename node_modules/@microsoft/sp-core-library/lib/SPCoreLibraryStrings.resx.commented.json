{"_gIErrcTokcw+/VVwa+ReIA":{"invalidEnvironmentTypeError":{"comment":"{NeedsReview}Error to show when the Environment class is initialized with an invalid EnvironmentType.","value":"EnvironmentType is invalid"},"invalidGuidStringError":{"comment":"{NeedsReview}Error to show when the Guid class fails to parse an invalid Guid. The {0} placeholder is the input guid string.","value":"Invalid GUID string: \"{0}\""},"isFalseValidateError":{"comment":"{NeedsReview}Error to show when the Validate.isTrue() returns false. The {0} placeholder is the input's variable name.","value":"The value for \"{0}\" is false"},"isNullValidateError":{"comment":"{NeedsReview}Error to show when the Validate.isNotNullOrUndefined() is called on a null value. The {0} placeholder is the input's variable name.","value":"The value for \"{0}\" must not be null"},"isUndefinedValidateError":{"comment":"{NeedsReview}Error to show when the Validate.isNotNullOrUndefined() is called on an undefined value. The {0} placeholder is the input's variable name.","value":"The value for \"{0}\" must not be undefined"},"isEmptyStringValidateError":{"comment":"{NeedsReview}Error to show when the Validate.isNonemptyString() returns false. The {0} placeholder is the input's variable name.","value":"The value for \"{0}\" must not be an empty string"},"invalidVersionStringError":{"comment":"{NeedsReview}Error to show when the Version class fails to parse an invalid Version string. The {0} placeholder is the input version string.","value":"Invalid version string: \"{0}\""},"logVerboseLevelMessage":{"comment":"{NeedsReview}Text used when logging a verbose level message. The {0} placeholder is the source of the log call. The {1} placeholder is the message to be logged. Example: \"SomeComponent: VERBOSE The page finished loading\"","value":"{0}: VERBOSE {1}"},"logInfoLevelMessage":{"comment":"{NeedsReview}Text used when logging a info level message. The {0} placeholder is the source of the log call. The {1} placeholder is the message to be logged. Example: \"SomeComponent: The page finished loading\"","value":"{0}: {1}"},"logWarningLevelMessage":{"comment":"{NeedsReview}Text used when logging a warning level message. The {0} placeholder is the source of the log call. The {1} placeholder is the message to be logged. Example: \"SomeComponent: WARNING The page finished loading\"","value":"{0}: WARNING {1}"},"logErrorLevelMessage":{"comment":"{NeedsReview}Text used when logging a error level message. The {0} placeholder is the source of the log call. The {1} placeholder is the error's message. Example: \"SomeComponent: ERROR The page finished loading\"","value":"{0}: ERROR: {1}"},"serviceScopeConsumingBeforeFinished":{"comment":"{NeedsReview}Error to show when someone attempts to consume a ServiceScope service before the finish() function has been called","value":"Cannot consume services because the scope is not finished yet"},"serviceScopeConsumingDuringAutoCreation":{"comment":"{NeedsReview}The ServiceScope will automatically create a service if it hasn't been registered yet.  During this process, the ServiceScope.consume() function may not be used.  This is a safeguard to prevent errors due to a circular dependency.","value":"Cannot consume services during ServiceScope autocreation"},"serviceScopeAlreadyFinishedError":{"comment":"{NeedsReview}Error to show when someone attempts to call finish on the ServiceScope after it has finished.","value":"The ServiceScope is already finished"},"serviceScopeProvideServiceAfterFinishedError":{"comment":"{NeedsReview}After the ServiceScope.finish() function has been called, developers are no long allowed to call provide().  This is a safeguard to prevent mistakes.","value":"Cannot register service because the scope is already finished"},"serviceScopeProvideServiceThatAlreadyExists":{"comment":"{NeedsReview}Attempts to register the same service more than once. The {0} placeholder is the service key's name.","value":"The service key \"{0}\" has already been registered in this scope"}}}