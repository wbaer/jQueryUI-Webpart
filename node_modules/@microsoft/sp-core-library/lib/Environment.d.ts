/**
 * An enum that describes which type of enviroment the framework is running in.
 * @public
 */
export declare enum EnvironmentType {
    /**
     * Represents the scenario of the framework hosted in a unit/integration test.
     * Example: A developer running a unit test to verify changes to their web part.
     */
    Test = 0,
    /**
     * Represents the scenario of the framework hosted on a localhost server, which typically cannot
     * access any SharePoint REST APIs.
     * Example: A developer uses gulp serve command to test their changes in their browser of choice.
     */
    Local = 1,
    /**
     * Indicates that the framework was loaded by a client-rendered SharePoint page
     */
    SharePoint = 2,
    /**
     * Indicates that the framework was loaded from a classic server-rendered SharePoint page
     */
    ClassicSharePoint = 3,
}
/**
 * Interface for properties neccesary for building a Environment object.
 * @internal
 */
export interface IEnvironmentData {
    type: EnvironmentType;
}
/**
 * This class contains contextual information about the enviroment that is hosting the framework and
 * its components.
 * @public
 */
export default class Environment {
    private static _type;
    /**
     * This is called once by the system during startup to initialize the Environment object.
     * @internal
     */
    static _initialize(data: IEnvironmentData): void;
    /**
     * An enum that describes which type of enviroment the framework is running in.
     */
    static readonly type: EnvironmentType;
}
