{"version":3,"sources":["FrameworkPolyfills.ts"],"names":[],"mappings":"AAAA,yDAAyD;AACzD,6EAA6E;AAC7E,kGAAkG;;AAElG,mCAAmC;AACnC,iGAAiG;AACjG,6FAA6F;AAC7F,+FAA+F;AAC/F,+FAA+F;AAC/F,mGAAmG;AACnG,oGAAoG;AACpG,6FAA6F;AAC7F,0FAA0F;AAC1F,kDAAkD;AAClD,mDAAmD;AACnD,2BAAyB;AAEzB,uBAAuB;AACvB,8FAA8F;AAC9F,cAAc;AACd,sFAAsF;AACtF,oCAAoC;AACpC,4FAA4F;AAC5F,+CAA+C;AAC/C,uBAAqB;AAErB,wBAAwB;AACxB,+DAA+D;AAC/D,kGAAkG;AAClG,kCAAkC;AAClC,wBAAsB;AAEtB,sFAAsF;AACtF,0FAA0F;AAC1F,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3B,MAAc,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,6BAA6B;UACpF,IAAI;UACJ,MAAM,CAAC,QAAQ,CAAC,QAAQ;UACxB,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;AAC/D,CAAC;AAED,qEAAqE;AACrE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;IACvB,MAAc,CAAC,WAAW,GAAG,EAAiB,CAAC,CAAC,6BAA6B;AAChF,CAAC;AAED,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5B,oHAAoH;IACpH,gHAAgH;IAChH,IAAM,cAAY,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;IACxC,MAAM,CAAC,WAAW,CAAC,GAAG,GAAG,cAAc,OAAA,IAAI,CAAC,GAAG,EAAE,GAAG,cAAY,EAAzB,CAAyB,CAAC;AACnE,CAAC","file":"FrameworkPolyfills.js","sourcesContent":["// @copyright Microsoft Corporation. All rights reserved.\r\n// @file This file contains an inventory of all of our framework's polyfills.\r\n// All webpart and application code can rely on these libraries being polyfilled by our framework.\r\n\r\n// ES6 Harmony Collections Polyfill\r\n// ES6 Harmony Collections  was added as a polyfill to provide a lightweight unobtrusive shim for\r\n// ES2015 collections. The implementations of Map, Set, and WeakMap provided by this polyfill\r\n// adhere to the ES2015 standard. Functions that abide by the ES2015 standard such as Map.get()\r\n// and Set.has() are guaranteed to run in sublinear time rather than the expected constant time\r\n// for a standard hashmap implementation. (See http://stackoverflow.com/a/31092145) The alternative\r\n// popular library to ES6 Harmony Collections is ES6 shim. After running some samples tests, we have\r\n// determined that ES6 Harmony Collections performs better on a larger set of operations than\r\n// the es6-shim. (Tests were run here: https://jsperf.com/es6-shim-vs-es6-collections/2 ).\r\n// ES6 shim is also a much larger library in size.\r\n// https://github.com/WebReflection/es6-collections\r\nimport 'es6-collections';\r\n\r\n// ES6 Promise Polyfill\r\n// Adds an implementation of the ES2015-Promise to the browser. The implementation is a subset\r\n// of rsvp.js.\r\n// (See: https://github.com/tildeio/rsvp.js) ES6 Promise is compliant with Promises/A+\r\n// (See: https://promisesaplus.com/)\r\n// Very useful for using Promise in the Safari/IE/Edge (already supported by Chrome/Firefox)\r\n// https://github.com/jakearchibald/es6-promise\r\nimport 'es6-promise';\r\n\r\n// Window.Fetch PolyFill\r\n// Adds an implementation of the Fetch standard to the browser.\r\n// Very useful for using the fetch api in the Safari/IE (already supported by Chrome/Firefox/Edge)\r\n// https://github.com/github/fetch\r\nimport 'whatwg-fetch';\r\n\r\n// TypeScript 2.0 Typings have location.origin and performance as readonly properties.\r\n// This is a polyfill for window.location.origin, which is not supported by the IE browser\r\nif (!window.location.origin) {\r\n  (window as any).location.origin = window.location.protocol // tslint:disable-line:no-any\r\n    + '//'\r\n    + window.location.hostname\r\n    + (window.location.port ? ':' + window.location.port : '');\r\n}\r\n\r\n// IE9 doesn't support performance.now(), so we need to polyfill that\r\nif (!window.performance) {\r\n  (window as any).performance = {} as Performance; // tslint:disable-line:no-any\r\n}\r\n\r\nif (!window.performance.now) {\r\n  // Polyfill performance.now with a function that returns the number of milliseconds since the moduler loader loaded.\r\n  // Not as accurate as the real performance.now() function, but as accurate as we're able to get with a polyfill.\r\n  const pageLoadTime: number = Date.now();\r\n  window.performance.now = (): number => Date.now() - pageLoadTime;\r\n}\r\n"],"sourceRoot":"..\\src"}