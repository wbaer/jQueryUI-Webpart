{"version":3,"sources":["webparts/jQueryUi/JQueryUiWebPart.ts"],"names":[],"mappings":"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","file":"webparts/jQueryUi/JQueryUiWebPart.js","sourcesContent":["import { Version } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneToggle,\r\n  PropertyPaneSlider,\r\n  IPropertyPaneDropdownOption,\r\n  PropertyPaneDropdown\r\n} from '@microsoft/sp-webpart-base';\r\n\r\nimport { escape } from '@microsoft/sp-lodash-subset';\r\n\r\nimport {\r\n  Environment,\r\n  EnvironmentType\r\n} from '@microsoft/sp-core-library';\r\n\r\nimport styles from './JQueryUi.module.scss';\r\nimport * as strings from 'jQueryUiStrings';\r\nimport { IJQueryUiWebPartProps } from './IJQueryUiWebPartProps';\r\n\r\n// App imports\r\nimport MockHttpClient from './MockHttpClient';\r\n\r\n// Import spHttpClient helper class to execute REST API requests against SharePoint\r\nimport {\r\n  SPHttpClient\r\n} from '@microsoft/sp-http';\r\n\r\nimport * as jQuery from 'jquery';\r\nimport 'jqueryui';\r\n\r\nimport { SPComponentLoader } from '@microsoft/sp-loader';\r\n\r\nrequire('jqueryui');\r\n\r\n// Define list models\r\nexport interface ISPLists {\r\n  value: ISPList[];\r\n}\r\n\r\nexport interface ISPList {\r\n  Title: string;\r\n  Description: string;\r\n}\r\n\r\nexport default class JQueryUiWebPart extends BaseClientSideWebPart<IJQueryUiWebPartProps> {\r\n\r\n  // Define and retrieve mock list data\r\n  private _getMockListData(): Promise<ISPLists> {\r\n    return MockHttpClient.get(this.context.pageContext.web.absoluteUrl).then(() => {\r\n        const listData: ISPLists = {\r\n            value:\r\n            [\r\n                { Title: 'Mock List Item 1', Description: 'Mock List Data 1' },\r\n                { Title: 'Mock List Item 2', Description: 'Mock List Data 2' },\r\n                { Title: 'Mock List Item 3', Description: 'Mock List Data 3' },\r\n                { Title: 'Mock List Item 4', Description: 'Mock List Data 4' }\r\n            ]\r\n          };\r\n        return listData;\r\n    }) as Promise<ISPLists>;\r\n  }\r\n\r\n  // Retrieve list data from SharePoint\r\n  private _getListData(): Promise<ISPLists> {\r\n    return this.context.spHttpClient.get(this.context.pageContext.web.absoluteUrl + `/_api/web/lists/GetByTitle('` + this.properties.list + `')/items`, SPHttpClient.configurations.v1)\r\n      .then((response: Response) => {\r\n      return response.json();\r\n      });\r\n  }\r\n\r\n  // Retrieve lists from SharePoint\r\n    private _getLists(): Promise<ISPLists> {\r\n    return this.context.spHttpClient.get(this.context.pageContext.web.absoluteUrl + `/_api/web/lists?$filter=Hidden eq false`, SPHttpClient.configurations.v1)\r\n      .then((response: Response) => {\r\n      return response.json();\r\n      });\r\n  }\r\n\r\n  // Call methods for list data retrieval\r\n  private _renderListAsync(): void {\r\n  // Mock List data\r\n  if (Environment.type === EnvironmentType.Local) {\r\n    this._getMockListData().then((response) => {\r\n      this._renderList(response.value);\r\n    }); }\r\n    else {\r\n    const list: string = this.properties.list;\r\n    // Check if a list is selected\r\n    if (!list || list.toString == null) {\r\n      this.domElement.innerHTML = `\r\n      <div class=\"${styles.container}\">\r\n            <span>${escape(this.properties.description)}</span>\r\n            <p>No list has been selected.  Open the tool pane and select a list.</p>\r\n      </div>\r\n      `;\r\n      return;\r\n    }\r\n\r\n    this._getListData()\r\n      .then((response) => {\r\n        this._renderList(response.value);\r\n      });\r\n    }\r\n  }\r\n\r\n  // Render the list data with the values fetched from the REST API\r\n  private _renderList(items: ISPList[]): void {\r\n    // Clear the container for initial configuration\r\n    this.domElement.innerHTML = ``;\r\n\r\n    // Reset the Accordion to handle property changes\r\n    $('#accordion').remove();\r\n\r\n    // Set up html for the jQuery UI Accordion Widget to display collapsible content panels\r\n    // Learn more about the Accordion Widget at http://jqueryui.com/accordion/\r\n    let html: string = '';\r\n\r\n    html += `<div id='accordion'>`;\r\n\r\n    items.forEach((item: ISPList) => {\r\n        html += `\r\n        <div class='group'>\r\n          <h3>${item.Title}</h3>\r\n            <div>\r\n                <p> ${item.Description} </p>\r\n            </div>\r\n        </div>`;\r\n    });\r\n\r\n    this.domElement.innerHTML += html;\r\n\r\n    html += `</div>`;\r\n\r\n    // Set up base Accordion options\r\n    const accordionOptions: JQueryUI.AccordionOptions = {\r\n      header: \"> div > h3\",\r\n      animate: this.properties.speed,\r\n      collapsible: true,\r\n      icons: {\r\n        header: 'ui-icon-circle-arrow-e',\r\n        activeHeader: 'ui-icon-circle-arrow-s'\r\n      }\r\n    };\r\n\r\n    // Set up configurable jQueryUI effects and interactions\r\n    if (this.properties.resize == false) {\r\n      jQuery(this.domElement).children('#accordion').accordion(accordionOptions);\r\n    } else {\r\n      jQuery(this.domElement).children('#accordion').accordion(accordionOptions).resizable({ghost: true, animate: true, autoHide: true, helper: 'ui-resizable-helper'});\r\n    }\r\n\r\n    if (this.properties.sort == false) {\r\n      jQuery(this.domElement).children('#accordion').accordion(accordionOptions);\r\n    } else {\r\n      jQuery(this.domElement).children('#accordion').accordion(accordionOptions).sortable();\r\n    }\r\n  }\r\n\r\n  public constructor() {\r\n    super();\r\n\r\n    // Load remote stylesheet\r\n    SPComponentLoader.loadCss('//code.jquery.com/ui/1.12.0/themes/base/jquery-ui.css');\r\n  }\r\n\r\n  public render(): void {\r\n    this._renderListAsync();\r\n  }\r\n\r\n  // Setup the Web Part Property Pane Dropdown options\r\n  private _dropdownOptions: IPropertyPaneDropdownOption[] = [];\r\n    public onInit<T>(): Promise<T> {\r\n      this._getLists()\r\n        .then((response) => {\r\n          this._dropdownOptions = response.value.map((list: ISPList) => {\r\n            return {\r\n              key: list.Title,\r\n              text: list.Title\r\n          };\r\n        });\r\n      });\r\n    return Promise.resolve();\r\n  }\r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  // Set up core Property Pane options\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          groups: [\r\n            {  \r\n              groupName: strings.SharePointOptions,  \r\n              groupFields: [  \r\n                  PropertyPaneDropdown('list', {\r\n                    label: 'List',\r\n                    options: this._dropdownOptions\r\n                  })\r\n              ]  \r\n            },  \r\n            {\r\n              groupName: strings.JQueryOptions,\r\n              groupFields: [\r\n                PropertyPaneSlider('speed', {\r\n                  label: 'Animation Speed',\r\n                  min: 1,\r\n                  max: 500\r\n                }),\r\n                PropertyPaneToggle('resize', {\r\n\t                label: 'Resizable',\r\n                  onText: 'Enable',\r\n                  offText: 'Disable'\r\n                }),\r\n                PropertyPaneToggle('sort', {\r\n                  label: 'Sortable',\r\n                  onText: 'Enable',\r\n                  offText: 'Disable'\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  // Set Property Pane settings to non-reactive\r\n  protected get disableReactivePropertyChanges(): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\n"],"sourceRoot":"../../../src"}