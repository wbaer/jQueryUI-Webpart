/**
 * @file createSolutionXml.ts
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * Creates an package's Solution.Xml for a ClientSideSolution
 */
"use strict";
/// <reference path='./xml.d.ts' />
var XmlGenerator = require("xml");
var lodash_1 = require("lodash");
var createRelationshipsXml_1 = require("./createRelationshipsXml");
var createFeatureXml_1 = require("./createFeatureXml");
var createIcon_1 = require("./createIcon");
var constants_1 = require("../config/constants");
var serializationOptions_1 = require("./serializationOptions");
function createSolutionXml(solution, customFeatureFilenames, resources) {
    solution = lodash_1.merge({
        version: '1.0.0.0'
    }, solution);
    // Create the top-level .rels file which points at the AppManifest
    var relationshipsXml = createRelationshipsXml_1.default('', [
        {
            type: 'package-manifest',
            target: constants_1.default.appManifestFileName
        }
    ]);
    // Create the top-level content types, defining content types in this package
    var contentTypesXml = {
        filename: constants_1.default.contentTypesXmlFilename,
        xml: XmlGenerator({
            Types: [
                {
                    _attr: {
                        xmlns: 'http://schemas.openxmlformats.org/package/2006/content-types'
                    }
                },
                {
                    Default: [
                        {
                            _attr: {
                                Extension: 'xml',
                                ContentType: 'text/xml'
                            }
                        }
                    ]
                },
                {
                    Default: [
                        {
                            _attr: {
                                Extension: 'rels',
                                ContentType: 'application/vnd.openxmlformats-package.relationships+xml'
                            }
                        }
                    ]
                },
                {
                    Default: [
                        {
                            _attr: {
                                Extension: 'webpart',
                                ContentType: 'text/xml'
                            }
                        }
                    ]
                },
                {
                    Default: [
                        {
                            _attr: {
                                Extension: 'htm',
                                ContentType: 'text/xml'
                            }
                        }
                    ]
                },
                {
                    Default: [
                        {
                            _attr: {
                                Extension: 'aspx',
                                ContentType: 'text/xml'
                            }
                        }
                    ]
                },
                {
                    Default: [
                        {
                            _attr: {
                                Extension: 'resx',
                                ContentType: 'text/xml'
                            }
                        }
                    ]
                },
                {
                    Default: [
                        {
                            _attr: {
                                Extension: 'png',
                                ContentType: 'application/wsp'
                            }
                        }
                    ]
                },
                {
                    Default: [
                        {
                            _attr: {
                                Extension: 'jpg',
                                ContentType: 'application/wsp'
                            }
                        }
                    ]
                },
                {
                    Default: [
                        {
                            _attr: {
                                Extension: 'gif',
                                ContentType: 'application/wsp'
                            }
                        }
                    ]
                },
                {
                    Default: [
                        {
                            _attr: {
                                Extension: 'bmp',
                                ContentType: 'application/wsp'
                            }
                        }
                    ]
                }
            ]
        }, serializationOptions_1.default)
    };
    /* tslint:disable:no-any */
    var properties = [];
    /* tslint:disable:no-any */
    // Add title to properties
    properties.push({
        Title: solution.title ? solution.title : solution.name
    });
    // Add supported locales to properties, if needed
    /* tslint:disable:typedef */
    var supportedLocales = solution.supportedLocales && solution.supportedLocales.length > 0
        ? solution.supportedLocales.map(function (locale) {
            return {
                SupportedLocale: [
                    {
                        _attr: {
                            CultureName: locale
                        }
                    }
                ]
            };
        })
        : undefined;
    if (supportedLocales) {
        properties.push({
            SupportedLocales: supportedLocales
        });
    }
    // Create the top-level AppManifest's XML, note that it is missing relationships
    var manifestXml = {
        filename: constants_1.default.appManifestFileName,
        /* tslint:disable:no-null-keyword */
        relationships: null,
        /* tslint:enable:no-null-keyword */
        xml: XmlGenerator({
            App: [
                {
                    _attr: {
                        xmlns: 'http://schemas.microsoft.com/sharepoint/2012/app/manifest',
                        Name: solution.name,
                        ProductID: solution.id,
                        Version: solution.version,
                        SharePointMinVersion: '16.0.0.0',
                        IsClientSideSolution: 'true'
                    }
                },
                {
                    Properties: properties
                }
            ]
        }, serializationOptions_1.default)
    };
    // Collect the XML for the individual features
    var featuresXml = solution.features.map(function (feature) { return createFeatureXml_1.default(feature, resources); });
    // Create icon data if a path to an icon is provided
    var icon = solution.iconPath ? createIcon_1.default(solution.iconPath) : undefined;
    // Ensure the Manifest's relationships to features are stored
    var relsList = featuresXml.map(function (feature) {
        return {
            type: 'manifest-feature',
            target: feature.filename
        };
    });
    relsList = relsList.concat(customFeatureFilenames.map(function (filename) {
        return {
            type: 'manifest-feature',
            target: filename
        };
    }));
    relsList = relsList.concat(resources.localizedResourcePaths.map(function (filename) {
        return {
            type: 'content-resource',
            target: filename
        };
    }));
    if (resources.defaultResourcePath) {
        relsList = relsList.concat({
            type: 'content-defaultresource',
            target: resources.defaultResourcePath
        });
    }
    if (icon) {
        relsList = relsList.concat({
            type: 'manifest-icon',
            target: icon.path
        });
    }
    manifestXml.relationships = createRelationshipsXml_1.default(constants_1.default.appManifestFileName, relsList);
    return {
        manifest: manifestXml,
        features: featuresXml,
        relationships: relationshipsXml,
        contentTypesXml: contentTypesXml,
        icon: icon,
        customFiles: undefined
    };
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = createSolutionXml;

//# sourceMappingURL=createSolutionXml.js.map
