{
  "_gIErrcTokcw+/VVwa+ReIA": {
    "invalidEnvironmentTypeError": {
      "comment": "Error to show when the Environment class is initialized with an invalid EnvironmentType.",
      "value": "EnvironmentType is invalid"
    },
    "invalidGuidStringError": {
      "comment": "Error to show when the Guid class fails to parse an invalid Guid. The {0} placeholder is the input guid string.",
      "value": "Invalid GUID string: \"{0}\""
    },
    "isFalseValidateError": {
      "comment": "Error to show when the Validate.isTrue() returns false. The {0} placeholder is the input's variable name.",
      "value": "The value for \"{0}\" is false"
    },
    "isNullValidateError": {
      "comment": "Error to show when the Validate.isNotNullOrUndefined() is called on a null value. The {0} placeholder is the input's variable name.",
      "value": "The value for \"{0}\" must not be null"
    },
    "isUndefinedValidateError": {
      "comment": "Error to show when the Validate.isNotNullOrUndefined() is called on an undefined value. The {0} placeholder is the input's variable name.",
      "value": "The value for \"{0}\" must not be undefined"
    },
    "isEmptyStringValidateError": {
      "comment": "Error to show when the Validate.isNonemptyString() returns false. The {0} placeholder is the input's variable name.",
      "value": "The value for \"{0}\" must not be an empty string"
    },
    "invalidVersionStringError": {
      "comment": "Error to show when the Version class fails to parse an invalid Version string. The {0} placeholder is the input version string.",
      "value": "Invalid version string: \"{0}\""
    },
    "logVerboseLevelMessage": {
      "comment": "Text used when logging a verbose level message. The {0} placeholder is the source of the log call. The {1} placeholder is the message to be logged. Example: \"SomeComponent: VERBOSE The page finished loading\"",
      "value": "{0}: VERBOSE {1}"
    },
    "logInfoLevelMessage": {
      "comment": "Text used when logging a info level message. The {0} placeholder is the source of the log call. The {1} placeholder is the message to be logged. Example: \"SomeComponent: The page finished loading\"",
      "value": "{0}: {1}"
    },
    "logWarningLevelMessage": {
      "comment": "Text used when logging a warning level message. The {0} placeholder is the source of the log call. The {1} placeholder is the message to be logged. Example: \"SomeComponent: WARNING The page finished loading\"",
      "value": "{0}: WARNING {1}"
    },
    "logErrorLevelMessage": {
      "comment": "Text used when logging a error level message. The {0} placeholder is the source of the log call. The {1} placeholder is the error's message. Example: \"SomeComponent: ERROR The page finished loading\"",
      "value": "{0}: ERROR: {1}"
    },
    "serviceScopeConsumingBeforeFinished": {
      "comment": "Error to show when someone attempts to consume a ServiceScope service before the finish() function has been called",
      "value": "Cannot consume services because the scope is not finished yet"
    },
    "serviceScopeConsumingDuringAutoCreation": {
      "comment": "The ServiceScope will automatically create a service if it hasn't been registered yet.  During this process, the ServiceScope.consume() function may not be used.  This is a safeguard to prevent errors due to a circular dependency.",
      "value": "Cannot consume services during ServiceScope autocreation"
    },
    "serviceScopeAlreadyFinishedError": {
      "comment": "Error to show when someone attempts to call finish on the ServiceScope after it has finished.",
      "value": "The ServiceScope is already finished"
    },
    "serviceScopeProvideServiceAfterFinishedError": {
      "comment": "After the ServiceScope.finish() function has been called, developers are no long allowed to call provide().  This is a safeguard to prevent mistakes.",
      "value": "Cannot register service because the scope is already finished"
    },
    "serviceScopeProvideServiceThatAlreadyExists": {
      "comment": "Attempts to register the same service more than once. The {0} placeholder is the service key's name.",
      "value": "The service key \"{0}\" has already been registered in this scope"
    }
  },
  "_nQNACBeQ34aV6bVwtFBayA": {
    "platformFailedToLoadError": {
      "comment": "An error to show when the platform component fails to load in the page start.\r\n    {0} is the platform component id and {1} is the platform component name.",
      "value": "Platform failed to load. Id: \"{0}\", name: \"{1}\""
    },
    "applicationFailedToLoadError": {
      "comment": "An error to show when the application fails to load in the page start.\r\n    {0} is the application id and {1} is the aplication name.",
      "value": "Application failed to load. Id: \"{0}\", name: \"{1}\""
    },
    "applicationFailedToLoadWithMessageError": {
      "comment": "An error to show when the platform component fails to load in the page start. It includes the error message.\r\n    {0} is the application id, {1} is the aplication name, {2} is the original error.",
      "value": "Application failed to load. Id: \"{0}\", name: \"{1}\", error: {2}"
    },
    "applicationFailedToInitializeError": {
      "comment": "An error to show when the applicaiton fails to initialize. The {0} placeholder is the error.",
      "value": "Error initializing application. Error: {0}"
    },
    "invalidPreloadedDataError": {
      "comment": "An error to show when the preloaded data is invalid.",
      "value": "Invalid preloaded data."
    },
    "missingApplicationIdError": {
      "comment": "An error to show when an application id can't be found in the preloaded data.",
      "value": "Missing application id."
    },
    "manifestNotFoundByIdError": {
      "comment": "An error to show when the manifest could not be found. Shows only the id, to use when version is not available.\r\n    {0} is the component id.",
      "value": "Manifest not found for component id \"{0}\"."
    },
    "manifestNotFoundError": {
      "comment": "An error to show when the manifest could not be found.\r\n    {0} is the component id, {1} is the component version.",
      "value": "Manifest not found for component id \"{0}\" and version \"{1}\"."
    },
    "debugManifestLoadingWarning": {
      "comment": "A warnings to show to the user when they're attempting to load debug scripts.",
      "value": "WARNING: This page is requesting to load unsafe scripts, which could potentially harm your computer! Do not proceed unless you trust the developer and understand the risks."
    },
    "debugManifestLoadingWarning2": {
      "comment": "A warning to show to the user when they're attempting to load debug scripts.\r\n    {0} is placeholder for \"cancel\" button as given by debugManifestLoadingCancel",
      "value": "If you are unsure, click \"{0}\"."
    },
    "debugManifestLoadingConfirm": {
      "comment": "Button label shown for proceeding the unsafe scripts loading despite warning",
      "value": "Load debug scripts"
    },
    "debugManifestLoadingCancel": {
      "comment": "Button label shown for declining the unsafe scripts loading during warning",
      "value": "Don't load debug scripts"
    },
    "systemConfigDisabledError": {
      "comment": "An error to show when a user tries to execute System.config(), as that method is disabled.",
      "value": "System.config() is not supported. Use a manifest to specify the configuration."
    },
    "loadComponentLog": {
      "comment": "A log message to show when a component starts loading.\r\n    {0} is the component id, {1} is the component alias.",
      "value": "Loading component \"{0}\" ({1})."
    },
    "loadComponentEndLog": {
      "comment": "A log message to show when a component finishes loading.\r\n    {0} is the component id, {1} is the component alias.",
      "value": "Component \"{0}\" ({1}) loaded."
    },
    "loadComponentRetryLog": {
      "comment": "A log message to show when loadComponent() is going to retry to load the component.\r\n    {0} is the component id, {1} is the component alias, {2} is the current number of retry, {3} is the maximum number of retries.",
      "value": "Loading component \"{0}\" ({1}). Attempt {2} of {3}."
    },
    "loadComponentError": {
      "comment": "An error to show when a component fails to load.\r\n    {0} is the component id, {1} is the component alias, {2} is the original error that caused the failure.",
      "value": "Failed to load component \"{0}\" ({1}). Original error: {2}"
    },
    "loadComponentMaxRetriesError": {
      "comment": "An error to show when a component fails to load after retrying the maximum amount of times allowed.\r\n    {0} is the component id, {1} is the component alias, {2} is the maximum number of times.",
      "value": "Attempted to load component \"{0}\" ({1}) {2} times without success."
    },
    "loadComponentDependencyError": {
      "comment": "An error to show when a component fails to load a component dependency through the failover path.\r\n    {0} is the dependency name, {1} is the component id, {2} is the component alias.",
      "value": "Failed to load component dependency \"{0}\" from component \"{1}\" ({2})."
    },
    "loadComponentDependencyFailoverPathError": {
      "comment": "An error to show when a component fails to load a component dependency through the failover path.\r\n    {0} is the dependency name, {1} is the failover path, {2} is the component id, {3} is the component alias.",
      "value": "Failed to load component dependency \"{0}\" with failover path \"{1}\" from component \"{2}\" ({3})."
    },
    "loadPathDependencyLog": {
      "comment": "A log message to show when a path dependency starts loading.\r\n    {0} is the path dependency name, {1} is the component id, {2} is the component alias.",
      "value": "Loading path dependency \"{0}\" from component \"{1}\" ({2})"
    },
    "loadPathDependencyError": {
      "comment": "An error to show when a component fails to load a path dependency.\r\n    {0} is the dependency name, {1} is the component id, {2} is the component alias.",
      "value": "Failed to load path dependency \"{0}\" from component \"{1}\" ({2})."
    },
    "loadPathDependencyBlockedByAnotherDependencyError": {
      "comment": "An error to show when a component fails to load a path dependency because another dependency failed to load.\r\n    {0} is the dependency name, {1} is the component id, {2} is the component alias.",
      "value": "Failed to load path dependency \"{0}\" from component \"{1}\" ({2}) due to another dependency that failed to load."
    },
    "loadEntryPointError": {
      "comment": "An error to show when a component fails to load a path dependency.\r\n    {0} is the component id, {1} is the component alias.",
      "value": "Failed to load entry point from component \"{0}\" ({1})."
    },
    "loadComponentReturnsEmptyError": {
      "comment": "An error to show when after loading a component, the output is empty.\r\n    {0} is the component id, {1} is the component alias.",
      "value": "loadComponent() returned an empty object for component \"{0}\" ({1})."
    },
    "loadComponentReturnsDefaultEmptyError": {
      "comment": "An error to show when after loading a component, the output has an empty default property.\r\n    {0} is the component id, {1} is the component alias.",
      "value": "loadComponent() returned an object with an empty default property for component \"{0}\" ({1})."
    },
    "loadScriptWithStringError": {
      "comment": "An error to show when loadScript is called with 2 parameters and the 2nd is a string.\r\n    This is unsupported and otherwise the system throws a confusing error.",
      "value": "loadScript function doesn't allow a string as 2nd parameter. Use ILoadScriptOptions instead."
    },
    "tooManyManifestsError": {
      "comment": "An error to show when there are too many manifests for one id. Used when requesting manifest by id without a specific version.\r\n    {0} is the number of manifests found, {1} is a comma-separated list of the manifest versions, {2} is the component id.",
      "value": "{0} manifests (versions {1}) found for component \"{2}\"."
    },
    "tooManyCompatibleVersionsError": {
      "comment": "An error to show when there are too many compatible versions for one id and version.\r\n    Used when requesting manifest by id and version. Only one compatible version should be found.\r\n    {0} is the number of manifests found, {1} is a comma-separated list of the found versions, {2} is the component id, {3} is the component version.",
      "value": "{0} compatible versions ({1}) found for component \"{2}\" version \"{3}\"."
    },
    "tooManyComponentsError": {
      "comment": "An error to show when there are too many component for one id. Used when requesting component by id without a specific version.\r\n    {0} is the component id.",
      "value": "Too many components found for id \"{0}\"."
    },
    "noComponentFoundError": {
      "comment": "An error to show when a component for the specified id could not be found. Used when requesting component by id without a specific version.\r\n    {0} is the component id.",
      "value": "No component found for id \"{0}\"."
    },
    "deleteComponentLog": {
      "comment": "A log message to show when a component is going to be deleted from the component store.\r\n    {0} is the component id, {1} is the component version.",
      "value": "Deleting component \"{0}\" version \"{1}\" from the store."
    },
    "browserNotSupportedError": {
      "comment": "An error to show when the user has an old browser that is not supported.\r\n    Currently this only impacts Firefox older than version 44",
      "value": "This version of your browser is not supported.\r\nPlease update your browser to the latest version."
    },
    "resourceNotFoundError": {
      "comment": "An error to show when trying to resolve the address of a resource and the resource is not present in the loader config of the manifest.\r\n    {0} is the resource name, {1} is the component id, {2} is the component alias.",
      "value": "Resource \"{0}\" not found in loader configuration of manifest for component \"{1}\" ({2})."
    },
    "noFailoverPathError": {
      "comment": "An error to show when the component does not have a failover path property.",
      "value": "Cannot call resolveAddress() on a component with no failover path"
    }
  },
  "_RPELcTeq3ZByqi3N5dt18w": {
    "missingDeveloperToolsTabInitFunctionError": {
      "comment": "Error to show when the component loader function is missing in a registered DeveloperToolsTab.",
      "value": "Missing component or initializer function."
    },
    "closeDeveloperToolsAriaLabel": {
      "comment": "Alternative/accessability text for the developer tools close button.",
      "value": "Close developer tools."
    }
  },
  "_SxImp5ewsUToxeAHBkB+pw": {
    "developerToolsTabLoadingText": {
      "comment": "Text to show when a developer tools tab is loading.",
      "value": "Loading..."
    },
    "developerToolsTabLoadingUnknownError": {
      "comment": "Error text to show when a developer tools fails to load for an unknown reason.",
      "value": "Unknown error loading developer tools module."
    }
  },
  "_sovI4qDAUPMnD4jg3Vsyfg": {
    "tabTitle": {
      "comment": "Manifest manager developer tools tab title.",
      "value": "Manifests"
    },
    "noManifestSelected": {
      "comment": "Text to show when no manifest is selected in the manifest manager in the developer tools.",
      "value": "No manifest selected"
    }
  },
  "_g7G0QHJ5bQYlxe+lk+DcxA": {
    "TabTitle": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]The title of the PerformanceDisplay tab",
      "value": "Performance"
    },
    "ErrorAccessingPerfDataErrorMessage": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Error message to show when performance data can't be accessed in the dev dashboard.",
      "value": "Unable to retrieve performance data: object is null or undefined."
    },
    "ErrorAccessingRedirectDataErrorMessage": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Error message to show when redirect performance data can't be accessed in the dev dashboard.",
      "value": "There was a problem accessing the HTTP redirect performance data."
    },
    "ErrorParsingPercievedLatencyErrorMessage": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Error message to show when the percieved latency data can't be parsed in the dev dashboard.",
      "value": "An error was caught when parsing the percieved latency data."
    },
    "ErrorParsingApiDataErrorMessage": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Error message to show when the API data can't be parsed in the dev dashboard.",
      "value": "An error was caught when parsing the API data."
    },
    "UnkownPerformanceDataErrorMessage": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Error message to show when an unknown error occurs getting the performance data. {0} is the error message.",
      "value": "An unknown error has occured: {0}"
    },
    "DefaultWebPartName": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Web part name to use if the specific name can't be found",
      "value": "Web Part"
    },
    "ServerResponseLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the server response time performance item.",
      "value": "Server Response"
    },
    "ApplicationInitializationLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the application initialization time performance item.",
      "value": "Application Initialization"
    },
    "PageRenderLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the page render time performance item.",
      "value": "Page Render"
    },
    "LeftNavRenderLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the left nav render time performance item.",
      "value": "Left Navigation Render"
    },
    "CanvasRenderLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the canvas render time performance item.",
      "value": "Canvas Render"
    },
    "RedirectResponseLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the redirect load time performance item.",
      "value": "Redirect Response"
    },
    "AppLoadLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the application load time performance item.",
      "value": "Application Load"
    },
    "RenderWebPartsLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the web part render time performance item.",
      "value": "Web Parts Render"
    },
    "TotalRenderTimeLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the total render time performance item.",
      "value": "Total"
    },
    "GeneralErrorMessage": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]The general error message to show if something goes wrong in getting the performance data.",
      "value": "Sorry, something went wrong while retrieving the performance data."
    },
    "ErrorMessagePrefix": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Prefix to show before the actual error message. The \"{0}\" placeholder will be replaced with the error message.",
      "value": "Error Message: {0}"
    },
    "PerformanceDataHint": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Note to the user describing how to get updated performance data after adding or removing a webpart.",
      "value": "Note: After adding or removing a web part, refresh the page to see updated performance data."
    },
    "ModulesLoadedLegendLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the \"Modules Loaded\" category in the legend.",
      "value": "Modules Loaded"
    },
    "InitializationLegendLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the \"Initialization\" category in the legend.",
      "value": "Initialization"
    },
    "RenderTimeLegendLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the \"Render Time\" category in the legend.",
      "value": "Render Time"
    },
    "InitializationTimeLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the \"Initialization Time\" tooltip.",
      "value": "Initialization time"
    },
    "ModuleLoadingTimeLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the \"Module loading time\" tooltip.",
      "value": "Module loading time"
    },
    "DataFetchTimeLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the \"Data fetch time\" tooltip.",
      "value": "Data fetch time"
    },
    "DataFetchLegendLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for the \"Data Fetch\" category in the legend.",
      "value": "Data Fetch"
    },
    "ItemsColumnHeader": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Heading for the name of the performance item in the table.",
      "value": "Items"
    },
    "DurationColumnHeader": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Heading for the total duration of the performance item in the table.",
      "value": "Duration"
    },
    "MillisecondsUnitLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Unit label for milliseconds. {0} is a numerical value.",
      "value": "{0} ms"
    },
    "NAPlaceholder": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Placeholder for when a value is missing or not applicable.",
      "value": "N/A"
    }
  },
  "_gqinlPQb8HZprTeCpwNz2w": {
    "TabTitle": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]The title of the TraceDisplay tab.",
      "value": "Trace"
    },
    "EmptyTraceData": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Message to show when no traces where loaded from LogManger.",
      "value": "No traces loaded."
    },
    "ExportCSVButtonLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Label for button to export traces as CSV file.",
      "value": "Export CSV"
    },
    "LevelHeaderLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]The title of Level header.",
      "value": "Level"
    },
    "MessageHeaderLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]The title of Message header.",
      "value": "Message"
    },
    "ScopeHeaderLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]The title of Scope header.",
      "value": "Scope"
    },
    "SourceHeaderLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]The title of Source header.",
      "value": "Source"
    },
    "TimestampHeaderLabel": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]The title of Timestamp header.",
      "value": "Timestamp"
    },
    "ErrorAccessingTraceDataErrorMessage": {
      "comment": "[Tag:ODSP-SPPPLAT-WebPartInfra]Error message to show when trace data can't be accessed in the dev dashboard.",
      "value": "There was a problem accessing the trace data."
    }
  }
}