/// <reference types="es6-promise" />
/// <reference types="whatwg-fetch" />
import { ServiceKey, ServiceScope } from '@microsoft/sp-core-library';
import HttpClientConfiguration, { IHttpClientConfigurations } from './HttpClientConfiguration';
import HttpClientResponse from './HttpClientResponse';
/**
 * HttpClient implements a basic set of features for performing REST operations.
 * The subclass SPHttpClient extends this basic functionality with SharePoint-specific
 * enhancements.
 *
 * @public
 */
export default class HttpClient {
    /**
     * The standard predefined HttpClientConfiguration objects for use with
     * the HttpClient class.
     */
    static readonly configurations: IHttpClientConfigurations;
    /**
     * The service key for HttpClient.
     *
     * @public
     */
    static readonly serviceKey: ServiceKey<HttpClient>;
    private _httpClientBase;
    constructor(serviceScope: ServiceScope);
    /**
     * Performs a REST service call.  Although the SPHttpClient subclass adds
     * additional enhancements, the parameters and semantics for HttpClient.fetch()
     * are essentially the same as the WHATWG API standard that is documented here:
     * https://fetch.spec.whatwg.org/
     * @param url - the URL to fetch
     * @param configuration - determines the default behavior of HttpClient; normally this should
     *   be the latest version number from HttpClientConfigurations
     * @param options - additional options that affect the request
     * @returns a promise that will return the result
     */
    fetch(url: string, configuration: HttpClientConfiguration, options: IHttpClientOptions): Promise<HttpClientResponse>;
    /**
     * Calls fetch(), but sets the method to 'GET'.
     * @param url - the URL to fetch
     * @param configuration - determines the default behavior of HttpClient; normally this should
     *   be the latest version number from HttpClientConfigurations
     * @param options - additional options that affect the request
     * @returns a promise that will return the result
     */
    get(url: string, configuration: HttpClientConfiguration, options?: IHttpClientOptions): Promise<HttpClientResponse>;
    /**
     * Calls fetch(), but sets the method to 'POST'.
     * @param url - the URL to fetch
     * @param configuration - determines the default behavior of HttpClient; normally this should
     *   be the latest version number from HttpClientConfigurations
     * @param options - additional options that affect the request
     * @returns a promise that will return the result
     */
    post(url: string, configuration: HttpClientConfiguration, options: IHttpClientOptions): Promise<HttpClientResponse>;
}
/**
 * This interface defines the options for the HttpClient operations such as
 * get(), post(), fetch(), etc.  It is based on the whatwg API standard
 * parameters that are documented here:
 * https://fetch.spec.whatwg.org/
 *
 * @public
 */
export interface IHttpClientOptions extends RequestInit {
}
