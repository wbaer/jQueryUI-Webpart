// [ts-npm-lint] removed reference to '../typings/tsd.d.ts'
/// <reference types="es6-collections" />
import * as gulp from 'gulp';
import * as yargs from 'yargs';
import * as coreBuild from '@microsoft/gulp-core-build';
import { BuildRig, ITaskDefinition, ICoreBuildArgs } from './BuildRig';
export declare const preCopy: coreBuild.CopyTask;
export declare const postCopy: coreBuild.CopyTask;
export interface ISPBuildRigArgs extends ICoreBuildArgs {
    /**
     * All SPFx build rigs can be tested in a specific locale using this flag,
     * which is defined in the localization code
     *
     * @todo 253519 remove this once this logic is in GCB/the Task definition
     */
    locale: string;
    /**
     * When this flag is enabled, certain expensive build steps will be disabled.
     * This should allow the developer to quickly refresh their repository after
     * pulling from master, or in the inner loop (when doing serve)
     */
    minimal: boolean;
}
/**
 * This class represents the basic shared build rig for all SPFx Rigs. It defines a few
 * simple sub-tasks, and only registers a "build" task.
 */
export declare class SPBuildRig extends BuildRig {
    protected _preBuildTasks: coreBuild.IExecutable[];
    protected _postTypescriptTasks: coreBuild.IExecutable[];
    protected _postBuildTasks: coreBuild.IExecutable[];
    protected args: ISPBuildRigArgs;
    initialize(gulp: gulp.Gulp): void;
    /**
     * Register additional sub-tasks to run before the typescript subtask.
     * Note, this is meant to be used in a gulpfile.js to inject one-off subtasks
     */
    addPreBuildTask(tasks: coreBuild.IExecutable | coreBuild.IExecutable[]): void;
    /**
     * Register additional sub-tasks to run after the typescript subtask.
     * Note, this is meant to be used in a gulpfile.js to inject one-off subtasks
     */
    addPostTypescriptTask(tasks: coreBuild.IExecutable | coreBuild.IExecutable[]): void;
    /**
     * Register additional sub-tasks to run after the typescript subtask.
     * @deprecated
     */
    addBuildTasks(tasks: coreBuild.IExecutable | coreBuild.IExecutable[]): void;
    /**
     * Register additional sub-tasks to run after the entire build.
     * Note, this is meant to be used in a gulpfile.js to inject one-off subtasks
     */
    addPostBuildTask(tasks: coreBuild.IExecutable | coreBuild.IExecutable[]): void;
    /**
     * Registers the command line arguments which are available for this rig
     * @todo 253519 this code should be moved into gulp-core-build/the task definitions
     */
    protected getYargs(): yargs.Argv;
    /**
     * Register 2 tasks, build and default, which simply copy files, then run typescript and tslint
     */
    protected getTasks(): Map<string, ITaskDefinition>;
    /**
     * Override this function to overwrite the "build" task
     */
    protected getBuildTask(): coreBuild.IExecutable;
    /**
     * Override this function to redefine the core build loop
     */
    protected getCoreBuildTask(): coreBuild.IExecutable;
    protected setupSharedConfig(): void;
    /**
     * This function cleans up the shared config by populating task config properties that depend on other tasks'
     *  user-defined properties.
     */
    protected finalizeSharedConfig(): void;
    private _addTaskOrListOfTasks(tasks, array);
}
