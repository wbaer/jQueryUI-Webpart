/// <reference types="whatwg-fetch" />
/// <reference types="es6-promise" />
/**
 * @copyright (c) Microsoft Corporation. All rights reserved.
 */
import SPHttpClientResponse from './SPHttpClientResponse';
export declare type BatchedRequestResolveCallback = (value?: Response) => void;
export declare type BatchedRequestRejectCallback = (value?: any) => void;
/**
 * INTERNAL USAGE ONLY
 * This is a helper class used by SPHttpClientBatch to track the state of each
 * queued REST request.
 */
export default class BatchedRequest {
    request: Request;
    response: SPHttpClientResponse | undefined;
    promise: Promise<SPHttpClientResponse>;
    private _queuedPromiseResolves;
    private _queuedPromiseRejects;
    constructor(request: Request);
    /**
     * The SPHttpClientBatch class calls this method while parsing the HTTP response for
     * the batch.  If there are any queued promises, this will resolve or reject
     * them as appropriate.
     *
     * NOTE: This function is only ever called once, because a BATCH can only
     * be executed once.
     */
    notifyCompleted(response: SPHttpClientResponse): void;
}
