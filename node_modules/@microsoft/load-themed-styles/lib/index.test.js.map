{"version":3,"sources":["index.test.ts"],"names":[],"mappings":"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","file":"index.test.js","sourcesContent":["import { expect } from 'chai';\nimport {\n  detokenize,\n  loadTheme,\n  splitStyles,\n  loadStyles,\n  configureLoadStyles,\n  IThemingInstruction\n} from './index';\n\ndescribe('detokenize', () => {\n  it('handles colors', () => {\n    expect(detokenize('\"[theme:name, default: #FFF]\"')).to.equal('#FFF');\n    expect(detokenize('\"[theme: name, default: #FFF]\"')).to.equal('#FFF');\n    expect(detokenize('\"[theme: name , default: #FFF  ]\"')).to.equal('#FFF');\n  });\n\n  it('handles rgba', () => {\n    expect(detokenize('\"[theme:name, default: rgba(255,255,255,.5)]\"')).to.equal('rgba(255,255,255,.5)');\n  });\n\n  it('handles fonts', () => {\n    expect(detokenize('\"[theme:name, default: \"Segoe UI\"]\"')).to.equal('\"Segoe UI\"');\n  });\n\n  it('respects theme', () => {\n    loadTheme({\n      color: 'red'\n    });\n\n    try {\n      expect(detokenize('\"[theme:color, default: #FFF]\"')).to.equal('red');\n      expect(detokenize('\"[theme: color , default: #FFF]\"')).to.equal('red');\n    } finally {\n      loadTheme(undefined);\n    }\n  });\n\n  it('ignores malformed themes', () => {\n    expect(detokenize('\"[theme:name, default: \"Segoe UI\"]')).to.equal('\"[theme:name, default: \"Segoe UI\"]');\n    expect(detokenize('\"[theme:]\"')).to.equal('\"[theme:]\"');\n  });\n\n  it('translates missing themes', () => {\n    expect(detokenize('\"[theme:name]\"')).to.equal('inherit');\n  });\n\n  it('splits non-themable CSS', () => {\n      const cssString: string = '.sampleClass\\n{\\n color: #FF0000;\\n}\\n';\n      const arr: IThemingInstruction[] = splitStyles(cssString);\n      expect(arr.length).to.equal(1);\n      expect(arr[0].rawString).to.equal(cssString);\n  });\n\n  it('splits themable CSS', () => {\n      const arr: IThemingInstruction[] = splitStyles('.firstClass { color: \"[theme: firstColor ]\";}\\n' +\n          ' .secondClass { color: \"[theme:secondColor, default: #AAA]\";}\\n .coach { color: #333; }');\n      expect(arr.length).to.equal(5);\n      for (let i: number = 0; i < arr.length; i++) {\n          if (i % 2 === 0) { // even index should be a string component\n              expect(typeof arr[i].rawString).to.equal('string');\n          } else { // odd index should be a theme instruction object\n              expect(typeof arr[i].theme).to.equal('string');\n          }\n      }\n  });\n\n  it('passes the styles to loadStyles override callback', () => {\n    const expected: string = 'xxx.foo { color: #FFF }xxx';\n    let subject: string;\n\n    const callback: (str: string) => void = (str: string) => {\n      subject = 'xxx' + str + 'xxx';\n    };\n\n    configureLoadStyles(callback);\n\n    loadStyles('.foo { color: \"[theme:fooColor, default: #FFF]\" }');\n    expect(subject).to.equal(expected);\n\n    configureLoadStyles(undefined);\n  });\n});\n"],"sourceRoot":"/src"}