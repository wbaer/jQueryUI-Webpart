/*
 * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
 * See LICENSE in the project root for license information.
 */
"use strict";
/* tslint:disable:typedef */
var loaderUtils = require('loader-utils');
/* tslint:enable:typedef */
var loadedThemedStylesPath = require.resolve('@microsoft/load-themed-styles');
var LoadThemedStylesLoader = (function () {
    function LoadThemedStylesLoader() {
        throw new Error('Constructing "LoadThemedStylesLoader" is not supported.');
    }
    Object.defineProperty(LoadThemedStylesLoader, "loadedThemedStylesPath", {
        get: function () {
            return LoadThemedStylesLoader._loadedThemedStylesPath;
        },
        set: function (value) {
            LoadThemedStylesLoader._loadedThemedStylesPath = value;
        },
        enumerable: true,
        configurable: true
    });
    LoadThemedStylesLoader.resetLoadedThemedStylesPath = function () {
        LoadThemedStylesLoader._loadedThemedStylesPath = loadedThemedStylesPath;
    };
    LoadThemedStylesLoader.pitch = function (remainingRequest) {
        return [
            ("var content = require(" + loaderUtils.stringifyRequest(this, '!!' + remainingRequest) + ");"),
            ("var loader = require(" + JSON.stringify(LoadThemedStylesLoader._loadedThemedStylesPath) + ");"),
            '',
            'if(typeof content === "string") content = [[module.id, content]];',
            '',
            '// add the styles to the DOM',
            'for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);',
            '',
            'if(content.locals) module.exports = content.locals;'
        ].join('\n');
    };
    LoadThemedStylesLoader._loadedThemedStylesPath = loadedThemedStylesPath;
    return LoadThemedStylesLoader;
}());
exports.LoadThemedStylesLoader = LoadThemedStylesLoader;

//# sourceMappingURL=LoadThemedStylesLoader.js.map
