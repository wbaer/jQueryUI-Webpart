{"version":3,"sources":["components/ColorPicker/colors.ts"],"names":[],"mappings":"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","file":"components/ColorPicker/colors.js","sourcesContent":["import { assign } from '../../Utilities';\r\nimport { COLOR_VALUES } from './colorValues';\r\n\r\nexport const MAX_COLOR_SATURATION = 100;\r\nexport const MAX_COLOR_HUE = 359;\r\nexport const MAX_COLOR_VALUE = 100;\r\n\r\nexport interface IRGB {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n  a?: number;\r\n}\r\n\r\nexport interface IHSV {\r\n  h: number;\r\n  s: number;\r\n  v: number;\r\n}\r\n\r\nexport interface IColor extends IRGB, IHSV {\r\n  hex: string;\r\n  str: string;\r\n}\r\n\r\nexport function cssColor(color: string): IRGB {\r\n  return _named(color)\r\n    || _hex3(color)\r\n    || _hex6(color)\r\n    || _rgb(color)\r\n    || _rgba(color)\r\n    || _hsl(color)\r\n    || _hsla(color);\r\n}\r\n\r\nexport function rgb2hex(r: number, g: number, b: number): string {\r\n  return [\r\n    _numberToPaddedHex(r),\r\n    _numberToPaddedHex(g),\r\n    _numberToPaddedHex(b)\r\n  ].join('');\r\n}\r\n\r\nexport function hsv2hex(h: number, s: number, v: number): string {\r\n  const { r, g, b } = hsv2rgb(h, s, v);\r\n\r\n  return rgb2hex(r, g, b);\r\n}\r\n\r\nexport function rgb2hsv(r: number, g: number, b: number): IHSV {\r\n  let h;\r\n  let s;\r\n  let v;\r\n  const max = Math.max(r, g, b);\r\n  const min = Math.min(r, g, b);\r\n  const delta = max - min;\r\n\r\n  // hue\r\n  if (delta === 0) {\r\n    h = 0;\r\n  } else if (r === max) {\r\n    h = ((g - b) / delta) % 6;\r\n  } else if (g === max) {\r\n    h = (b - r) / delta + 2;\r\n  } else if (b === max) {\r\n    h = (r - g) / delta + 4;\r\n  }\r\n\r\n  h = Math.round(h * 60);\r\n\r\n  if (h < 0) {\r\n    h += 360;\r\n  }\r\n\r\n  // saturation\r\n  s = Math.round((max === 0 ? 0 : (delta / max)) * 100);\r\n\r\n  // value\r\n  v = Math.round(max / 255 * 100);\r\n\r\n  return { h, s, v };\r\n}\r\n\r\nexport function hsl2hsv(h: number, s: number, l: number): IHSV {\r\n  s *= ((l < 50) ? l : (100 - l)) / 100;\r\n\r\n  return {\r\n    h: h,\r\n    s: 2 * s / (l + s) * 100,\r\n    v: l + s\r\n  };\r\n}\r\n\r\nexport function hsl2rgb(h: number, s: number, l: number): IRGB {\r\n  const hsv = hsl2hsv(h, s, l);\r\n\r\n  return hsv2rgb(hsv.h, hsv.s, hsv.v);\r\n}\r\n\r\nexport function hsv2rgb(h: number, s: number, v: number): IRGB {\r\n  s = s / 100;\r\n  v = v / 100;\r\n\r\n  let rgb: number[] = [];\r\n\r\n  const c = v * s;\r\n  const hh = h / 60;\r\n  const x = c * (1 - Math.abs(hh % 2 - 1));\r\n  const m = v - c;\r\n\r\n  switch (Math.floor(hh)) {\r\n    case 0:\r\n      rgb = [c, x, 0];\r\n      break;\r\n\r\n    case 1:\r\n      rgb = [x, c, 0];\r\n      break;\r\n\r\n    case 2:\r\n      rgb = [0, c, x];\r\n      break;\r\n\r\n    case 3:\r\n      rgb = [0, x, c];\r\n      break;\r\n\r\n    case 4:\r\n      rgb = [x, 0, c];\r\n      break;\r\n\r\n    case 5:\r\n      rgb = [c, 0, x];\r\n      break;\r\n  }\r\n\r\n  return {\r\n    r: Math.round(255 * (rgb[0] + m)),\r\n    g: Math.round(255 * (rgb[1] + m)),\r\n    b: Math.round(255 * (rgb[2] + m))\r\n  };\r\n}\r\n\r\nexport function getColorFromString(color: string): IColor {\r\n  let { a, b, g, r } = cssColor(color);\r\n  let { h, s, v } = rgb2hsv(r, g, b);\r\n\r\n  return {\r\n    a: a,\r\n    b: b,\r\n    g: g,\r\n    h: h,\r\n    hex: rgb2hex(r, g, b),\r\n    r: r,\r\n    s: s,\r\n    str: color,\r\n    v: v\r\n  };\r\n\r\n}\r\n\r\nexport function getFullColorString(color: IColor): string {\r\n  return `#${hsv2hex(color.h, MAX_COLOR_SATURATION, MAX_COLOR_VALUE)}`;\r\n}\r\n\r\nexport function updateSV(color: IColor, s: number, v: number): IColor {\r\n  let { r, g, b } = hsv2rgb(color.h, s, v);\r\n  let hex = rgb2hex(r, g, b);\r\n\r\n  return {\r\n    a: color.a,\r\n    b: b,\r\n    g: g,\r\n    h: color.h,\r\n    hex: hex,\r\n    r: r,\r\n    s: s,\r\n    str: (color.a === 100) ? `#${hex}` : `rgba(${r}, ${g}, ${b}, ${color.a / 100})`,\r\n    v: v\r\n  };\r\n}\r\n\r\nexport function updateH(color: IColor, h: number): IColor {\r\n  let { r, g, b } = hsv2rgb(h, color.s, color.v);\r\n  let hex = rgb2hex(r, g, b);\r\n\r\n  return {\r\n    a: color.a,\r\n    b: b,\r\n    g: g,\r\n    h: h,\r\n    hex: hex,\r\n    r: r,\r\n    s: color.s,\r\n    str: (color.a === 100) ? `#${hex}` : `rgba(${r}, ${g}, ${b}, ${color.a / 100})`,\r\n    v: color.v\r\n  };\r\n}\r\n\r\nexport function updateA(color: IColor, a: number): IColor {\r\n  return assign({}, color, {\r\n    a: a,\r\n    str: (a === 100) ? `#${color.hex}` : `rgba(${color.r}, ${color.g}, ${color.b}, ${a / 100})`\r\n  });\r\n}\r\n\r\nfunction _numberToPaddedHex(num: number) {\r\n  const hex = num.toString(16);\r\n\r\n  return hex.length === 1 ? '0' + hex : hex;\r\n}\r\n\r\nfunction _named(str) {\r\n  const c = COLOR_VALUES[str.toLowerCase()];\r\n\r\n  if (c) {\r\n    return {\r\n      r: c[0],\r\n      g: c[1],\r\n      b: c[2],\r\n      a: 100\r\n    };\r\n  }\r\n}\r\n\r\nfunction _rgb(str) {\r\n  if (0 === str.indexOf('rgb(')) {\r\n    str = str.match(/rgb\\(([^)]+)\\)/)[1];\r\n\r\n    const parts = str.split(/ *, */).map(Number);\r\n\r\n    return {\r\n      r: parts[0],\r\n      g: parts[1],\r\n      b: parts[2],\r\n      a: 100\r\n    };\r\n  }\r\n}\r\n\r\nfunction _rgba(str) {\r\n  if (str.indexOf('rgba(') === 0) {\r\n    str = str.match(/rgba\\(([^)]+)\\)/)[1];\r\n\r\n    const parts = str.split(/ *, */).map(Number);\r\n\r\n    return {\r\n      r: parts[0],\r\n      g: parts[1],\r\n      b: parts[2],\r\n      a: parts[3] * 100\r\n    };\r\n  }\r\n}\r\n\r\nfunction _hex6(str) {\r\n  if ('#' === str[0] && 7 === str.length) {\r\n    return {\r\n      r: parseInt(str.slice(1, 3), 16),\r\n      g: parseInt(str.slice(3, 5), 16),\r\n      b: parseInt(str.slice(5, 7), 16),\r\n      a: 100\r\n    };\r\n  }\r\n}\r\n\r\nfunction _hex3(str) {\r\n  if ('#' === str[0] && 4 === str.length) {\r\n    return {\r\n      r: parseInt(str[1] + str[1], 16),\r\n      g: parseInt(str[2] + str[2], 16),\r\n      b: parseInt(str[3] + str[3], 16),\r\n      a: 100\r\n    };\r\n  }\r\n}\r\n\r\nfunction _hsl(str) {\r\n  if (str.indexOf('hsl(') === 0) {\r\n    str = str.match(/hsl\\(([^)]+)\\)/)[1];\r\n    const parts = str.split(/ *, */);\r\n\r\n    const h = parseInt(parts[0], 10);\r\n    const s = parseInt(parts[1], 10);\r\n    const l = parseInt(parts[2], 10);\r\n\r\n    const rgba = hsl2rgb(h, s, l);\r\n    rgba.a = 100;\r\n\r\n    return rgba;\r\n  }\r\n}\r\n\r\nfunction _hsla(str) {\r\n  if (str.indexOf('hsla(') === 0) {\r\n    str = str.match(/hsla\\(([^)]+)\\)/)[1];\r\n\r\n    const parts = str.split(/ *, */);\r\n    const h = parseInt(parts[0], 10);\r\n    const s = parseInt(parts[1], 10);\r\n    const l = parseInt(parts[2], 10);\r\n    const a = parseInt(parts[3], 10) * 100;\r\n    const rgba = hsl2rgb(h, s, l);\r\n\r\n    rgba.a = a;\r\n\r\n    return rgba;\r\n  }\r\n}"],"sourceRoot":"..\\..\\..\\src"}