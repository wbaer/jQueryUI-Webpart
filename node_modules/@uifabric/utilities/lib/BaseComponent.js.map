{"version":3,"sources":["BaseComponent.ts"],"names":[],"mappings":"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","file":"BaseComponent.js","sourcesContent":["import * as React from 'react';\r\nimport { Async } from './Async';\r\nimport { EventGroup } from './EventGroup';\r\nimport { IDisposable } from './IDisposable';\r\n\r\nexport class BaseComponent<P, S> extends React.Component<P, S> {\r\n  /**\r\n   * External consumers should override BaseComponent.onError to hook into error messages that occur from\r\n   * exceptions thrown from within components.\r\n   */\r\n  public static onError: ((errorMessage?: string, ex?: any) => void);\r\n\r\n  private __async: Async;\r\n  private __events: EventGroup;\r\n  private __disposables: IDisposable[];\r\n  private __resolves: { [name: string]: (ref: any) => any };\r\n\r\n  /**\r\n   * BaseComponent constructor\r\n   * @param {P} props The props for the component.\r\n   * @param {Object} deprecatedProps The map of deprecated prop names to new names, where the key is the old name and the\r\n   * value is the new name. If a prop is removed rather than renamed, leave the value undefined.\r\n   */\r\n  constructor(props?: P, deprecatedProps?: { [propName: string]: string }) {\r\n    super(props);\r\n\r\n    if (deprecatedProps) {\r\n      for (let propName in deprecatedProps) {\r\n        if (propName in props) {\r\n          _warnDeprecation(this, propName, deprecatedProps[propName]);\r\n        }\r\n      }\r\n    }\r\n\r\n    _makeAllSafe(this, BaseComponent.prototype, [\r\n      'componentWillMount',\r\n      'componentDidMount',\r\n      'shouldComponentUpdate',\r\n      'componentWillUpdate',\r\n      'componentWillReceiveProps',\r\n      'render',\r\n      'componentDidUpdate',\r\n      'componentWillUnmount'\r\n    ]);\r\n  }\r\n\r\n  /** If we have disposables, dispose them automatically on unmount. */\r\n  public componentWillUnmount() {\r\n    if (this.__disposables) {\r\n      for (let i = 0, len = this._disposables.length; i < len; i++) {\r\n        let disposable = this.__disposables[i];\r\n\r\n        if (disposable.dispose) {\r\n          disposable.dispose();\r\n        }\r\n      }\r\n      this.__disposables = null;\r\n    }\r\n  }\r\n\r\n  /** Gets the object's class name. */\r\n  public get className() {\r\n    let funcNameRegex = /function (.{1,})\\(/;\r\n    let results = (funcNameRegex).exec((this).constructor.toString());\r\n\r\n    return (results && results.length > 1) ? results[1] : '';\r\n  }\r\n\r\n  /** Allows subclasses to push things to this._disposables to be auto disposed. */\r\n  protected get _disposables(): IDisposable[] {\r\n    if (!this.__disposables) {\r\n      this.__disposables = [];\r\n    }\r\n    return this.__disposables;\r\n  }\r\n\r\n  /**\r\n   * Gets the async instance associated with the component, created on demand. The async instance gives\r\n   * subclasses a way to execute setTimeout/setInterval async calls safely, where the callbacks\r\n   * will be cleared/ignored automatically after unmounting. The helpers within the async object also\r\n   * preserve the this pointer so that you don't need to \"bind\" the callbacks.\r\n   */\r\n  protected get _async(): Async {\r\n    if (!this.__async) {\r\n      this.__async = new Async(this);\r\n      this._disposables.push(this.__async);\r\n    }\r\n\r\n    return this.__async;\r\n  }\r\n\r\n  /**\r\n   * Gets the event group instance assocaited with the component, created on demand. The event instance\r\n   * provides on/off methods for listening to DOM (or regular javascript object) events. The event callbacks\r\n   * will be automatically disconnected after unmounting. The helpers within the events object also\r\n   * preserve the this reference so that you don't need to \"bind\" the callbacks.\r\n   */\r\n  protected get _events(): EventGroup {\r\n    if (!this.__events) {\r\n      this.__events = new EventGroup(this);\r\n      this._disposables.push(this.__events);\r\n    }\r\n\r\n    return this.__events;\r\n  }\r\n\r\n  /**\r\n   * Helper to return a memoized ref resolver function.\r\n   * @params refName Name of the member to assign the ref to.\r\n   *\r\n   * @examples\r\n   * class Foo extends BaseComponent<...> {\r\n   *   private _root: HTMLElement;\r\n   *\r\n   *   public render() {\r\n   *     return <div ref={ this._resolveRef('_root') } />\r\n   *   }\r\n   * }\r\n   */\r\n  protected _resolveRef(refName: string) {\r\n    if (!this.__resolves) {\r\n      this.__resolves = {};\r\n    }\r\n    if (!this.__resolves[refName]) {\r\n      this.__resolves[refName] = (ref) => {\r\n        return this[refName] = ref;\r\n      };\r\n    }\r\n    return this.__resolves[refName];\r\n  }\r\n}\r\n\r\n/**\r\n * Helper to override a given method with a wrapper method that can try/catch the original, but also\r\n * ensures that the BaseComponent's methods are called before the subclass's. This ensures that\r\n * componentWillUnmount in the base is called and that things in the _disposables array are disposed.\r\n */\r\nfunction _makeAllSafe(obj: BaseComponent<any, any>, prototype: Object, methodNames: string[]) {\r\n  for (let i = 0, len = methodNames.length; i < len; i++) {\r\n    _makeSafe(obj, prototype, methodNames[i]);\r\n  }\r\n}\r\n\r\nfunction _makeSafe(obj: BaseComponent<any, any>, prototype: Object, methodName: string) {\r\n  let classMethod = obj[methodName];\r\n  let prototypeMethod = prototype[methodName];\r\n\r\n  if (classMethod || prototypeMethod) {\r\n    obj[methodName] = function () {\r\n      let retVal;\r\n\r\n      try {\r\n        if (prototypeMethod) {\r\n          retVal = prototypeMethod.apply(this, arguments);\r\n        }\r\n        if (classMethod) {\r\n          retVal = classMethod.apply(this, arguments);\r\n        }\r\n      } catch (e) {\r\n        const errorMessage = `Exception in ${obj.className}.${methodName}(): ${typeof e === 'string' ? e : e.stack}`;\r\n\r\n        if (BaseComponent.onError) {\r\n          BaseComponent.onError(errorMessage, e);\r\n        }\r\n      }\r\n\r\n      return retVal;\r\n    };\r\n  }\r\n}\r\n\r\nfunction _warnDeprecation(obj: BaseComponent<any, any>, propertyName: string, newPropertyName: string) {\r\n  if (console && console.warn) {\r\n    let deprecationMessage = `${obj.className} property '${propertyName}' was used but has been deprecated.`;\r\n\r\n    if (newPropertyName) {\r\n      deprecationMessage += ` Use '${newPropertyName}' instead.`;\r\n    }\r\n\r\n    console.warn(deprecationMessage);\r\n  }\r\n}\r\n\r\nBaseComponent.onError = (errorMessage) => {\r\n  console.error(errorMessage);\r\n  throw errorMessage;\r\n};\r\n"],"sourceRoot":"..\\src"}