"use strict";
var chai_1 = require("chai");
var enzyme_1 = require("enzyme");
var React = require("react");
var sp_webpart_base_1 = require("@microsoft/sp-webpart-base");
var CanvasLayout_1 = require("../canvasLayout/CanvasLayout");
var CanvasSectionPart_1 = require("../canvasLayout/CanvasSectionPart");
var CanvasStore_1 = require("../canvasComponent/CanvasStore");
var CanvasControlType_1 = require("../canvasControl/CanvasControlType");
var CanvasA11y_1 = require("../../a11y/CanvasA11y");
var WebPartZone_1 = require("../webPartZone/WebPartZone");
var sp_http_1 = require("@microsoft/sp-http");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var sp_page_context_1 = require("@microsoft/sp-page-context");
describe('CanvasLayout test', function () {
    var rootScope = sp_core_library_1.ServiceScope.startNewRoot();
    rootScope.provide(sp_http_1.SPHttpClient.serviceKey, new sp_http_1.SPHttpClient(rootScope));
    rootScope.provide(sp_page_context_1.PageContext.serviceKey, new sp_page_context_1.PageContext(rootScope));
    rootScope.finish();
    var canvasLayout;
    var canvasControls = [
        {
            controlType: CanvasControlType_1.default.RTE,
            displayMode: sp_core_library_1.DisplayMode.Edit,
            id: 'RTEControl111',
            position: {
                zoneIndex: 1,
                sectionIndex: 1,
                controlIndex: 1
            }
        },
        {
            controlType: CanvasControlType_1.default.RTE,
            displayMode: sp_core_library_1.DisplayMode.Edit,
            id: 'RTEControl211',
            position: {
                zoneIndex: 2,
                sectionIndex: 1,
                controlIndex: 1
            }
        },
        {
            controlType: CanvasControlType_1.default.RTE,
            displayMode: sp_core_library_1.DisplayMode.Edit,
            id: 'RTEControl212',
            position: {
                zoneIndex: 2,
                sectionIndex: 1,
                controlIndex: 2
            }
        },
        {
            controlType: CanvasControlType_1.default.RTE,
            displayMode: sp_core_library_1.DisplayMode.Edit,
            id: 'RTEControl221',
            position: {
                zoneIndex: 2,
                sectionIndex: 2,
                controlIndex: 1
            }
        }
    ];
    beforeEach(function () {
        canvasLayout = new CanvasLayout_1.default(new sp_webpart_base_1.ClientSideWebPartManager({ serviceScope: rootScope }), function () { });
    });
    afterEach(function () {
        canvasLayout.dispose();
    });
    it('validates empty canvas layout', function (done) {
        chai_1.expect(canvasLayout.zones).to.be.eql([]);
        chai_1.expect(canvasLayout.fetchControl(canvasLayout.controlsState.deleteCandidateControlLayout)).to.be.undefined;
        chai_1.expect(canvasLayout.fetchAllControls()).to.be.eql([]);
        chai_1.expect(canvasLayout.isEmpty()).to.be.true;
        done();
    });
    it('validates canvas layout control state information', function (done) {
        chai_1.expect(canvasLayout.controlsState.selectedControlId).to.be.eql(undefined);
        chai_1.expect(canvasLayout.controlsState.hoveredControlId).to.be.eql(undefined);
        chai_1.expect(canvasLayout.controlsState.deletedControlLayout).to.be.eql(CanvasLayout_1.default.undefinedControlPosition);
        chai_1.expect(canvasLayout.controlsState.deleteCandidateControlLayout).to.be.eql(CanvasLayout_1.default.undefinedControlPosition);
        canvasLayout.controlsState.selectedControlId = 'selectedControlId';
        chai_1.expect(canvasLayout.controlsState.selectedControlId).to.be.eql('selectedControlId');
        canvasLayout.controlsState.hoveredControlId = 'hoveredControlId';
        chai_1.expect(canvasLayout.controlsState.hoveredControlId).to.be.eql('hoveredControlId');
        var controlLayout = {
            zoneIndex: 0,
            sectionIndex: 0,
            controlIndex: 0
        };
        canvasLayout.controlsState.deletedControlLayout = controlLayout;
        chai_1.expect(canvasLayout.controlsState.deletedControlLayout).to.be.eql(controlLayout);
        canvasLayout.controlsState.deleteCandidateControlLayout = controlLayout;
        chai_1.expect(canvasLayout.controlsState.deleteCandidateControlLayout).to.be.eql(controlLayout);
        done();
    });
    it('validates adding control with and without layout defined', function (done) {
        var controls = [
            {
                controlType: CanvasControlType_1.default.RTE,
                displayMode: sp_core_library_1.DisplayMode.Edit,
                id: 'RTEControlNoLayout'
            },
            {
                controlType: CanvasControlType_1.default.RTE,
                displayMode: sp_core_library_1.DisplayMode.Edit,
                id: 'RTEControlWithLayout',
                position: {
                    zoneIndex: 1,
                    sectionIndex: 1,
                    controlIndex: 1
                }
            }
        ];
        canvasLayout.addControl(controls[0]);
        chai_1.expect(canvasLayout.isEmpty()).to.be.true;
        canvasLayout.addControl(controls[1]);
        chai_1.expect(canvasLayout.isEmpty()).to.be.false;
        done();
    });
    it('validates adding and fetching controls', function (done) {
        var controlId = canvasLayout.addControl(canvasControls[0]);
        chai_1.expect(controlId).to.be.eql(canvasControls[0].id);
        controlId = canvasLayout.addControl(canvasControls[2]);
        chai_1.expect(controlId).to.be.eql(canvasControls[2].id);
        controlId = canvasLayout.addControl(canvasControls[1]);
        chai_1.expect(controlId).to.be.eql(canvasControls[1].id);
        controlId = canvasLayout.addControl(canvasControls[3]);
        chai_1.expect(controlId).to.be.eql(canvasControls[3].id);
        chai_1.expect(canvasLayout.fetchAllControls().length).to.be.eql(canvasControls.length);
        chai_1.expect(canvasLayout.fetchControl(undefined)).to.be.undefined;
        var invalidLayout = {
            zoneIndex: 2,
            sectionIndex: 1,
            controlIndex: 3
        };
        chai_1.expect(canvasLayout.fetchControl(invalidLayout)).to.be.undefined;
        chai_1.expect(canvasLayout.fetchControl(canvasControls[0].position)).to.be.eql(canvasControls[0]);
        chai_1.expect(canvasLayout.fetchControl(canvasControls[1].position)).to.be.eql(canvasControls[1]);
        chai_1.expect(canvasLayout.fetchControl(canvasControls[2].position)).to.be.eql(canvasControls[2]);
        chai_1.expect(canvasLayout.fetchControl(canvasControls[3].position)).to.be.eql(canvasControls[3]);
        var allControls = canvasLayout.fetchAllControls();
        chai_1.expect(allControls[0]).to.be.eql(canvasControls[0]);
        chai_1.expect(allControls[1]).to.be.eql(canvasControls[1]);
        chai_1.expect(allControls[2]).to.be.eql(canvasControls[2]);
        chai_1.expect(allControls[3]).to.be.eql(canvasControls[3]);
        done();
    });
    it('validates removing controls', function (done) {
        canvasLayout.addControl(canvasControls[0]);
        canvasLayout.addControl(canvasControls[1]);
        canvasLayout.addControl(canvasControls[2]);
        canvasLayout.addControl(canvasControls[3]);
        var invalidLayout = {
            zoneIndex: 2,
            sectionIndex: 1,
            controlIndex: 3
        };
        var controlId = canvasLayout.removeControl(invalidLayout);
        chai_1.expect(controlId).to.be.undefined;
        chai_1.expect(canvasLayout.fetchAllControls().length).to.be.eql(canvasControls.length);
        controlId = canvasLayout.removeControl(canvasControls[0].position);
        chai_1.expect(controlId).to.be.eql(canvasControls[0].id);
        chai_1.expect(canvasLayout.fetchControl(canvasControls[0].position)).to.be.eql(undefined);
        controlId = canvasLayout.removeControl(canvasControls[1].position);
        chai_1.expect(controlId).to.be.eql(canvasControls[1].id);
        controlId = canvasLayout.removeControl(canvasControls[2].position);
        chai_1.expect(controlId).to.be.eql(canvasControls[2].id);
        controlId = canvasLayout.removeControl(canvasControls[3].position);
        chai_1.expect(controlId).to.be.eql(canvasControls[3].id);
        chai_1.expect(canvasLayout.fetchAllControls().length).to.be.eql(0);
        canvasLayout.addControl(canvasControls[3]);
        chai_1.expect(canvasLayout.fetchAllControls().length).to.be.eql(1);
        done();
    });
    it('validates adding a new zone in front and middle', function (done) {
        canvasLayout.addControl(canvasControls[0]);
        var zone0 = {
            controlType: CanvasControlType_1.default.RTE,
            displayMode: sp_core_library_1.DisplayMode.Edit,
            id: 'RTEControl0',
            position: {
                zoneIndex: 1,
                sectionIndex: undefined,
                controlIndex: undefined
            }
        };
        canvasLayout.addControl(zone0);
        chai_1.expect(canvasLayout.fetchAllControls().length).to.be.eql(2);
        chai_1.expect(canvasLayout.fetchAllControls()[0]).to.be.eql(zone0);
        var ctrl0 = canvasLayout.fetchControl(zone0.position);
        chai_1.expect(ctrl0).to.be.eql(zone0);
        chai_1.expect(ctrl0.position.zoneIndex).to.be.eql(0.5);
        chai_1.expect(ctrl0.position.sectionIndex).to.be.eql(1);
        chai_1.expect(ctrl0.position.controlIndex).to.be.eql(1);
        var zone1 = {
            controlType: CanvasControlType_1.default.RTE,
            displayMode: sp_core_library_1.DisplayMode.Edit,
            id: 'RTEControl',
            position: {
                zoneIndex: 1,
                sectionIndex: undefined,
                controlIndex: undefined
            }
        };
        canvasLayout.addControl(zone1);
        chai_1.expect(canvasLayout.fetchAllControls().length).to.be.eql(3);
        chai_1.expect(canvasLayout.fetchAllControls()[1]).to.be.eql(zone1);
        var ctrl1 = canvasLayout.fetchControl(zone1.position);
        chai_1.expect(ctrl1).to.be.eql(zone1);
        chai_1.expect(ctrl1.position.zoneIndex).to.be.eql(0.75);
        chai_1.expect(ctrl1.position.sectionIndex).to.be.eql(1);
        chai_1.expect(ctrl1.position.controlIndex).to.be.eql(1);
        canvasLayout.removeControl(zone0.position);
        chai_1.expect(canvasLayout.fetchAllControls()[0]).to.be.eql(zone1);
        done();
    });
    it('validates adding a new section in front and middle', function (done) {
        canvasLayout.addControl(canvasControls[0]);
        var section11 = {
            controlType: CanvasControlType_1.default.RTE,
            displayMode: sp_core_library_1.DisplayMode.Edit,
            id: 'RTEControl0',
            position: {
                zoneIndex: 1,
                sectionIndex: 1,
                controlIndex: undefined
            }
        };
        canvasLayout.addControl(section11);
        chai_1.expect(canvasLayout.fetchAllControls().length).to.be.eql(2);
        chai_1.expect(canvasLayout.fetchAllControls()[0]).to.be.eql(section11);
        var ctrl1 = canvasLayout.fetchControl(section11.position);
        chai_1.expect(ctrl1).to.be.eql(section11);
        chai_1.expect(ctrl1.position.zoneIndex).to.be.eql(1);
        chai_1.expect(ctrl1.position.sectionIndex).to.be.eql(0.5);
        chai_1.expect(ctrl1.position.controlIndex).to.be.eql(1);
        var section12 = {
            controlType: CanvasControlType_1.default.RTE,
            displayMode: sp_core_library_1.DisplayMode.Edit,
            id: 'RTEControl',
            position: {
                zoneIndex: 1,
                sectionIndex: 1,
                controlIndex: undefined
            }
        };
        canvasLayout.addControl(section12);
        chai_1.expect(canvasLayout.fetchAllControls().length).to.be.eql(3);
        chai_1.expect(canvasLayout.fetchAllControls()[1]).to.be.eql(section12);
        var ctrl2 = canvasLayout.fetchControl(section12.position);
        chai_1.expect(ctrl2).to.be.eql(section12);
        chai_1.expect(ctrl2.position.zoneIndex).to.be.eql(1);
        chai_1.expect(ctrl2.position.sectionIndex).to.be.eql(0.75);
        chai_1.expect(ctrl2.position.controlIndex).to.be.eql(1);
        canvasLayout.removeControl(section11.position);
        chai_1.expect(canvasLayout.fetchAllControls()[0].id).to.be.eql(CanvasSectionPart_1.default.emptySectionId);
        done();
    });
    it('validates adding a new control in front', function (done) {
        canvasLayout.addControl(canvasControls[0]);
        var control111 = {
            controlType: CanvasControlType_1.default.RTE,
            displayMode: sp_core_library_1.DisplayMode.Edit,
            id: 'RTEControl0',
            position: {
                zoneIndex: 1,
                sectionIndex: 1,
                controlIndex: 1
            }
        };
        canvasLayout.addControl(control111);
        chai_1.expect(canvasLayout.fetchAllControls().length).to.be.eql(2);
        chai_1.expect(canvasLayout.fetchAllControls()[0]).to.be.eql(control111);
        var ctrl1 = canvasLayout.fetchControl(control111.position);
        chai_1.expect(ctrl1).to.be.eql(control111);
        chai_1.expect(ctrl1.position.zoneIndex).to.be.eql(1);
        chai_1.expect(ctrl1.position.sectionIndex).to.be.eql(1);
        chai_1.expect(ctrl1.position.controlIndex).to.be.eql(0.5);
        var control112 = {
            controlType: CanvasControlType_1.default.RTE,
            displayMode: sp_core_library_1.DisplayMode.Edit,
            id: 'RTEControl0',
            position: {
                zoneIndex: 1,
                sectionIndex: 1,
                controlIndex: 1
            }
        };
        canvasLayout.addControl(control112);
        chai_1.expect(canvasLayout.fetchAllControls().length).to.be.eql(3);
        chai_1.expect(canvasLayout.fetchAllControls()[1]).to.be.eql(control112);
        var ctrl2 = canvasLayout.fetchControl(control112.position);
        chai_1.expect(ctrl2).to.be.eql(control112);
        chai_1.expect(ctrl2.position.zoneIndex).to.be.eql(1);
        chai_1.expect(ctrl2.position.sectionIndex).to.be.eql(1);
        chai_1.expect(ctrl2.position.controlIndex).to.be.eql(0.75);
        canvasLayout.removeControl(control111.position);
        chai_1.expect(canvasLayout.fetchAllControls()[0]).to.be.eql(control112);
        done();
    });
    it('validates control component map', function (done) {
        var canvasStore = new CanvasStore_1.default(rootScope, sinon.spy(), sp_core_library_1.DisplayMode.Edit, '', sinon.spy());
        canvasStore.a11yManager =
            new CanvasA11y_1.CanvasA11yManager(document.createElement('div'), true);
        var context = { store: canvasStore };
        var webPartManifest = {
            manifestVersion: undefined,
            componentType: 'WebPart',
            id: 'WebPartZoneControl',
            alias: '',
            version: undefined,
            loaderConfig: undefined,
            preconfiguredEntries: undefined
        };
        var canvasControl = {
            webPartData: undefined,
            webPartId: 'WebPartZoneControl',
            webPartManifest: webPartManifest,
            controlType: CanvasControlType_1.default.WebPartZone,
            displayMode: sp_core_library_1.DisplayMode.Edit,
            id: 'WebPartZoneControl',
            onChange: sinon.spy(),
            position: {
                zoneIndex: 1,
                sectionIndex: 1,
                controlIndex: 1
            }
        };
        var canvasControlElement = enzyme_1.mount(React.createElement(WebPartZone_1.default, canvasControl), { context: context });
        canvasControlElement.setContext(context);
        var canvasControlComponent = canvasControlElement.instance();
        chai_1.expect(canvasLayout.fetchControlPositionById(undefined)).to.be.eql(CanvasLayout_1.default.undefinedControlPosition);
        canvasLayout.addControl(canvasControl);
        chai_1.expect(canvasLayout.fetchControlComponentById(canvasControl.id)).to.be.undefined;
        chai_1.expect(canvasLayout.fetchControlPositionById(canvasControl.id)).to.be.eql(canvasControl.position);
        canvasLayout.addControlComponent(canvasControl.id, canvasControlComponent);
        chai_1.expect(canvasLayout.fetchControlComponentById(canvasControl.id)).to.be.eql(canvasControlComponent);
        chai_1.expect(canvasLayout.fetchControlPositionById(canvasControl.id)).to.be.eql(canvasControl.position);
        canvasControlElement.unmount();
        done();
    });
    it('validates ICanvasLayout functionalities', function (done) {
        canvasLayout.addControl(canvasControls[0]);
        canvasLayout.addControl(canvasControls[1]);
        canvasLayout.addControl(canvasControls[2]);
        canvasLayout.addControl(canvasControls[3]);
        chai_1.expect(canvasLayout.zones.length).to.be.eql(2);
        var zone1 = canvasLayout.zones[0];
        chai_1.expect(zone1.index).to.be.eql(1);
        var sectionsInZone1 = zone1.sections;
        chai_1.expect(sectionsInZone1.length).to.be.eql(1);
        chai_1.expect(sectionsInZone1[0].index).to.be.eql(1);
        var controlsInSections11 = sectionsInZone1[0].controls;
        chai_1.expect(controlsInSections11.length).to.be.eql(1);
        var zone2 = canvasLayout.zones[1];
        chai_1.expect(zone2.index).to.be.eql(2);
        var sectionsInZone2 = zone2.sections;
        chai_1.expect(sectionsInZone2.length).to.be.eql(2);
        chai_1.expect(sectionsInZone2[0].index).to.be.eql(1);
        chai_1.expect(sectionsInZone2[1].index).to.be.eql(2);
        var controlsInSection21 = sectionsInZone2[0].controls;
        chai_1.expect(controlsInSection21.length).to.be.eql(2);
        chai_1.expect(controlsInSection21[0].position.controlIndex).to.be.eql(1);
        chai_1.expect(controlsInSection21[1].position.controlIndex).to.be.eql(2);
        var controlsInSection22 = sectionsInZone2[1].controls;
        chai_1.expect(controlsInSection22.length).to.be.eql(1);
        chai_1.expect(controlsInSection22[0].position.controlIndex).to.be.eql(1);
        done();
    });
});
