{"version":3,"sources":["writeManifests/cumulativeManifest/manifestsFile.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAGH,yBAA2B;AAE3B,IAAM,cAAc,GAAmC,OAAO,CAAC,YAAY,CAAC,CAAC;AAE7E;;;;GAIG;AACH;IACE,uBAAuB;IACvB,IAAM,SAAS,GAAmC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;IAC7F,SAAS,CAAC,OAAO,CAAC,UAAC,QAAsC;QACvD,IAAM,QAAQ,GAAa,QAAQ,CAAC,YAAY,CAAC,sBAAsB,CAAC;QACxE,IAAM,OAAO,GAAY,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAEhD,IAAM,OAAO,GAAY,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC/D,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACpC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAE5B,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AAfD,sDAeC;AAED;;GAEG;AACH;IACE,MAAM,CAAC,cAAc,CAAC;AACxB,CAAC;AAFD,oCAEC","file":"writeManifests/cumulativeManifest/manifestsFile.js","sourcesContent":["/**\r\n * @copyright Microsoft Corporation. All rights reserved.\r\n *\r\n * @file manifestsFile.ts\r\n */\r\n\r\nimport { IClientSideComponentManifest } from '@microsoft/sp-module-interfaces';\r\nimport * as url from 'url';\r\n\r\nconst manifestsArray: IClientSideComponentManifest[] = require('manifests!');\r\n\r\n/**\r\n * Get the manifest array with each of the base URLs rewritten to point to the local\r\n *  page's protocol, hostname, and port. This function is useful for automated tests\r\n *  that run locally and use an unpredictable port.\r\n */\r\nexport function getLocalPageManifests(): IClientSideComponentManifest[] {\r\n  // Clone manifestsArray\r\n  const manifests: IClientSideComponentManifest[] = JSON.parse(JSON.stringify(manifestsArray));\r\n  manifests.forEach((manifest: IClientSideComponentManifest): void => {\r\n    const baseUrls: string[] = manifest.loaderConfig.internalModuleBaseUrls;\r\n    const baseUrl: url.Url = url.parse(baseUrls[0]);\r\n\r\n    const pageUrl: url.Url = url.parse(window.location.toString());\r\n    baseUrl.protocol = pageUrl.protocol;\r\n    baseUrl.host = pageUrl.host;\r\n\r\n    baseUrls[0] = url.format(baseUrl);\r\n  });\r\n\r\n  return manifests;\r\n}\r\n\r\n/**\r\n * Get the manifest array.\r\n */\r\nexport function getManifests(): IClientSideComponentManifest[] {\r\n  return manifestsArray;\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}