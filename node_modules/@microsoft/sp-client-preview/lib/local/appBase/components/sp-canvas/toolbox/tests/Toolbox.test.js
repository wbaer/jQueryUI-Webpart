"use strict";
var chai_1 = require("chai");
var enzyme_1 = require("enzyme");
var React = require("react");
var Toolbox_1 = require("../toolbox/Toolbox");
var MockToolboxItemProps_1 = require("../mocks/MockToolboxItemProps");
var ToolboxItem_1 = require("../toolboxItem/ToolboxItem");
var ToolboxGroup_1 = require("../toolboxGroup/ToolboxGroup");
var office_ui_fabric_react_1 = require("office-ui-fabric-react");
var FEATURED_ITEM_IDS = [
    'd1d91016-032f-456d-98a4-721247c305e8_0',
    'b7dd04e1-19ce-4b24-9132-b60a1c2b910d_0',
    '275c0095-a77e-4f6d-a2a0-6a7626911518_0',
    '490d7c76-1824-45b2-9de3-676421c997fa_0',
    'daf0b71c-6de8-4ef7-b511-faae7c388708_0' 
];
var CanvasStore_1 = require("../../canvas/canvasComponent/CanvasStore");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var sp_page_context_1 = require("@microsoft/sp-page-context");
var sp_http_1 = require("@microsoft/sp-http");
describe('Toolbox tests', function () {
    var toolboxElement;
    var mockProps;
    var onItemClick;
    var mockToolboxItemProps;
    var mockToolboxItems = [];
    var rootScope = sp_core_library_1.ServiceScope.startNewRoot();
    rootScope.provide(sp_http_1.SPHttpClient.serviceKey, new sp_http_1.SPHttpClient(rootScope));
    rootScope.provide(sp_page_context_1.PageContext.serviceKey, new sp_page_context_1.PageContext(rootScope));
    rootScope.finish();
    var canvasStore;
    var render;
    beforeEach(function () {
        onItemClick = sinon.spy();
        render = sinon.spy();
        mockToolboxItemProps = MockToolboxItemProps_1.default.getToolboxItemProps(7);
        mockToolboxItems = [];
        for (var ct = 0; ct < 7; ct++) {
            mockToolboxItems.push(mockToolboxItemProps[ct]);
        }
        canvasStore =
            new CanvasStore_1.default(rootScope, render, sp_core_library_1.DisplayMode.Edit);
        mockProps = {
            isLoading: false,
            isOpen: true,
            onItemClick: onItemClick,
            row: 0,
            toolboxItems: mockToolboxItems,
            verticalPosition: 0,
            errorMessage: 'Toolbox failed to load'
        };
        var context = { store: canvasStore };
        toolboxElement = enzyme_1.mount(React.createElement(Toolbox_1.default, mockProps), { context: context });
        toolboxElement.setContext(context);
    });
    afterEach(function () {
        toolboxElement.unmount();
    });
    it('calls componentDidMount after mounting', function (done) {
        var spy = sinon.spy(Toolbox_1.default.prototype, 'componentDidMount');
        toolboxElement = enzyme_1.mount(React.createElement(Toolbox_1.default, mockProps));
        chai_1.assert(spy.calledOnce);
        done();
    });
    it('renders the toolbox items as expected', function (done) {
        chai_1.expect(toolboxElement.find(ToolboxItem_1.default).length).to.be.eq(8);
        done();
    });
    it('renders the RTE toolbox item as expected', function (done) {
        chai_1.expect(toolboxElement.find("[data-automation-id='RTE']").length).to.be.eq(1);
        done();
    });
    it('should call the onclick on RTE as expected', function (done) {
        toolboxElement.find("[data-automation-id='RTE']").simulate('click');
        chai_1.expect(onItemClick.calledOnce);
        done();
    });
    it('renders the toolbox groups as expected', function (done) {
        chai_1.expect(toolboxElement.find(ToolboxGroup_1.default).length).to.be.eq(2);
        done();
    });
    it('should render the focus zone as expected', function (done) {
        chai_1.expect(toolboxElement.find(office_ui_fabric_react_1.FocusZone).length).to.be.eq(1);
        done();
    });
    it('renders the Image web part toolbox item as expected and calls onclick', function (done) {
        testFeaturedWebPartItem(FEATURED_ITEM_IDS[0]);
        done();
    });
    it('renders the Document embed web part toolbox item as expected and calls onclick', function (done) {
        testFeaturedWebPartItem(FEATURED_ITEM_IDS[1]);
        done();
    });
    it('renders the Office 365 web part toolbox item as expected and calls onclick', function (done) {
        testFeaturedWebPartItem(FEATURED_ITEM_IDS[2]);
        done();
    });
    it('renders the Embed web part toolbox item as expected and calls onclick', function (done) {
        testFeaturedWebPartItem(FEATURED_ITEM_IDS[3]);
        done();
    });
    it('renders the highlighted web part toolbox item as expected and calls onclick', function (done) {
        testFeaturedWebPartItem(FEATURED_ITEM_IDS[4]);
        done();
    });
    it('renders the non featured web parts as expected', function (done) {
        chai_1.expect(toolboxElement.find("[data-automation-id='00000000-0000-0000-0000-000000000000']").length).to.be.eq(2);
        done();
    });
    function testFeaturedWebPartItem(id) {
        chai_1.expect(toolboxElement.find("[data-automation-id='" + id + "']").length).to.be.eq(1);
        toolboxElement.find("[data-automation-id='" + id + "']").simulate('click');
        chai_1.expect(onItemClick.calledOnce).to.be.true;
    }
});
