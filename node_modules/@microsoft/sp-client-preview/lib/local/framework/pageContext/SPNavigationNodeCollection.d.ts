import PageContext from './AppPageContext';
import PageContextItem from './PageContextItem';
import SPNavigationNode, { ISPNavigationNodeArgs } from './SPNavigationNode';
import { IODataNavigationNode } from '@microsoft/sp-odata-types';
import IOdataContext from './IOdataContext';
/**
  * This interface is used with SPNavigationNodeCollection.load()
  *
  * @alpha
  */
export interface ISPNavigationNodeCollectionArgs {
    items: ISPNavigationNodeArgs[];
}
/**
 * @deprecated Use the updated definitions from \@microsoft/sp-page-context instead.
 *
 * @alpha
 */
export default class SPNavigationNodeCollection extends PageContextItem implements IOdataContext<IODataNavigationNode[]> {
    private _items;
    private _odataObject;
    constructor(pageContext: PageContext);
    /**
     * Returns all navigation nodes in the collection.
     */
    /**
     * Returns all navigation nodes in the collection.
     */
    items: SPNavigationNode[];
    /**
     * Returns an ODATA object containing additional navigation information if available.
     * Otherwise, this returns undefined.  If your application fetches this
     * data itself, it can call updateOdataObject() to update the context.
     */
    getOdataObject(): IODataNavigationNode[];
    /**
     * Updates the ODATA object that will be returned when getOdataObject() is called.
     * This allows the application to share its data with other objects (e.g. web parts)
     * to avoid unnecessary REST calls.
     */
    updateOdataObject(value: IODataNavigationNode[]): void;
}
