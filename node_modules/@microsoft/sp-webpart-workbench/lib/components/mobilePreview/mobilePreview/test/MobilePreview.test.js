"use strict";
var chai_1 = require("chai");
var React = require("react");
var enzyme_1 = require("enzyme");
var MobilePreview_1 = require("../MobilePreview");
var MobilePreviewClickStopBar_1 = require("../../mobilePreviewClickStopBar/MobilePreviewClickStopBar");
var MobilePreviewDeviceView_1 = require("../../mobilePreviewDeviceView/MobilePreviewDeviceView");
var MobilePreviewRotate_1 = require("../../mobilePreviewRotate/MobilePreviewRotate");
var MobilePreviewHeaderBar_1 = require("../../mobilePreviewHeaderBar/MobilePreviewHeaderBar");
var MobilePreviewDimensionInput_1 = require("../../mobilePreviewDimensionInput/MobilePreviewDimensionInput");
describe('Mobile preview creation MPFile', function () {
    var mobilePreview;
    describe('Basic test', function () {
        it('should exist', function () {
            chai_1.expect(MobilePreview_1.default).to.exist;
        });
    });
    describe('Check if components exist', function () {
        beforeEach(function () {
            mobilePreview = enzyme_1.mount(React.createElement(MobilePreview_1.default, { deviceType: MobilePreview_1.DeviceType.Phone }));
        });
        afterEach(function () {
            mobilePreview.unmount();
        });
        it('Renders the right components', function () {
            chai_1.assert.equal(mobilePreview.find(MobilePreviewClickStopBar_1.default).length, 1, 'contains clickstop bar');
            chai_1.assert.equal(mobilePreview.find(MobilePreviewHeaderBar_1.default).length, 1, 'contains header bar');
            chai_1.assert.equal(mobilePreview.find(MobilePreviewDeviceView_1.default).length, 1, 'contains device view');
            chai_1.assert.equal(mobilePreview.find(MobilePreviewDimensionInput_1.default).length, 1, 'contains dimension input');
            chai_1.assert.equal(mobilePreview.find(MobilePreviewRotate_1.default).length, 1, 'contains rotate button');
        });
    });
    describe('Check that default values are set properly if no props are set', function () {
        beforeEach(function () {
            mobilePreview = enzyme_1.mount(React.createElement(MobilePreview_1.default));
        });
        afterEach(function () {
            mobilePreview.unmount();
        });
        it('sets deviceType to Mobile', function () {
            chai_1.assert.equal(mobilePreview.state('deviceType'), MobilePreview_1.DeviceType.Phone);
        });
        it('finds some devices to use', function () {
            chai_1.assert.isNotNull(mobilePreview.state('currentDevice'));
        });
        it('sets the orientation to portrait', function () {
            chai_1.assert.equal(mobilePreview.state('currentOrientation'), MobilePreview_1.DeviceOrientation.Portrait);
        });
    });
});
