import PageContext from './AppPageContext';
import PageContextItem from './PageContextItem';
import IOdataUser from '../httpClient/odataTypes/IOdataUser';
import IOdataContext from './IOdataContext';
/**
  * This interface is used with SPUser.load()
  *
  * @alpha
  */
export interface ISPUserArgs {
    id: number;
}
/**
 * @deprecated Use the updated definitions from \@microsoft/sp-page-context instead.
 *
 * @alpha
 */
export default class SPUser extends PageContextItem implements IOdataContext<IOdataUser> {
    private _id;
    private _odataObject;
    constructor(pageContext: PageContext);
    /**
     * Assigns all properties of the object, then assigns the "state" property
     * to PageContextItemState.Ready.
     */
    load(args: ISPUserArgs): void;
    /**
     * The ID that identifies the SPUser on the server.
     */
    readonly id: number;
    /**
     * Returns an ODATA object containing additional information for this user, if available.
     * Otherwise, this returns undefined.  If your application fetches this data itself, it
     * can call updateOdataObject() to update the context.
     */
    getOdataObject(): IOdataUser;
    /**
     * Updates the ODATA object that will be returned when getOdataObject() is called.
     * This allows the application to share its data with other objects (e.g. web parts)
     * to avoid unnecessary REST calls.
     */
    updateOdataObject(value: IOdataUser): void;
}
