export interface IIdentifier {
    /**
     * Export the base package.
     */
    exportPackage?: boolean;
    /**
     * A map of exports on the base package to the names to re-export.
     */
    exportMap?: {
        [identifier: string]: string;
    };
    /**
     * The name of a single export from the base package. This option is mutually exclusive to the others.
     */
    export?: string;
}
declare abstract class LoaderBase {
    getWebpackLoader(): (content: string) => string;
    protected readonly abstract filename: string;
    protected readonly abstract packageFriendlyName: string;
    protected readonly abstract packageName: string;
    protected abstract getIdentifier(path: string): IIdentifier;
    protected readonly shouldExportBasePackage: boolean;
    protected readonly externalPackageName: string;
    private _processRequest(request, context);
    private _getPassthroughLines(requestSections);
}
export default LoaderBase;
