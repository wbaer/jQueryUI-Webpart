import TaskError from './TaskError';
export declare enum ErrorDetectionMode {
    LocalBuild = 1,
    VisualStudio = 2,
    VisualStudioOnline = 3,
}
export interface IErrorDetectionRule {
    (line: string): TaskError;
}
/**
 * Creates an Error Detection Rule based on a regex and a function which converts a regex match to a TaskError
 */
export declare function RegexErrorDetector(regex: RegExp, getError: (match: RegExpExecArray) => TaskError): IErrorDetectionRule;
/**
 * The error detector will find all errors in a chunk of text by running a number
 * of error detection rules against each line of text.
 * @todo #168353: add unit tests for the ErrorDetector & for each individual rule in rules/
 */
export default class ErrorDetector {
    private _rules;
    constructor(rules: IErrorDetectionRule[]);
    execute(data: string): TaskError[];
    private _checkLine(line);
}
