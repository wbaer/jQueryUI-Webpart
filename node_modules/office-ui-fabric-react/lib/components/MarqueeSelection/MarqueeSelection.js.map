{"version":3,"sources":["components/MarqueeSelection/MarqueeSelection.tsx"],"names":[],"mappings":"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","file":"components/MarqueeSelection/MarqueeSelection.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  AutoScroll,\r\n  BaseComponent,\r\n  IPoint,\r\n  IRectangle,\r\n  autobind,\r\n  css,\r\n  findScrollableParent,\r\n  getDistanceBetweenPoints,\r\n  getRTL\r\n} from '../../Utilities';\r\nimport { IMarqueeSelectionProps } from './MarqueeSelection.Props';\r\nimport './MarqueeSelection.scss';\r\n\r\nexport interface IMarqueeSelectionState {\r\n  dragOrigin?: IPoint;\r\n  dragRect?: IRectangle;\r\n}\r\n\r\n// We want to make the marquee selection start when the user drags a minimum distance. Otherwise we'd start\r\n// the drag even if they just click an item without moving.\r\nconst MIN_DRAG_DISTANCE = 5;\r\n\r\n/**\r\n * MarqueeSelection component abstracts managing a draggable rectangle which sets items selected/not selected.\r\n * Elements which have data-selectable-index attributes are queried and measured once to determine if they\r\n * fall within the bounds of the rectangle. The measure is memoized during the drag as a performance optimization\r\n * so if the items change sizes while dragging, that could cause incorrect results.\r\n */\r\nexport class MarqueeSelection extends BaseComponent<IMarqueeSelectionProps, IMarqueeSelectionState> {\r\n  public static defaultProps = {\r\n    rootTagName: 'div',\r\n    rootProps: {},\r\n    isEnabled: true\r\n  };\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    root: HTMLElement;\r\n  };\r\n\r\n  private _dragOrigin: IPoint;\r\n  private _rootRect: IRectangle;\r\n  private _lastMouseEvent: MouseEvent;\r\n  private _autoScroll: AutoScroll;\r\n  private _selectedIndicies: { [key: string]: boolean };\r\n  private _itemRectCache: { [key: string]: IRectangle };\r\n  private _scrollableParent: HTMLElement;\r\n  private _scrollableSurface: HTMLElement;\r\n  private _scrollTop: number;\r\n\r\n  constructor(props: IMarqueeSelectionProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dragRect: undefined\r\n    };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this._scrollableParent = findScrollableParent(this.refs.root);\r\n    this._scrollableSurface = this._scrollableParent === window as any ? document.body : this._scrollableParent;\r\n    // When scroll events come from window, we need to read scrollTop values from the body.\r\n\r\n    this._events.on(\r\n      this.props.isDraggingConstrainedToRoot ? this.refs.root : this._scrollableSurface,\r\n      'mousedown',\r\n      this._onMouseDown);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this._autoScroll) {\r\n      this._autoScroll.dispose();\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    let { rootProps, children } = this.props;\r\n    let { dragRect } = this.state;\r\n\r\n    return (\r\n      <div\r\n        { ...rootProps }\r\n        className={ css('ms-MarqueeSelection', rootProps.className) }\r\n        ref='root'\r\n        >\r\n        { children }\r\n        { dragRect && (<div className='ms-MarqueeSelection-dragMask' />) }\r\n        { dragRect && (\r\n          <div className='ms-MarqueeSelection-box' style={ dragRect }>\r\n            <div className='ms-MarqueeSelection-boxFill' />\r\n          </div>\r\n        ) }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /** Determine if the mouse event occured on a scrollbar of the target element. */\r\n  private _isMouseEventOnScrollbar(ev: MouseEvent) {\r\n    let targetElement = ev.target as HTMLElement;\r\n    let targetScrollbarWidth = (targetElement.offsetWidth - targetElement.clientWidth);\r\n\r\n    if (targetScrollbarWidth) {\r\n      let targetRect = targetElement.getBoundingClientRect();\r\n\r\n      // Check vertical scroll\r\n      if (getRTL()) {\r\n        if (ev.clientX < (targetRect.left + targetScrollbarWidth)) {\r\n          return true;\r\n        }\r\n      } else {\r\n        if (ev.clientX > (targetRect.left + targetElement.clientWidth)) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      // Check horizontal scroll\r\n      if (ev.clientY > (targetRect.top + targetElement.clientHeight)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  @autobind\r\n  private _onMouseDown(ev: MouseEvent) {\r\n    let { isEnabled, onShouldStartSelection } = this.props;\r\n\r\n    // Ensure the mousedown is within the boundaries of the target. If not, it may have been a click on a scrollbar.\r\n    if (this._isMouseEventOnScrollbar(ev)) {\r\n      return;\r\n    }\r\n\r\n    if (isEnabled && (!onShouldStartSelection || onShouldStartSelection(ev))) {\r\n      if (this._scrollableSurface && ev.button === 0) {\r\n        this._selectedIndicies = {};\r\n        this._events.on(window, 'mousemove', this._onMouseMove);\r\n        this._events.on(this._scrollableParent, 'scroll', this._onMouseMove);\r\n        this._events.on(window, 'click', this._onMouseUp, true);\r\n\r\n        this._autoScroll = new AutoScroll(this.refs.root);\r\n        this._scrollTop = this._scrollableSurface.scrollTop;\r\n        this._rootRect = this.refs.root.getBoundingClientRect();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _getRootRect(): IRectangle {\r\n    return {\r\n      left: this._rootRect.left,\r\n      top: this._rootRect.top + (this._scrollTop - this._scrollableSurface.scrollTop),\r\n      width: this._rootRect.width,\r\n      height: this._rootRect.height\r\n    };\r\n  }\r\n\r\n  private _onMouseMove(ev: MouseEvent) {\r\n    if (ev.clientX !== undefined) {\r\n      this._lastMouseEvent = ev;\r\n    }\r\n\r\n    let rootRect = this._getRootRect();\r\n    let currentPoint = { x: ev.clientX - rootRect.left, y: ev.clientY - rootRect.top };\r\n\r\n    if (!this._dragOrigin) {\r\n      this._dragOrigin = currentPoint;\r\n    }\r\n\r\n    if (ev.buttons !== undefined && ev.buttons === 0) {\r\n      this._onMouseUp(ev);\r\n    } else {\r\n      if (this.state.dragRect || getDistanceBetweenPoints(this._dragOrigin, currentPoint) > MIN_DRAG_DISTANCE) {\r\n        // We need to constrain the current point to the rootRect boundaries.\r\n        let constrainedPoint = this.props.isDraggingConstrainedToRoot ? {\r\n          x: Math.max(0, Math.min(rootRect.width, this._lastMouseEvent.clientX - rootRect.left)),\r\n          y: Math.max(0, Math.min(rootRect.height, this._lastMouseEvent.clientY - rootRect.top))\r\n        } : {\r\n            x: this._lastMouseEvent.clientX - rootRect.left,\r\n            y: this._lastMouseEvent.clientY - rootRect.top\r\n          };\r\n\r\n        let dragRect = {\r\n          left: Math.min(this._dragOrigin.x, constrainedPoint.x),\r\n          top: Math.min(this._dragOrigin.y, constrainedPoint.y),\r\n          width: Math.abs(constrainedPoint.x - this._dragOrigin.x),\r\n          height: Math.abs(constrainedPoint.y - this._dragOrigin.y)\r\n        };\r\n\r\n        this.setState({ dragRect });\r\n        this._evaluateSelection(dragRect);\r\n      }\r\n    }\r\n\r\n    ev.stopPropagation();\r\n    ev.preventDefault();\r\n\r\n    return false;\r\n  }\r\n\r\n  private _onMouseUp(ev: MouseEvent) {\r\n\r\n    this._events.off(window);\r\n    this._events.off(this._scrollableParent, 'scroll');\r\n\r\n    this._autoScroll.dispose();\r\n    this._autoScroll = this._dragOrigin = this._lastMouseEvent = this._selectedIndicies = this._itemRectCache = undefined;\r\n\r\n    if (this.state.dragRect) {\r\n\r\n      this.setState({\r\n        dragRect: undefined\r\n      });\r\n\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    }\r\n\r\n  }\r\n\r\n  private _evaluateSelection(dragRect: IRectangle) {\r\n    // Break early if we don't need to evaluate.\r\n    if (!dragRect) {\r\n      return;\r\n    }\r\n\r\n    let { selection } = this.props;\r\n    let rootRect = this._getRootRect();\r\n    let allElements = this.refs.root.querySelectorAll('[data-selection-index]');\r\n\r\n    if (!this._itemRectCache) {\r\n      this._itemRectCache = {};\r\n    }\r\n\r\n    // Stop change events, clear selection to re-populate.\r\n    selection.setChangeEvents(false);\r\n    selection.setAllSelected(false);\r\n\r\n    for (let i = 0; i < allElements.length; i++) {\r\n      let element = allElements[i];\r\n      let index = element.getAttribute('data-selection-index');\r\n\r\n      // Pull the memoized rectangle for the item, or the get the rect and memoize.\r\n      let itemRect = this._itemRectCache[index];\r\n\r\n      if (!itemRect) {\r\n        itemRect = element.getBoundingClientRect();\r\n\r\n        // Normalize the item rect to the dragRect coordinates.\r\n        itemRect = {\r\n          left: itemRect.left - rootRect.left,\r\n          top: itemRect.top - rootRect.top,\r\n          width: itemRect.width,\r\n          height: itemRect.height,\r\n          right: (itemRect.left - rootRect.left) + itemRect.width,\r\n          bottom: (itemRect.top - rootRect.top) + itemRect.height\r\n        };\r\n\r\n        if (itemRect.width > 0 && itemRect.height > 0) {\r\n          this._itemRectCache[index] = itemRect;\r\n        }\r\n      }\r\n\r\n      if (\r\n        itemRect.top < (dragRect.top + dragRect.height) &&\r\n        itemRect.bottom > dragRect.top &&\r\n        itemRect.left < (dragRect.left + dragRect.width) &&\r\n        itemRect.right > dragRect.left\r\n      ) {\r\n        this._selectedIndicies[index] = true;\r\n      } else {\r\n        delete this._selectedIndicies[index];\r\n      }\r\n    }\r\n\r\n    for (let index in this._selectedIndicies) {\r\n      if (this._selectedIndicies.hasOwnProperty(index)) {\r\n        selection.setIndexSelected(Number(index), true, false);\r\n      }\r\n    }\r\n\r\n    selection.setChangeEvents(true);\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}