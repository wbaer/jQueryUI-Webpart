/**
 * @file readResources.ts
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * Reads resources (RESX format) files from folder specified by config. It
 * returns an IResources object with the paths to both the default resources file
 * and a list of all the localized resources files.
 */
"use strict";
var getFiles_1 = require("./getFiles");
/**
 * Reads all resources files from folder specified by config.
 * The file with name "Resources.resx" will be considered the default resource file.
 * More than one Resources.resx file will end up in an error.
 * All files following Resources.??-??.resx (such as Resources.en-US.resx) will be considered as
 * localized resources. It won't match against valid locales but that expression
 */
function readResources(options) {
    return getResourceFilePaths(options.paths.featureXmlDir, '**/Resources.resx')
        .then(function (defaultResourcePaths) {
        if (defaultResourcePaths.length > 1) {
            throw new Error('More than one default resources file');
        }
        return getResourceFilePaths(options.paths.featureXmlDir, '**/Resources.??-??.resx')
            .then(function (localizedResourcePaths) {
            return {
                localizedResourcePaths: localizedResourcePaths,
                defaultResourcePath: defaultResourcePaths[0]
            };
        });
    });
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = readResources;
/** Reads the list of resources files relative path from a specified folder */
function getResourceFilePaths(featureXmlDir, globs) {
    return getFiles_1.getRelativeFilePaths(featureXmlDir, globs, 'Found resources file: ');
}

//# sourceMappingURL=readResources.js.map
