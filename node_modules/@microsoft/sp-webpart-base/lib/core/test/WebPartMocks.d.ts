import { DisplayMode, ServiceScope } from '@microsoft/sp-core-library';
import { HttpClient, SPHttpClient } from '@microsoft/sp-http';
import { IClientSideWebPartManifest, IClientSideWebPartManifestEntry, IClientSideComponentLoaderConfiguration } from '@microsoft/sp-module-interfaces';
import { PageContext } from '@microsoft/sp-page-context';
import IClientSideWebPartStatusRenderer from '../IClientSideWebPartStatusRenderer';
import IWebPartManagerContext from '../IWebPartManagerContext';
import IWebPartHost from '../IWebPartHost';
import IWebPartData from '../IWebPartData';
export declare class MockWebPartManifest implements IClientSideWebPartManifest<{}> {
    manifestVersion: number;
    id: string;
    componentType: 'WebPart';
    alias: string;
    version: string;
    preconfiguredEntries: IClientSideWebPartManifestEntry<{}>[];
    loaderConfig: IClientSideComponentLoaderConfiguration;
}
export declare class MockWebPartManagerContext implements IWebPartManagerContext {
    domElement: HTMLElement;
    instanceId: string;
    manifest: MockWebPartManifest;
    webPartData: IWebPartData;
    displayMode: DisplayMode;
    host: IWebPartHost;
}
export declare class MockPreloadedPageData {
    appId: string;
    webServerRelativeUrl: string;
    webAbsoluteUrl: string;
}
export declare class MockWebPartHost implements IWebPartHost {
    pageContext: PageContext;
    httpClient: HttpClient;
    spHttpClient: SPHttpClient;
    eventAggregator: any;
    statusRenderer: MockClientSideWebPartStatusRenderer;
    serviceScope: ServiceScope;
    renderPropertyPane: (props: {}) => void;
}
export declare class MockClientSideWebPartStatusRenderer implements IClientSideWebPartStatusRenderer {
    displayCalled: boolean;
    clearCalled: boolean;
    errorCalled: boolean;
    clearErrorCalled: boolean;
    displayLoadingIndicator(domElement: HTMLElement): void;
    clearLoadingIndicator(domElement: HTMLElement): void;
    renderError(domElement: HTMLElement, error: Error | string): void;
    clearError(domElement: HTMLElement): void;
}
