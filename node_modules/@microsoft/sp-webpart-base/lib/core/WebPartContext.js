'use strict';
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var decorators_1 = require("@microsoft/decorators");
var sp_http_1 = require("@microsoft/sp-http");
var sp_telemetry_1 = require("@ms/sp-telemetry");
var sp_page_context_1 = require("@microsoft/sp-page-context");
var sp_component_base_1 = require("@microsoft/sp-component-base");
var PropertyPaneDefinitions_1 = require("../propertyPane/propertyPane/PropertyPaneDefinitions");
var PropertyPaneAccessor_1 = require("./context/PropertyPaneAccessor");
var WebPartContext = (function (_super) {
    __extends(WebPartContext, _super);
    function WebPartContext(parameters) {
        var _this = _super.call(this, parameters) || this;
        _this._instanceId = parameters.instanceId;
        _this._webPartTag = parameters.webPartTag;
        _this._domElement = parameters.domElement;
        _this._host = parameters.host;
        _this._statusRenderer = parameters.statusRenderer;
        _this._eventAggregator = parameters.eventAggregator;
        _this._setPropertyPaneState = parameters.setPropertyPaneState;
        _this._isPropertyPaneRenderedByWebPart = parameters.isPropertyPaneRenderedByWebPart;
        _this._propertyPaneAccessor = new PropertyPaneAccessor_1.default(function () { _this._setPropertyPaneState(_this._instanceId, PropertyPaneDefinitions_1.PropertyPaneState.Open, true); }, function () { _this._setPropertyPaneState(_this._instanceId, PropertyPaneDefinitions_1.PropertyPaneState.Refresh, true); }, function () { return _this._isPropertyPaneRenderedByWebPart(); });
        return _this;
    }
    Object.defineProperty(WebPartContext.prototype, "manifest", {
        get: function () {
            return _super.prototype.getBaseManifest.call(this);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "instanceId", {
        get: function () { return this._instanceId; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "webPartTag", {
        get: function () { return this._webPartTag; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "domElement", {
        get: function () { return this._domElement; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "spHttpClient", {
        get: function () { return this._spHttpClient; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "httpClient", {
        get: function () { return this._httpClient; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "pageContext", {
        get: function () { return this._pageContext; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "statusRenderer", {
        get: function () { return this._statusRenderer; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "eventAggregator", {
        get: function () { return this._eventAggregator; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "propertyPane", {
        get: function () { return this._propertyPaneAccessor; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartContext.prototype, "host", {
        get: function () { return this._host; },
        enumerable: true,
        configurable: true
    });
    WebPartContext.prototype.onProvideServices = function (parameters) {
        _super.prototype.onProvideServices.call(this, parameters);
        this._httpClient = this.serviceScope.createDefaultAndProvide(sp_http_1.HttpClient.serviceKey);
        this._spHttpClient = this.serviceScope.createDefaultAndProvide(sp_http_1.SPHttpClient.serviceKey);
        this.serviceScope.provide(sp_telemetry_1._logSourceServiceKey, sp_telemetry_1._LogSource.create(parameters.webPartTag));
    };
    WebPartContext.prototype.onConsumeServices = function () {
        _super.prototype.onConsumeServices.call(this);
        this._pageContext = this.serviceScope.consume(sp_page_context_1.PageContext.serviceKey);
    };
    return WebPartContext;
}(sp_component_base_1._ClientSideComponentContext));
__decorate([
    decorators_1.override
], WebPartContext.prototype, "manifest", null);
__decorate([
    decorators_1.override
], WebPartContext.prototype, "onProvideServices", null);
__decorate([
    decorators_1.override
], WebPartContext.prototype, "onConsumeServices", null);
WebPartContext = __decorate([
    decorators_1.sealed
], WebPartContext);
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = WebPartContext;
