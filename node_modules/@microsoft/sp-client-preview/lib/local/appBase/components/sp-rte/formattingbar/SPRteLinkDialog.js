"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require("react");
var RteStrings_resx_1 = require("../loc/RteStrings.resx");
var office_ui_fabric_react_1 = require("office-ui-fabric-react");
var RteA11y_1 = require("../a11y/RteA11y");
var SPRteLinkDialog = (function (_super) {
    __extends(SPRteLinkDialog, _super);
    function SPRteLinkDialog(props) {
        var _this = _super.call(this, props) || this;
        _this._getErrorMessage = _this._getErrorMessage.bind(_this);
        _this._handleKeyDown = _this._handleKeyDown.bind(_this);
        _this._handleSaveClicked = _this._handleSaveClicked.bind(_this);
        _this._handleTextFieldChange = _this._handleTextFieldChange.bind(_this);
        _this._isURLValid = _this._isURLValid.bind(_this);
        _this.state = {
            isURLValid: true
        };
        return _this;
    }
    SPRteLinkDialog.prototype.render = function () {
        var _this = this;
        var _a = this.props, editorElement = _a.editorElement, isOpen = _a.isOpen, onDismiss = _a.onDismiss, onSaveClicked = _a.onSaveClicked, onCancelClicked = _a.onCancelClicked, textFieldValue = _a.textFieldValue;
        return (React.createElement(office_ui_fabric_react_1.Dialog, { isOpen: isOpen, type: office_ui_fabric_react_1.DialogType.normal, onDismiss: onDismiss, title: RteStrings_resx_1.default.LinkDialogTitle, isBlocking: true, elementToFocusOnDismiss: editorElement },
            React.createElement(office_ui_fabric_react_1.TextField, { label: RteStrings_resx_1.default.LinkDialogTextFieldLabel, ariaLabel: RteStrings_resx_1.default.LinkDialogTextFieldAriaLabel, onChanged: this._handleTextFieldChange, onGetErrorMessage: this._getErrorMessage, onKeyDown: this._handleKeyDown, placeholder: 'http://', defaultValue: textFieldValue, ref: function (c) { return _this._textField = c; }, "data-automation-id": 'linkDialogTextField' }),
            React.createElement(office_ui_fabric_react_1.DialogFooter, null,
                React.createElement(office_ui_fabric_react_1.Button, { buttonType: office_ui_fabric_react_1.ButtonType.primary, disabled: !this.state.isURLValid, onClick: this._handleSaveClicked, ariaLabel: RteStrings_resx_1.default.RichTextLinkDialogSaveButtonLabel, "data-automation-id": 'confirmButton' }, RteStrings_resx_1.default.RichTextLinkDialogSaveButtonLabel),
                React.createElement(office_ui_fabric_react_1.Button, { onClick: onCancelClicked, ariaLabel: RteStrings_resx_1.default.RichTextLinkDialogCancelButtonLabel, "data-automation-id": 'cancelButton' }, RteStrings_resx_1.default.RichTextLinkDialogCancelButtonLabel))));
    };
    SPRteLinkDialog.prototype.componentDidUpdate = function (prevProps) {
        if (this._textField && this.props.isOpen && !this._initCursorSet) {
            this._initCursorSet = true;
            this._textField.select();
            var textValue = this._textField.value;
            if (textValue) {
                this._textField.setSelectionStart(textValue.length);
                this._textField.setSelectionEnd(textValue.length);
            }
        }
        else if (!this.props.isOpen) {
            this._initCursorSet = false;
        }
    };
    SPRteLinkDialog.prototype.componentWillReceiveProps = function (newProps) {
        this.state = {
            isURLValid: this._isURLValid(newProps.textFieldValue)
        };
    };
    Object.defineProperty(SPRteLinkDialog.prototype, "textFieldValue", {
        get: function () {
            var url = '';
            if (this._textField) {
                url = this._textField.value;
                if (!this._hasProtocol(url)) {
                    url = 'http://' + url;
                }
            }
            return url;
        },
        enumerable: true,
        configurable: true
    });
    SPRteLinkDialog.prototype._getErrorMessage = function () {
        return !this._isURLValid(this.textFieldValue) && this.textFieldValue !== '' ?
            RteStrings_resx_1.default.LinkDialogErrorNotSupportedLink : '';
    };
    SPRteLinkDialog.prototype._handleKeyDown = function (evt) {
        if (RteA11y_1.isEnter(evt) && this._isURLValid(this.textFieldValue)) {
            this.props.onSaveClicked();
            evt.stopPropagation();
            evt.preventDefault();
        }
    };
    SPRteLinkDialog.prototype._handleSaveClicked = function () {
        if (this._isURLValid(this.textFieldValue)) {
            this.props.onSaveClicked();
        }
    };
    SPRteLinkDialog.prototype._handleTextFieldChange = function () {
        this.setState({
            isURLValid: this._isURLValid(this.textFieldValue)
        });
    };
    SPRteLinkDialog.prototype._hasProtocol = function (url) {
        var hasProtocolRegex = new RegExp('^([A-Za-z0-9]+:(\/\/)?|#|\/|\\\\).+', 'i');
        return hasProtocolRegex.test(url);
    };
    SPRteLinkDialog.prototype._isURLValid = function (url) {
        return this.props.validationRegex.test(url);
    };
    return SPRteLinkDialog;
}(React.Component));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SPRteLinkDialog;
