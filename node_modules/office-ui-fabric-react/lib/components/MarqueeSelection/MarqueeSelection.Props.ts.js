module.exports = "import * as React from 'react';\r\nimport { ISelection } from '../../utilities/selection/interfaces';\r\nimport { MarqueeSelection } from './MarqueeSelection';\r\n\r\nexport interface IMarqueeSelectionProps extends React.Props<MarqueeSelection> {\r\n  /**\r\n   * The selection object to interact with when updating selection changes.\r\n   */\r\n  selection: ISelection;\r\n\r\n  /**\r\n   * Optional props to mix into the root DIV element.\r\n   */\r\n  rootProps?: React.HTMLProps<HTMLDivElement>;\r\n\r\n  /**\r\n   * Optional callback that is called, when the mouse down event occurs, in order to determine\r\n   * if we should start a marquee selection. If true is returned, we will cancel the mousedown\r\n   * event to prevent upstream mousedown handlers from executing.\r\n   */\r\n  onShouldStartSelection?: (ev: MouseEvent) => boolean;\r\n\r\n  /**\r\n   * Optional flag to control the enabled state of marquee selection. This allows you to render\r\n   * it and have events all ready to go, but conditionally disable it. That way transitioning\r\n   * between enabled/disabled generate no difference in the DOM.\r\n   * @default true\r\n   */\r\n  isEnabled?: boolean;\r\n\r\n  /**\r\n   * Optional flag to restrict the drag rect to the root element, instead of allowing the drag\r\n   * rect to start outside of the root element boundaries.\r\n   * @default false\r\n   */\r\n  isDraggingConstrainedToRoot?: boolean;\r\n}\r\n";