"use strict";
var chai_1 = require("chai");
var React = require("react");
var enzyme_1 = require("enzyme");
var MobilePreview_1 = require("../../mobilePreview/MobilePreview");
var MobilePreviewDeviceView_1 = require("../../mobilePreviewDeviceView/MobilePreviewDeviceView");
var MobilePreviewRotate_1 = require("../../mobilePreviewRotate/MobilePreviewRotate");
describe('Testing MobilePreview device view', function () {
    var mobilePreview;
    var deviceView;
    var deviceList = {
        phones: [
            { name: 'Phone 1', width: 100, height: 100 },
            { name: 'Phone 2', width: 200, height: 200 },
            { name: 'Phone 3', width: 50, height: 80 }
        ],
        tablets: [],
        desktops: []
    };
    beforeEach(function () {
        mobilePreview = enzyme_1.mount(React.createElement(MobilePreview_1.default, {
            deviceType: MobilePreview_1.DeviceType.Phone,
            devices: deviceList
        }));
        deviceView = mobilePreview.find(MobilePreviewDeviceView_1.default);
    });
    afterEach(function () {
        mobilePreview.unmount();
    });
    it('renders the width and height correctly', function () {
        var deviceDiv = deviceView.find(MobilePreviewDeviceView_1.default);
        chai_1.assert.equal(mobilePreview.state('currentDevice').name, 'Phone 3', 'The current device is smallest phone');
        chai_1.expect(deviceDiv.html()).to.match(/width: ?50/i);
        chai_1.expect(deviceDiv.html()).to.match(/height: ?80/i);
    });
    it('renders the width and height correctly after rotate', function () {
        mobilePreview.find(MobilePreviewRotate_1.default).find('a').simulate('click');
        chai_1.assert.equal(mobilePreview.state('currentOrientation'), MobilePreview_1.DeviceOrientation.Landscape, 'device orientation should be landscape');
        var deviceDiv = deviceView.find(MobilePreviewDeviceView_1.default);
        chai_1.expect(deviceDiv.html()).to.match(/width: ?80/i);
        chai_1.expect(deviceDiv.html()).to.match(/height: ?50/i);
    });
    it('has the correct URL in the iframe', function () {
        var url = mobilePreview.state('url');
        chai_1.expect(deviceView.find('iframe').html()).string(url);
    });
});
