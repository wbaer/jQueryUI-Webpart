module.exports = "import * as React from 'react';\r\nimport { IIconProps } from '../../Icon';\r\n\r\nexport interface IChoiceGroupProps extends React.HTMLProps<HTMLElement | HTMLInputElement> {\r\n  /**\r\n   * The options for the choice group.\r\n   */\r\n  options: IChoiceGroupOption[];\r\n\r\n  /**\r\n   * @deprecated\r\n   * Deprecated and will be removed by 07/17/2017 Use 'onChange' instead.\r\n   */\r\n  onChanged?: (option: IChoiceGroupOption, evt?: React.FormEvent<HTMLElement | HTMLInputElement>) => void;\r\n\r\n  /**\r\n   * A callback for receiving a notification when the choice has been changed.\r\n   */\r\n  onChange?: (ev?: React.FormEvent<HTMLElement | HTMLInputElement>, option?: IChoiceGroupOption) => void;\r\n\r\n  /**\r\n   * Descriptive label for the choice group.\r\n   */\r\n  label?: string;\r\n}\r\n\r\nexport interface IChoiceGroupOption {\r\n  /**\r\n   * A required key to uniquely identify the option.\r\n   */\r\n  key: string;\r\n\r\n  /**\r\n   * The text string for the option.\r\n   */\r\n  text: string;\r\n\r\n  /**\r\n   * The Icon component props for choice field\r\n   */\r\n  iconProps?: IIconProps;\r\n\r\n  /**\r\n   * The src of image for choice field.\r\n   */\r\n  imageSrc?: string;\r\n\r\n  /**\r\n   * The src of image for choice field which is selected.\r\n   */\r\n  selectedImageSrc?: string;\r\n\r\n  /**\r\n   * The width and height of the image in px for choice field.\r\n   */\r\n  imageSize?: { width: number, height: number };\r\n\r\n  /**\r\n   * Whether or not this menu item is currently checked.\r\n   * @defaultvalue false\r\n   */\r\n  checked?: boolean;\r\n\r\n  /**\r\n   * @deprecated\r\n   * Deprecated at v.65.1 and will be removed by v 1.0. Use 'checked' instead.\r\n   */\r\n  isChecked?: boolean;\r\n\r\n  /**\r\n   * Whether or not the option is disabled.\r\n   */\r\n  disabled?: boolean;\r\n\r\n  // @todo: Update version numbers for depriate and removal\r\n  /**\r\n   * @deprecated\r\n   * Deprecated at v0.52.0, to be removed at >= v1.0.0. Use 'disabled' instead.\r\n   */\r\n  isDisabled?: boolean;\r\n}\r\n";