/**
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * @file web part manager context.
 */
import { DisplayMode } from '@microsoft/sp-core-library';
import { IClientSideWebPartManifest } from '@microsoft/sp-module-interfaces';
import IWebPartHost from './IWebPartHost';
import IWebPartData from './IWebPartData';
/**
 * Context object that needs to be passed to the web part manager to load a web part.
 *
 * @internal
 */
interface IWebPartManagerContext {
    /**
     * Reference to the DOM element that contains the webpart.
     */
    domElement: HTMLElement;
    /**
     * WebPart instance id
     */
    instanceId: string;
    /**
     * WebPart manifest
     */
    manifest: IClientSideWebPartManifest<any>;
    /**
     * The display mode as one of DisplayMode.Read or DisplayMode.Edit
     */
    displayMode: DisplayMode;
    /**
     * WebPart instance data. This data should be used to render a webpart.
     */
    webPartData?: IWebPartData;
    /**
     * Host containing the webpart. This host can be any container that implements the IWebPartHost interface. Some
     * examples of hosts are the Canvas, a single page application that contains a webpart, and classic SharePoint
     * pages.
     */
    host?: IWebPartHost;
    /**
     * Flag indicating whether the web part is rendered from the persisted data or not. If the web part is added
     * from toolbox, the value of this flag will be false.
     */
    addedFromPersistedData?: boolean;
    /**
     * Flag to determine if the webpart manager should add the webparts to the EUPL calculation or should
     * leave it up to the host.
     */
    shouldAddWebpartsToEupl?: boolean;
}
export default IWebPartManagerContext;
