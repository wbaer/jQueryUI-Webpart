"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var gulp_core_build_1 = require("@microsoft/gulp-core-build");
var TextTask = (function (_super) {
    __extends(TextTask, _super);
    function TextTask() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = 'text';
        _this.taskConfig = {
            textMatch: ['src/**/*.txt']
        };
        return _this;
    }
    TextTask.prototype.executeTask = function (gulp) {
        /* tslint:disable:typedef */
        var merge = require('merge2');
        var texttojs = require('gulp-texttojs');
        var textMatch = this.taskConfig.textMatch;
        var _a = this.buildConfig, libFolder = _a.libFolder, libAMDFolder = _a.libAMDFolder;
        /* tslint:enable:typedef */
        if (textMatch) {
            var commonJSTextStream = gulp.src(textMatch)
                .pipe(texttojs({
                template: 'module.exports = <%= content %>;'
            }))
                .pipe(gulp.dest(libFolder));
            if (libAMDFolder) {
                return merge(commonJSTextStream, gulp.src(textMatch)
                    .pipe(texttojs())
                    .pipe(gulp.dest(libAMDFolder)));
            }
            else {
                return commonJSTextStream;
            }
        }
    };
    return TextTask;
}(gulp_core_build_1.GulpTask));
exports.TextTask = TextTask;

//# sourceMappingURL=TextTask.js.map
