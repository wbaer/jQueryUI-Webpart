{"version":3,"sources":["dom.ts"],"names":[],"mappings":";;AAgBA;;;;;;;GAOG;AACH,0BAAiC,KAAkB,EAAE,MAAmB;IACtE,IAAI,YAAY,GAAoB,KAAK,CAAC;IAC1C,IAAI,aAAa,GAAoB,MAAM,CAAC;IAE5C,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC3B,YAAY,CAAC,QAAQ,GAAG;YACtB,QAAQ,EAAE,EAAE;SACb,CAAC;IACJ,CAAC;IAED,IAAI,SAAS,GAAG,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;IAE7C,EAAE,CAAC,CAAC,SAAS,IAAI,SAAS,KAAK,MAAM,CAAC,CAAC,CAAC;QACtC,wCAAwC;QACxC,IAAI,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAE9D,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC;IACH,CAAC;IAED,YAAY,CAAC,QAAQ,CAAC,MAAM,GAAG,aAAa,IAAI,SAAS,CAAC;IAE1D,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAClB,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5B,aAAa,CAAC,QAAQ,GAAG;gBACvB,QAAQ,EAAE,EAAE;aACb,CAAC;QACJ,CAAC;QAED,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACrD,CAAC;AACH,CAAC;AAhCD,4CAgCC;AAED,0BAAiC,KAAkB;IACjD,IAAI,MAAmB,CAAC;IAExB,EAAE,CAAC,CAAC,KAAK,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACrC,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;IACjC,CAAC;IAED,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC;AARD,4CAQC;AAED;;;;;;;;;GASG;AACH,mBAA0B,KAAkB,EAAE,mBAAmC;IAAnC,oCAAA,EAAA,0BAAmC;IAC/E,MAAM,CAAC,KAAK,IAAI,CACd,mBAAmB,IAAI,gBAAgB,CAAC,KAAK,CAAC;QAC9C,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,UAAyB,CACpD,CAAC;AACJ,CAAC;AALD,8BAKC;AAED;;;;;;;;;;GAUG;AACH,yBAAgC,MAAmB,EAAE,KAAkB,EAAE,mBAAmC;IAAnC,oCAAA,EAAA,0BAAmC;IAC1G,IAAI,WAAW,GAAY,KAAK,CAAC;IAEjC,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;QACpB,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACxB,WAAW,GAAG,KAAK,CAAC;YAEpB,OAAO,KAAK,EAAE,CAAC;gBACb,IAAI,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;gBAElC,EAAE,CAAC,CAAC,UAAU,KAAK,MAAM,CAAC,CAAC,CAAC;oBAC1B,WAAW,GAAG,IAAI,CAAC;oBACnB,KAAK,CAAC;gBACR,CAAC;gBAED,KAAK,GAAG,UAAU,CAAC;YACrB,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3B,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAED,MAAM,CAAC,WAAW,CAAC;AACrB,CAAC;AAvBD,0CAuBC;AAED,IAAI,MAAM,GAAG,KAAK,CAAC;AAEnB,0FAA0F;AAC1F,gBAAuB,SAAS;IAC9B,MAAM,GAAG,SAAS,CAAC;AACrB,CAAC;AAFD,wBAEC;AAED,uCAAuC;AACvC,mBAA0B,WAAyB;IACjD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,CACL,WAAW;YACT,WAAW,CAAC,aAAa;YACzB,WAAW,CAAC,aAAa,CAAC,WAAW;YACrC,WAAW,CAAC,aAAa,CAAC,WAAW;YACrC,MAAM,CACT,CAAC;IACJ,CAAC;AACH,CAAC;AAZD,8BAYC;AAED,yCAAyC;AACzC,qBAA4B,WAAyB;IACnD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,WAAW,IAAI,WAAW,CAAC,aAAa,GAAG,WAAW,CAAC,aAAa,GAAG,QAAQ,CAAC;IACzF,CAAC;AACH,CAAC;AAND,kCAMC;AAED,6DAA6D;AAC7D,iBAAwB,OAA6B;IACnD,IAAI,IAAgB,CAAC;IAErB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACZ,EAAE,CAAC,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC,CAAC;YACvB,IAAI,GAAG;gBACL,IAAI,EAAE,CAAC;gBACP,GAAG,EAAE,CAAC;gBACN,KAAK,EAAE,MAAM,CAAC,UAAU;gBACxB,MAAM,EAAE,MAAM,CAAC,WAAW;gBAC1B,KAAK,EAAE,MAAM,CAAC,UAAU;gBACxB,MAAM,EAAE,MAAM,CAAC,WAAW;aAC3B,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAE,OAAuB,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAC1D,IAAI,GAAI,OAAuB,CAAC,qBAAqB,EAAE,CAAC;QAC1D,CAAC;IACH,CAAC;IAED,MAAM,CAAC,IAAI,CAAC;AACd,CAAC;AAnBD,0BAmBC;AAED;;;;;GAKG;AACH,0BAA0B,OAAsC;IAC9D,MAAM,CAAC,OAAO,IAAI,CAAC,CAAmB,OAAQ,CAAC,QAAQ,CAAC;AAC1D,CAAC","file":"dom.js","sourcesContent":["import { IRectangle } from './IRectangle';\r\n\r\n/**\r\n * Attached interface for elements which support virtual references.\r\n * Used internally by the virtual hierarchy methods.\r\n *\r\n * @interface IVirtualElement\r\n * @extends {HTMLElement}\r\n */\r\ninterface IVirtualElement extends HTMLElement {\r\n  _virtual: {\r\n    parent?: IVirtualElement;\r\n    children: IVirtualElement[];\r\n  };\r\n}\r\n\r\n/**\r\n * Sets the virtual parent of an element.\r\n * Pass `undefined` as the `parent` to clear the virtual parent.\r\n *\r\n * @export\r\n * @param {HTMLElement} child\r\n * @param {HTMLElement} parent\r\n */\r\nexport function setVirtualParent(child: HTMLElement, parent: HTMLElement) {\r\n  let virtualChild = <IVirtualElement>child;\r\n  let virtualParent = <IVirtualElement>parent;\r\n\r\n  if (!virtualChild._virtual) {\r\n    virtualChild._virtual = {\r\n      children: []\r\n    };\r\n  }\r\n\r\n  let oldParent = virtualChild._virtual.parent;\r\n\r\n  if (oldParent && oldParent !== parent) {\r\n    // Remove the child from its old parent.\r\n    let index = oldParent._virtual.children.indexOf(virtualChild);\r\n\r\n    if (index > -1) {\r\n      oldParent._virtual.children.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  virtualChild._virtual.parent = virtualParent || undefined;\r\n\r\n  if (virtualParent) {\r\n    if (!virtualParent._virtual) {\r\n      virtualParent._virtual = {\r\n        children: []\r\n      };\r\n    }\r\n\r\n    virtualParent._virtual.children.push(virtualChild);\r\n  }\r\n}\r\n\r\nexport function getVirtualParent(child: HTMLElement): HTMLElement {\r\n  let parent: HTMLElement;\r\n\r\n  if (child && isVirtualElement(child)) {\r\n    parent = child._virtual.parent;\r\n  }\r\n\r\n  return parent;\r\n}\r\n\r\n/**\r\n * Gets the element which is the parent of a given element.\r\n * If `allowVirtuaParents` is `true`, this method prefers the virtual parent over\r\n * real DOM parent when present.\r\n *\r\n * @export\r\n * @param {HTMLElement} child\r\n * @param {boolean} [allowVirtualParents=true]\r\n * @returns {HTMLElement}\r\n */\r\nexport function getParent(child: HTMLElement, allowVirtualParents: boolean = true): HTMLElement {\r\n  return child && (\r\n    allowVirtualParents && getVirtualParent(child) ||\r\n    child.parentNode && child.parentNode as HTMLElement\r\n  );\r\n}\r\n\r\n/**\r\n * Determines whether or not a parent element contains a given child element.\r\n * If `allowVirtualParents` is true, this method may return `true` if the child\r\n * has the parent in its virtual element hierarchy.\r\n *\r\n * @export\r\n * @param {HTMLElement} parent\r\n * @param {HTMLElement} child\r\n * @param {boolean} [allowVirtualParents=true]\r\n * @returns {boolean}\r\n */\r\nexport function elementContains(parent: HTMLElement, child: HTMLElement, allowVirtualParents: boolean = true): boolean {\r\n  let isContained: boolean = false;\r\n\r\n  if (parent && child) {\r\n    if (allowVirtualParents) {\r\n      isContained = false;\r\n\r\n      while (child) {\r\n        let nextParent = getParent(child);\r\n\r\n        if (nextParent === parent) {\r\n          isContained = true;\r\n          break;\r\n        }\r\n\r\n        child = nextParent;\r\n      }\r\n    } else if (parent.contains) {\r\n      isContained = parent.contains(child);\r\n    }\r\n  }\r\n\r\n  return isContained;\r\n}\r\n\r\nlet _isSSR = false;\r\n\r\n/** Helper to set ssr mode to simulate no window object returned from getWindow helper. */\r\nexport function setSSR(isEnabled) {\r\n  _isSSR = isEnabled;\r\n}\r\n\r\n/** Helper to get the window object. */\r\nexport function getWindow(rootElement?: HTMLElement) {\r\n  if (_isSSR) {\r\n    return undefined;\r\n  } else {\r\n    return (\r\n      rootElement &&\r\n        rootElement.ownerDocument &&\r\n        rootElement.ownerDocument.defaultView ?\r\n        rootElement.ownerDocument.defaultView :\r\n        window\r\n    );\r\n  }\r\n}\r\n\r\n/** Helper to get the document object. */\r\nexport function getDocument(rootElement?: HTMLElement) {\r\n  if (_isSSR) {\r\n    return undefined;\r\n  } else {\r\n    return rootElement && rootElement.ownerDocument ? rootElement.ownerDocument : document;\r\n  }\r\n}\r\n\r\n/** Helper to get bounding client rect, works with window. */\r\nexport function getRect(element: HTMLElement | Window): IRectangle {\r\n  let rect: IRectangle;\r\n\r\n  if (element) {\r\n    if (element === window) {\r\n      rect = {\r\n        left: 0,\r\n        top: 0,\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n        right: window.innerWidth,\r\n        bottom: window.innerHeight\r\n      };\r\n    } else if ((element as HTMLElement).getBoundingClientRect) {\r\n      rect = (element as HTMLElement).getBoundingClientRect();\r\n    }\r\n  }\r\n\r\n  return rect;\r\n}\r\n\r\n/**\r\n * Determines whether or not an element has the virtual hierarchy extension.\r\n *\r\n * @param {(HTMLElement | IVirtualElement)} element\r\n * @returns {element is IVirtualElement}\r\n */\r\nfunction isVirtualElement(element: HTMLElement | IVirtualElement): element is IVirtualElement {\r\n  return element && !!(<IVirtualElement>element)._virtual;\r\n}"],"sourceRoot":"..\\src"}