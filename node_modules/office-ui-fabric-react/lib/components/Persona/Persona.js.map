{"version":3,"sources":["components/Persona/Persona.tsx"],"names":[],"mappings":"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","file":"components/Persona/Persona.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  autobind,\r\n  css,\r\n  divProperties,\r\n  getInitials,\r\n  getNativeProps,\r\n  getRTL\r\n} from '../../Utilities';\r\nimport { Image, ImageFit, ImageLoadState } from '../../Image';\r\nimport {\r\n  IPersonaProps,\r\n  PersonaInitialsColor,\r\n  PersonaPresence,\r\n  PersonaSize\r\n} from './Persona.Props';\r\nimport {\r\n  PERSONA_INITIALS_COLOR,\r\n  PERSONA_PRESENCE,\r\n  PERSONA_SIZE\r\n} from './PersonaConsts';\r\nimport './Persona.scss';\r\n\r\n// The RGB color swatches\r\nconst COLOR_SWATCHES_LOOKUP: PersonaInitialsColor[] = [\r\n  PersonaInitialsColor.lightGreen,\r\n  PersonaInitialsColor.lightBlue,\r\n  PersonaInitialsColor.lightPink,\r\n  PersonaInitialsColor.green,\r\n  PersonaInitialsColor.darkGreen,\r\n  PersonaInitialsColor.pink,\r\n  PersonaInitialsColor.magenta,\r\n  PersonaInitialsColor.purple,\r\n  PersonaInitialsColor.black,\r\n  PersonaInitialsColor.teal,\r\n  PersonaInitialsColor.blue,\r\n  PersonaInitialsColor.darkBlue,\r\n  PersonaInitialsColor.orange,\r\n  PersonaInitialsColor.darkRed,\r\n  PersonaInitialsColor.red\r\n];\r\n\r\nconst COLOR_SWATCHES_NUM_ENTRIES = COLOR_SWATCHES_LOOKUP.length;\r\n\r\nexport interface IPersonaState {\r\n  isImageLoaded?: boolean;\r\n}\r\n\r\nexport class Persona extends React.Component<IPersonaProps, IPersonaState> {\r\n  public static defaultProps: IPersonaProps = {\r\n    primaryText: '',\r\n    size: PersonaSize.regular,\r\n    presence: PersonaPresence.none\r\n  };\r\n\r\n  constructor(props: IPersonaProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isImageLoaded: false,\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let {\r\n      className,\r\n      size,\r\n      imageUrl,\r\n      imageInitials,\r\n      initialsColor,\r\n      presence,\r\n      primaryText,\r\n      secondaryText,\r\n      tertiaryText,\r\n      optionalText,\r\n      hidePersonaDetails,\r\n      imageShouldFadeIn,\r\n      imageShouldStartVisible\r\n    } = this.props;\r\n\r\n    let isRTL = getRTL();\r\n\r\n    imageInitials = imageInitials || getInitials(primaryText, isRTL);\r\n    initialsColor = initialsColor !== undefined && initialsColor !== null ? initialsColor : this._getColorFromName(primaryText);\r\n\r\n    let presenceElement = null;\r\n    if (presence !== PersonaPresence.none) {\r\n      let userPresence = PersonaPresence[presence],\r\n        statusIcon = null;\r\n      switch (userPresence) {\r\n        case 'online':\r\n          userPresence = 'SkypeCheck';\r\n          break;\r\n        case 'away':\r\n          userPresence = 'SkypeClock';\r\n          break;\r\n        case 'dnd':\r\n          userPresence = 'SkypeMinus';\r\n          break;\r\n        default:\r\n          userPresence = '';\r\n      }\r\n      if (userPresence) {\r\n        let iconClass = `ms-Persona-presenceIcon ms-Icon ms-Icon--${userPresence}`;\r\n        statusIcon = <i className={ iconClass }></i>;\r\n      }\r\n      presenceElement = <div className='ms-Persona-presence'>{ statusIcon }</div>;\r\n    }\r\n\r\n    let divProps = getNativeProps(this.props, divProperties);\r\n    let personaDetails = <div className='ms-Persona-details'>\r\n      <div className='ms-Persona-primaryText'>{ primaryText }</div>\r\n      { secondaryText ? (\r\n        <div className='ms-Persona-secondaryText'>{ secondaryText }</div>\r\n      ) : (null) }\r\n      <div className='ms-Persona-tertiaryText'>{ tertiaryText }</div>\r\n      <div className='ms-Persona-optionalText'>{ optionalText }</div>\r\n      { this.props.children }\r\n    </div>;\r\n\r\n    return (\r\n      <div\r\n        { ...divProps }\r\n        className={ css('ms-Persona', className, PERSONA_SIZE[size], PERSONA_PRESENCE[presence]) }\r\n        >\r\n        { size !== PersonaSize.tiny && (\r\n          <div className='ms-Persona-imageArea'>\r\n            {\r\n              !this.state.isImageLoaded &&\r\n              (<div className={ css('ms-Persona-initials', PERSONA_INITIALS_COLOR[initialsColor]) } aria-hidden='true'>{ imageInitials }</div>)\r\n            }\r\n            <Image\r\n              className='ms-Persona-image'\r\n              imageFit={ ImageFit.cover }\r\n              src={ imageUrl }\r\n              shouldFadeIn={ imageShouldFadeIn }\r\n              shouldStartVisible={ imageShouldStartVisible }\r\n              onLoadingStateChange={ this._onPhotoLoadingStateChange } />\r\n          </div>\r\n        ) }\r\n        { presenceElement }\r\n        { (!hidePersonaDetails || (size === PersonaSize.tiny)) && personaDetails }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getColorFromName(displayName: string): PersonaInitialsColor {\r\n    let color = PersonaInitialsColor.blue;\r\n    if (!displayName) {\r\n      return color;\r\n    }\r\n\r\n    let hashCode = 0;\r\n    for (let iLen: number = displayName.length - 1; iLen >= 0; iLen--) {\r\n      const ch: number = displayName.charCodeAt(iLen);\r\n      const shift: number = iLen % 8;\r\n      // tslint:disable-next-line:no-bitwise\r\n      hashCode ^= (ch << shift) + (ch >> (8 - shift));\r\n    }\r\n\r\n    color = COLOR_SWATCHES_LOOKUP[hashCode % COLOR_SWATCHES_NUM_ENTRIES];\r\n\r\n    return color;\r\n  }\r\n\r\n  @autobind\r\n  private _onPhotoLoadingStateChange(loadState: ImageLoadState) {\r\n    this.setState({\r\n      isImageLoaded: loadState === ImageLoadState.loaded\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}