"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require("react");
var DeveloperToolsConsoleStore_1 = require("./../Stores/DeveloperToolsConsoleStore");
var LoadingOrErrorModule_1 = require("./DeveloperModules/LoadingOrErrorModule/LoadingOrErrorModule");
var DeveloperToolsFabric_1 = require("./../DeveloperToolsFabric");
var DeveloperToolsConsole_module_scss_1 = require("./DeveloperToolsConsole.module.scss");
var DeveloperTools_resx_1 = require("./../DeveloperTools.resx");
var DeveloperToolsConsole = (function (_super) {
    __extends(DeveloperToolsConsole, _super);
    function DeveloperToolsConsole() {
        var _this = _super.call(this) || this;
        _this._onDrag = function (e) {
            var mouseEvent = e; 
            if (mouseEvent.pageY !== 0) {
                var height = (document.documentElement.clientHeight - mouseEvent.pageY) /
                    document.documentElement.clientHeight;
                DeveloperToolsConsoleStore_1.default.resizeConsole(height);
            }
        };
        _this._setState = function () {
            _this.setState({
                topPosition: DeveloperToolsConsoleStore_1.default.height,
                visible: DeveloperToolsConsoleStore_1.default.visible,
                tabs: DeveloperToolsConsoleStore_1.default.tabs,
                selectedTabId: DeveloperToolsConsoleStore_1.default.selectedTabId
            });
        };
        _this.state = {
            topPosition: DeveloperToolsConsoleStore_1.default.height,
            visible: DeveloperToolsConsoleStore_1.default.visible,
            tabs: DeveloperToolsConsoleStore_1.default.tabs,
            selectedTabId: DeveloperToolsConsoleStore_1.default.selectedTabId
        };
        return _this;
    }
    DeveloperToolsConsole.prototype.componentDidMount = function () {
        DeveloperToolsConsoleStore_1.default.addListener(this._setState);
    };
    DeveloperToolsConsole.prototype.componentWillUnmount = function () {
        DeveloperToolsConsoleStore_1.default.removeListener(this._setState);
    };
    DeveloperToolsConsole.prototype.render = function () {
        var RENDER_NOTHING = null; 
        if (this.state.visible) {
            var tabs = this.state.tabs.map(function (tab, id) {
                return React.createElement(DeveloperToolsFabric_1.PivotItem, { linkText: tab.title },
                    React.createElement(LoadingOrErrorModule_1.default, { tab: tab }));
            });
            return React.createElement("div", { className: DeveloperToolsConsole_module_scss_1.default.container, style: { height: this.state.topPosition * 100 + "%" } },
                React.createElement("div", { className: DeveloperToolsConsole_module_scss_1.default.resizeBar, draggable: true, onDrag: this._onDrag }),
                React.createElement("div", { className: DeveloperToolsConsole_module_scss_1.default.toolsArea },
                    React.createElement(DeveloperToolsFabric_1.Pivot, { linkSize: DeveloperToolsFabric_1.PivotLinkSize.normal, linkFormat: DeveloperToolsFabric_1.PivotLinkFormat.links }, tabs),
                    React.createElement(DeveloperToolsFabric_1.Button, { className: DeveloperToolsConsole_module_scss_1.default.closeButton, buttonType: DeveloperToolsFabric_1.ButtonType.icon, icon: 'Cancel', rootProps: { title: DeveloperTools_resx_1.default.closeDeveloperToolsAriaLabel }, ariaLabel: DeveloperTools_resx_1.default.closeDeveloperToolsAriaLabel, onClick: function () { return DeveloperToolsConsoleStore_1.default.showHideConsole(false); } })));
        }
        else {
            return RENDER_NOTHING;
        }
    };
    return DeveloperToolsConsole;
}(React.Component));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = DeveloperToolsConsole;
