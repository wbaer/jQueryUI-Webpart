{"version":3,"sources":["deployAzureStorage/DeployAzureStorageTask.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AAGb,8DAAsD;AACtD,2DAAsD;AAkCtD;IAA4C,0CAAuC;IAAnF;QAAA,qEAyBC;QAxBQ,UAAI,GAAW,sBAAsB,CAAC;QAEtC,gBAAU,GAAkC;YACjD,UAAU,EAAE,QAAQ;SACrB,CAAC;;IAoBJ,CAAC;IAlBQ,2CAAU,GAAjB;QACE,MAAM,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;IACvD,CAAC;IAEM,4CAAW,GAAlB,UAAmB,IAAe,EAAE,gBAA4B;QAAhE,iBAaC;QAZC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;QAC3D,CAAC;QAED,MAAM,CAAC,uBAAa,CAAC,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE,UAAC,KAAY;YACjF,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC7B,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;gBAChB,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACH,6BAAC;AAAD,CAzBA,AAyBC,CAzB2C,0BAAQ,GAyBnD;AAzBY,wDAAsB","file":"deployAzureStorage/DeployAzureStorageTask.js","sourcesContent":["'use strict';\r\n\r\nimport * as gulp from 'gulp';\r\nimport { GulpTask } from '@microsoft/gulp-core-build';\r\nimport deployToAzure from './uploadCDN/deployToAzure';\r\n\r\nexport interface IDeployAzureTaskConfigBase {\r\n  /**\r\n   * The Azure account name. Defaults to undefined.\r\n   */\r\n  account?: string;\r\n\r\n  /**\r\n   * The Azure container to use. Defaults to undefined.\r\n   */\r\n  container?: string;\r\n\r\n  /**\r\n   * The primary or secondary Azure blob storage access key. Defaults to undefined.\r\n   */\r\n  accessKey?: string;\r\n}\r\n\r\n/**\r\n * Configuration for task which uploads scripts to an Azure blob storage\r\n */\r\nexport interface IDeployAzureStorageTaskConfig extends IDeployAzureTaskConfigBase {\r\n  /**\r\n   * The directory to upload to the CDN. Defaults to the distFolder.\r\n   */\r\n  workingDir?: string;\r\n\r\n  /**\r\n   * The glob to search for files in workingDir to upload.\r\n   */\r\n  uploadPath?: string;\r\n}\r\n\r\nexport class DeployAzureStorageTask extends GulpTask<IDeployAzureStorageTaskConfig> {\r\n  public name: string = 'deploy-azure-storage';\r\n\r\n  public taskConfig: IDeployAzureStorageTaskConfig = {\r\n    uploadPath: '**/*.*'\r\n  };\r\n\r\n  public loadSchema(): Object {\r\n    return require('./deploy-azure-storage.schema.json');\r\n  }\r\n\r\n  public executeTask(gulp: gulp.Gulp, completeCallback: () => void): Promise<any> { // tslint:disable-line:no-any\r\n    if (!this.taskConfig.workingDir) {\r\n      this.taskConfig.workingDir = this.buildConfig.distFolder;\r\n    }\r\n\r\n    return deployToAzure(this.taskConfig,\r\n                         this.log.bind(this),\r\n                         this.logError.bind(this)).then(completeCallback, (error: Error) => {\r\n      this.logError(error.message);\r\n      if (error.stack) {\r\n        this.logError(error.stack);\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}