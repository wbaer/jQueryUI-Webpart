{"version":3,"sources":["utilities/decorators/BaseDecorator.ts"],"names":[],"mappings":";;;;;;;IAOA;QAAyC,iCAAmB;QAI1D;YAAA,YACE,iBAAO,SAER;YADC,KAAI,CAAC,2BAA2B,GAAG,KAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;QACjF,CAAC;QAED;;;;;WAKG;QACO,mDAA2B,GAArC,UAAsC,yBAAgD;YACpF,IAAI,CAAC,0BAA0B,GAAG,yBAAyB,CAAC;YAC5D,EAAE,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,QAAQ,GAAG,wBAAY,CAAC,IAAI,EAAE,yBAAyB,CAAC,CAAC;YAChE,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzB,0BAAc,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtC,CAAC;QACH,CAAC;QACH,oBAAC;IAAD,CAvBA,AAuBC,CAvBwC,yBAAa,GAuBrD;IAvBY,sCAAa","file":"utilities/decorators/BaseDecorator.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  hoistMethods,\r\n  unhoistMethods\r\n} from '../../Utilities';\r\n\r\nexport class BaseDecorator<P, S> extends BaseComponent<P, S> {\r\n  protected _composedComponentInstance: React.Component<P, S>;\r\n  private _hoisted: string[];\r\n\r\n  constructor() {\r\n    super();\r\n    this._updateComposedComponentRef = this._updateComposedComponentRef.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Updates the ref to the component composed by the decorator, which will also take care of hoisting\r\n   * (and unhoisting as appropriate) methods from said component.\r\n   *\r\n   * Pass this method as the argument to the 'ref' property of the composed component.\r\n   */\r\n  protected _updateComposedComponentRef(composedComponentInstance: React.Component<P, S>) {\r\n    this._composedComponentInstance = composedComponentInstance;\r\n    if (composedComponentInstance) {\r\n      this._hoisted = hoistMethods(this, composedComponentInstance);\r\n    } else if (this._hoisted) {\r\n      unhoistMethods(this, this._hoisted);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}