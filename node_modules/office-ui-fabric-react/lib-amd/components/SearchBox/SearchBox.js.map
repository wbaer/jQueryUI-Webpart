{"version":3,"sources":["components/SearchBox/SearchBox.tsx"],"names":[],"mappings":"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","file":"components/SearchBox/SearchBox.js","sourcesContent":["import * as React from 'react';\r\nimport { ISearchBoxProps } from './SearchBox.Props';\r\nimport {\r\n  BaseComponent,\r\n  autobind,\r\n  css,\r\n  getId,\r\n  elementContains,\r\n  getDocument,\r\n  KeyCodes\r\n} from '../../Utilities';\r\nimport './SearchBox.scss';\r\n\r\nexport interface ISearchBoxState {\r\n  value?: string;\r\n  hasFocus?: boolean;\r\n  id?: string;\r\n}\r\n\r\nexport class SearchBox extends BaseComponent<ISearchBoxProps, ISearchBoxState> {\r\n  public static defaultProps: ISearchBoxProps = {\r\n    labelText: 'Search',\r\n  };\r\n\r\n  private _rootElement: HTMLElement;\r\n  private _inputElement: HTMLInputElement;\r\n\r\n  public constructor(props: ISearchBoxProps) {\r\n    super(props);\r\n\r\n    // Handle deprecated prop\r\n    if (this.props.onChanged) {\r\n      this.props.onChange = this.props.onChanged;\r\n    }\r\n\r\n    this.state = {\r\n      value: props.value || '',\r\n      hasFocus: false,\r\n      id: getId('SearchBox')\r\n    };\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: ISearchBoxProps) {\r\n    if (newProps.value !== undefined) {\r\n      this.setState({\r\n        value: newProps.value\r\n      });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let { labelText, className } = this.props;\r\n    let { value, hasFocus, id } = this.state;\r\n\r\n    return (\r\n      <div\r\n        ref={ this._resolveRef('_rootElement') }\r\n        className={ css('ms-SearchBox', className, {\r\n          'is-active': hasFocus,\r\n          'can-clear': value.length > 0\r\n        }) }\r\n        { ...{ onFocusCapture: this._onFocusCapture } }\r\n        >\r\n        <i className='ms-SearchBox-icon ms-Icon ms-Icon--Search'></i>\r\n        <input\r\n          id={ id }\r\n          className='ms-SearchBox-field'\r\n          placeholder={ labelText }\r\n          onChange={ this._onInputChange }\r\n          onKeyDown={ this._onKeyDown }\r\n          value={ value }\r\n          ref={ this._resolveRef('_inputElement') }\r\n          />\r\n        <div\r\n          className='ms-SearchBox-clearButton'\r\n          onClick={ this._onClearClick }\r\n          >\r\n          <i className='ms-Icon ms-Icon--Clear' />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sets focus to the search box input field\r\n   */\r\n  public focus() {\r\n    if (this._inputElement) {\r\n      this._inputElement.focus();\r\n    }\r\n  }\r\n\r\n  @autobind\r\n  private _onClearClick(ev?: any) {\r\n    this.setState({\r\n      value: ''\r\n    });\r\n    this._callOnChange('');\r\n    ev.stopPropagation();\r\n    ev.preventDefault();\r\n\r\n    this._inputElement.focus();\r\n  }\r\n\r\n  @autobind\r\n  private _onFocusCapture(ev: React.FocusEvent<HTMLElement>) {\r\n    this.setState({\r\n      hasFocus: true\r\n    });\r\n\r\n    this._events.on(getDocument().body, 'focus', this._handleDocumentFocus, true);\r\n  }\r\n\r\n  @autobind\r\n  private _onKeyDown(ev: React.KeyboardEvent<HTMLInputElement>) {\r\n    switch (ev.which) {\r\n\r\n      case KeyCodes.escape:\r\n        this._onClearClick(ev);\r\n        break;\r\n\r\n      case KeyCodes.enter:\r\n        if (this.props.onSearch && this.state.value.length > 0) {\r\n          this.props.onSearch(this.state.value);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n\r\n    // We only get here if the keypress has been handled.\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  @autobind\r\n  private _onInputChange(ev: React.KeyboardEvent<HTMLInputElement>) {\r\n    this.setState({\r\n      value: this._inputElement.value\r\n    });\r\n    this._callOnChange(this._inputElement.value);\r\n  }\r\n\r\n  private _handleDocumentFocus(ev: FocusEvent) {\r\n    if (!elementContains(this._rootElement, ev.target as HTMLElement)) {\r\n      this._events.off(getDocument().body, 'focus');\r\n      this.setState({\r\n        hasFocus: false\r\n      });\r\n    }\r\n  }\r\n\r\n  private _callOnChange(newValue: string): void {\r\n    let { onChange } = this.props;\r\n\r\n    if (onChange) {\r\n      onChange(newValue);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}