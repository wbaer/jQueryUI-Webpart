"use strict";
var sp_webpart_base_1 = require("@microsoft/sp-webpart-base");
var CanvasWebPartHost = (function () {
    function CanvasWebPartHost(serviceScope, handleResize, handleCanvasChanged, reclaimFocus, setSelectedWebPartId) {
        this._handleCanvasChanged = handleCanvasChanged;
        this._handleResize = handleResize;
        this._reclaimFocus = reclaimFocus;
        this._serviceScope = serviceScope;
        this._setSelectedWebPartId = setSelectedWebPartId;
        this.webPartConfigurationEventCallback = this.webPartConfigurationEventCallback.bind(this);
    }
    Object.defineProperty(CanvasWebPartHost.prototype, "serviceScope", {
        get: function () {
            return this._serviceScope;
        },
        enumerable: true,
        configurable: true
    });
    CanvasWebPartHost.prototype.setDirty = function (wpInstanceId) {
        if (this._handleCanvasChanged) {
            this._handleCanvasChanged();
        }
    };
    CanvasWebPartHost.prototype.webPartConfigurationEventCallback = function (event, data) {
        if (event === sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneOpened) {
            this._handleResize(document.querySelector('.ControlZone--selected'), 500, 44);
        }
        else if (event === sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneClosed ||
            event === sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneLostFocus) {
            this._reclaimFocus();
        }
        else if (event === sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneWebPartsSwitched &&
            this._setSelectedWebPartId &&
            data) {
            this._setSelectedWebPartId(data.instanceId);
        }
    };
    return CanvasWebPartHost;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = CanvasWebPartHost;
