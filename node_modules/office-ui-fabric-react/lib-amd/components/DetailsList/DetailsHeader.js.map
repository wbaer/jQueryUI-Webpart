{"version":3,"sources":["components/DetailsList/DetailsHeader.tsx"],"names":[],"mappings":"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","file":"components/DetailsList/DetailsHeader.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  css,\r\n  getRTL\r\n} from '../../Utilities';\r\nimport { IColumn, DetailsListLayoutMode, ColumnActionsMode } from './DetailsList.Props';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { Check } from '../Check/Check';\r\nimport { GroupSpacer } from '../GroupedList/GroupSpacer';\r\nimport { ISelection, SelectionMode, SELECTION_CHANGE } from '../../utilities/selection/interfaces';\r\nimport './DetailsHeader.scss';\r\n\r\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\r\nconst MOUSEMOVE_PRIMARY_BUTTON = 1; // for mouse move event we are using ev.buttons property, 1 means left button\r\nconst INNER_PADDING = 16;\r\n\r\nexport interface IDetailsHeaderProps extends React.Props<DetailsHeader> {\r\n  columns: IColumn[];\r\n  selection: ISelection;\r\n  selectionMode: SelectionMode;\r\n  layoutMode: DetailsListLayoutMode;\r\n  onColumnIsSizingChanged?: (column: IColumn, isSizing: boolean) => void;\r\n  onColumnResized?: (column: IColumn, newWidth: number) => void;\r\n  onColumnAutoResized?: (column: IColumn, columnIndex: number) => void;\r\n  onColumnClick?: (ev: React.MouseEvent<HTMLElement>, column: IColumn) => void;\r\n  onColumnContextMenu?: (column: IColumn, ev: Event) => void;\r\n  groupNestingDepth?: number;\r\n  isAllCollapsed?: boolean;\r\n  onToggleCollapseAll?: (isAllCollapsed: boolean) => void;\r\n  /** ariaLabel for the entire header */\r\n  ariaLabel?: string;\r\n  /** ariaLabel for the header checkbox that selects or deselects everything */\r\n  ariaLabelForSelectAllCheckbox?: string;\r\n  selectAllVisibility?: SelectAllVisibility;\r\n}\r\n\r\nexport enum SelectAllVisibility {\r\n  none = 0,\r\n  hidden = 1,\r\n  visible = 2\r\n}\r\n\r\nexport interface IDetailsHeaderState {\r\n  columnResizeDetails?: IColumnResizeDetails;\r\n  isAllSelected?: boolean;\r\n  isSizing?: boolean;\r\n  groupNestingDepth?: number;\r\n  isAllCollapsed?: boolean;\r\n}\r\n\r\nexport interface IColumnResizeDetails {\r\n  columnIndex: number;\r\n  originX: number;\r\n  columnMinWidth: number;\r\n}\r\n\r\nexport class DetailsHeader extends BaseComponent<IDetailsHeaderProps, IDetailsHeaderState> {\r\n  public static defaultProps = {\r\n    isSelectAllVisible: SelectAllVisibility.visible\r\n  };\r\n\r\n  public refs: {\r\n    [key: string]: React.ReactInstance;\r\n    root: HTMLElement;\r\n    focusZone: FocusZone;\r\n  };\r\n\r\n  constructor(props: IDetailsHeaderProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      columnResizeDetails: null,\r\n      groupNestingDepth: this.props.groupNestingDepth,\r\n      isAllCollapsed: this.props.isAllCollapsed\r\n    };\r\n\r\n    this._onToggleCollapseAll = this._onToggleCollapseAll.bind(this);\r\n    this._onSelectAllClicked = this._onSelectAllClicked.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    let { selection } = this.props;\r\n\r\n    this._events.on(selection, SELECTION_CHANGE, this._onSelectionChanged);\r\n    this._events.on(this.refs.root, 'mousedown', this._onSizerDown);\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps) {\r\n    let { groupNestingDepth } = this.state;\r\n\r\n    if (newProps.groupNestingDepth !== groupNestingDepth) {\r\n      this.setState({ groupNestingDepth: newProps.groupNestingDepth });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let { columns, ariaLabel, ariaLabelForSelectAllCheckbox, selectAllVisibility } = this.props;\r\n    let { isAllSelected, columnResizeDetails, isSizing, groupNestingDepth, isAllCollapsed } = this.state;\r\n\r\n    return (\r\n      <div\r\n        role='row'\r\n        aria-label={ ariaLabel }\r\n        className={ css('ms-DetailsHeader', {\r\n          'is-allSelected': isAllSelected,\r\n          'is-selectAllHidden': selectAllVisibility === SelectAllVisibility.hidden,\r\n          'is-resizingColumn': !!columnResizeDetails && isSizing\r\n        }) }\r\n        onMouseMove={ this._onMove.bind(this) }\r\n        onMouseUp={ this._onUp.bind(this) }\r\n        ref='root'\r\n        data-automationid='DetailsHeader'>\r\n        <FocusZone ref='focusZone' direction={ FocusZoneDirection.horizontal }>\r\n          <div className='ms-DetailsHeader-cellWrapper' role='columnheader'>\r\n            { (selectAllVisibility === SelectAllVisibility.visible) ? (\r\n              <button\r\n                className='ms-DetailsHeader-cell is-check'\r\n                onClick={ this._onSelectAllClicked }\r\n                aria-label={ ariaLabelForSelectAllCheckbox }\r\n                aria-pressed={ isAllSelected }\r\n              >\r\n                <Check checked={ isAllSelected } />\r\n              </button>\r\n            ) : null }\r\n          </div>\r\n          { groupNestingDepth > 0 ? (\r\n            <button className='ms-DetailsHeader-cell' onClick={ this._onToggleCollapseAll }>\r\n              <i className={ css('ms-DetailsHeader-collapseButton ms-Icon ms-Icon--ChevronDown', {\r\n                'is-collapsed': isAllCollapsed\r\n              }) } >\r\n              </i>\r\n            </button>\r\n          ) : (null) }\r\n          { GroupSpacer({ count: groupNestingDepth - 1 }) }\r\n          { columns.map((column, columnIndex) => (\r\n            <div key={ column.key } className='ms-DetailsHeader-cellSizeWrapper'>\r\n              <div\r\n                className='ms-DetailsHeader-cellWrapper'\r\n                role='columnheader'\r\n                aria-sort={ column.isSorted ? (column.isSortedDescending ? 'descending' : 'ascending') : 'none' }>\r\n                <button\r\n                  key={ column.fieldName }\r\n                  disabled={ column.columnActionsMode === ColumnActionsMode.disabled }\r\n                  className={ css('ms-DetailsHeader-cell', column.headerClassName, {\r\n                    'is-actionable': column.columnActionsMode !== ColumnActionsMode.disabled,\r\n                    'is-empty': !column.name,\r\n                    'is-icon-visible': column.isSorted || column.isGrouped || column.isFiltered\r\n                  }) }\r\n                  style={ { width: column.calculatedWidth + INNER_PADDING } }\r\n                  onClick={ this._onColumnClick.bind(this, column) }\r\n                  onContextMenu={ this._onColumnContextMenu.bind(this, column) }\r\n                  aria-haspopup={ column.columnActionsMode === ColumnActionsMode.hasDropdown }\r\n                  aria-label={ column.ariaLabel || column.name }\r\n                  data-automationid='ColumnsHeaderColumn'\r\n                  data-item-key={ column.key }\r\n                >\r\n\r\n                  { column.isFiltered && (\r\n                    <i className='ms-Icon ms-Icon--filter' />\r\n                  ) }\r\n\r\n                  { column.isSorted && (\r\n                    <i className={ css('ms-Icon', {\r\n                      'ms-Icon--SortUp': !column.isSortedDescending,\r\n                      'ms-Icon--SortDown': column.isSortedDescending\r\n                    }) } />\r\n                  ) }\r\n\r\n                  { column.isGrouped && (\r\n                    <i className='ms-Icon ms-Icon--GroupedDescending' />\r\n                  ) }\r\n\r\n                  { column.iconClassName && (\r\n                    <i className={ 'ms-Icon ' + column.iconClassName } />\r\n                  ) }\r\n\r\n                  { column.name }\r\n\r\n                  { column.columnActionsMode === ColumnActionsMode.hasDropdown && (\r\n                    <i className='ms-DetailsHeader-filterChevron ms-Icon ms-Icon--ChevronDown' />\r\n                  ) }\r\n                </button>\r\n              </div>\r\n              { (column.isResizable) ? (\r\n                <div\r\n                  data-sizer-index={ columnIndex }\r\n                  className={ css('ms-DetailsHeader-cell is-sizer', {\r\n                    'is-resizing': columnResizeDetails && columnResizeDetails.columnIndex === columnIndex && isSizing\r\n                  }) }\r\n                  onDoubleClick={ this._onSizerDoubleClick.bind(this, columnIndex) }\r\n                />\r\n              ) : (null) }\r\n            </div>\r\n          )) }\r\n        </FocusZone>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /** Set focus to the active thing in the focus area. */\r\n  public focus(): boolean {\r\n    return this.refs.focusZone.focus();\r\n  }\r\n\r\n  /**\r\n   * double click on the column sizer will auto ajust column width\r\n   * to fit the longest content among current rendered rows.\r\n   *\r\n   * @private\r\n   * @param {number} columnIndex (index of the column user double clicked)\r\n   * @param {React.MouseEvent} ev (mouse double click event)\r\n   */\r\n  private _onSizerDoubleClick(columnIndex: number, ev: React.MouseEvent<HTMLElement>) {\r\n    let { onColumnAutoResized, columns } = this.props;\r\n    if (onColumnAutoResized) {\r\n      onColumnAutoResized(columns[columnIndex], columnIndex);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the select all toggle is clicked.\r\n   */\r\n  private _onSelectAllClicked() {\r\n    let { selection } = this.props;\r\n\r\n    selection.toggleAllSelected();\r\n  }\r\n\r\n  /**\r\n   * mouse move event handler in the header\r\n   * it will set isSizing state to true when user clicked on the sizer and move the mouse.\r\n   *\r\n   * @private\r\n   * @param {React.MouseEvent} ev (mouse move event)\r\n   */\r\n  private _onMove(ev: React.MouseEvent<HTMLElement>) {\r\n    let {\r\n      // use buttons property here since ev.button in some edge case is not upding well during the move.\r\n      // but firefox doesn't support it, so we set the default value when it is not defined.\r\n      buttons = MOUSEMOVE_PRIMARY_BUTTON\r\n    } = ev;\r\n\r\n    let { onColumnIsSizingChanged, columns } = this.props;\r\n    let { columnResizeDetails, isSizing } = this.state;\r\n\r\n    if (columnResizeDetails) {\r\n      if (buttons !== MOUSEMOVE_PRIMARY_BUTTON) {\r\n        // cancel mouse down event and return early when the primary button is not pressed\r\n        this._onUp(ev);\r\n        return;\r\n      }\r\n\r\n      if (!isSizing && ev.clientX !== columnResizeDetails.originX) {\r\n        isSizing = true;\r\n\r\n        this._events.on(window, 'mousemove', this._onSizerMove, true);\r\n        this._events.on(window, 'mouseup', this._onSizerUp, true);\r\n\r\n        this.setState({ isSizing: isSizing });\r\n\r\n        if (onColumnIsSizingChanged) {\r\n          onColumnIsSizingChanged(columns[columnResizeDetails.columnIndex], true);\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * mouse up event handler in the header\r\n   * clear the resize related state.\r\n   * This is to ensure we can catch double click event\r\n   *\r\n   * @private\r\n   * @param {React.MouseEvent} ev (mouse up event)\r\n   */\r\n  private _onUp(ev: React.MouseEvent<HTMLElement>) {\r\n    this.setState({\r\n      columnResizeDetails: null,\r\n      isSizing: false\r\n    });\r\n  }\r\n\r\n  private _onSizerDown(ev: MouseEvent) {\r\n    let columnIndexAttr = (ev.target as HTMLElement).getAttribute('data-sizer-index');\r\n    let columnIndex = Number(columnIndexAttr);\r\n    let { columns } = this.props;\r\n\r\n    if (columnIndexAttr === null || ev.button !== MOUSEDOWN_PRIMARY_BUTTON) {\r\n      // Ignore anything except the primary button.\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      columnResizeDetails: {\r\n        columnIndex: columnIndex,\r\n        columnMinWidth: columns[columnIndex].calculatedWidth,\r\n        originX: ev.clientX\r\n      }\r\n    });\r\n\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  private _onSelectionChanged() {\r\n    let isAllSelected = this.props.selection.isAllSelected();\r\n\r\n    if (this.state.isAllSelected !== isAllSelected) {\r\n      this.setState({\r\n        isAllSelected: isAllSelected\r\n      });\r\n    }\r\n  }\r\n\r\n  private _onSizerMove(ev: React.MouseEvent<HTMLElement>) {\r\n    let {\r\n      // use buttons property here since ev.button in some edge case is not upding well during the move.\r\n      // but firefox doesn't support it, so we set the default value when it is not defined.\r\n      buttons = MOUSEMOVE_PRIMARY_BUTTON\r\n    } = ev;\r\n\r\n    let { columnResizeDetails } = this.state;\r\n\r\n    if (columnResizeDetails) {\r\n      if (buttons !== MOUSEMOVE_PRIMARY_BUTTON) {\r\n        // cancel mouse down event and return early when the primary button is not pressed\r\n        this._onSizerUp();\r\n        return;\r\n      }\r\n\r\n      let { onColumnResized, columns } = this.props;\r\n\r\n      if (onColumnResized) {\r\n        let movement = ev.clientX - columnResizeDetails.originX;\r\n\r\n        if (getRTL()) {\r\n          movement = -movement;\r\n        }\r\n\r\n        onColumnResized(\r\n          columns[columnResizeDetails.columnIndex],\r\n          columnResizeDetails.columnMinWidth + movement\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private _onSizerUp() {\r\n    let { columns, onColumnIsSizingChanged } = this.props;\r\n    let { columnResizeDetails } = this.state;\r\n\r\n    this._events.off(window);\r\n\r\n    this.setState({\r\n      columnResizeDetails: null,\r\n      isSizing: false\r\n    });\r\n\r\n    if (onColumnIsSizingChanged) {\r\n      onColumnIsSizingChanged(columns[columnResizeDetails.columnIndex], false);\r\n    }\r\n  }\r\n\r\n  private _onColumnClick(column, ev) {\r\n    let { onColumnClick } = this.props;\r\n\r\n    if (column.onColumnClick) {\r\n      column.onColumnClick(ev, column);\r\n    }\r\n\r\n    if (onColumnClick) {\r\n      onColumnClick(ev, column);\r\n    }\r\n  }\r\n\r\n  private _onColumnContextMenu(column, ev) {\r\n    let { onColumnContextMenu } = this.props;\r\n\r\n    if (column.onContextMenu) {\r\n      column.onColumnContextMenu(column, ev);\r\n    }\r\n\r\n    if (onColumnContextMenu) {\r\n      onColumnContextMenu(column, ev);\r\n    }\r\n  }\r\n\r\n  private _onToggleCollapseAll() {\r\n    let { onToggleCollapseAll } = this.props;\r\n    let newCollapsed = !this.state.isAllCollapsed;\r\n    this.setState({\r\n      isAllCollapsed: newCollapsed\r\n    });\r\n    if (onToggleCollapseAll) {\r\n      onToggleCollapseAll(newCollapsed);\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}