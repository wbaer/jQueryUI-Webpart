var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
define(["require", "exports", "react", "./BaseDecorator", "../../Utilities"], function (require, exports, React, BaseDecorator_1, Utilities_1) {
    "use strict";
    var ResponsiveMode;
    (function (ResponsiveMode) {
        ResponsiveMode[ResponsiveMode["small"] = 0] = "small";
        ResponsiveMode[ResponsiveMode["medium"] = 1] = "medium";
        ResponsiveMode[ResponsiveMode["large"] = 2] = "large";
        ResponsiveMode[ResponsiveMode["xLarge"] = 3] = "xLarge";
        ResponsiveMode[ResponsiveMode["xxLarge"] = 4] = "xxLarge";
        ResponsiveMode[ResponsiveMode["xxxLarge"] = 5] = "xxxLarge";
    })(ResponsiveMode = exports.ResponsiveMode || (exports.ResponsiveMode = {}));
    var RESPONSIVE_MAX_CONSTRAINT = [
        479,
        639,
        1023,
        1365,
        1919,
        99999999
    ];
    var _defaultMode;
    /**
     * Allows a server rendered scenario to provide a default responsive mode.
     */
    function setResponsiveMode(responsiveMode) {
        _defaultMode = responsiveMode;
    }
    exports.setResponsiveMode = setResponsiveMode;
    function withResponsiveMode(ComposedComponent) {
        return (function (_super) {
            __extends(WithResponsiveMode, _super);
            function WithResponsiveMode() {
                var _this = _super.call(this) || this;
                _this._updateComposedComponentRef = _this._updateComposedComponentRef.bind(_this);
                _this.state = {
                    responsiveMode: _this._getResponsiveMode()
                };
                return _this;
            }
            WithResponsiveMode.prototype.componentDidMount = function () {
                var _this = this;
                this._events.on(window, 'resize', function () {
                    var responsiveMode = _this._getResponsiveMode();
                    if (responsiveMode !== _this.state.responsiveMode) {
                        _this.setState({
                            responsiveMode: responsiveMode
                        });
                    }
                });
            };
            WithResponsiveMode.prototype.componentWillUnmount = function () {
                this._events.dispose();
            };
            WithResponsiveMode.prototype.render = function () {
                var responsiveMode = this.state.responsiveMode;
                return (React.createElement(ComposedComponent, __assign({ ref: this._updateComposedComponentRef, responsiveMode: responsiveMode }, this.props)));
            };
            WithResponsiveMode.prototype._getResponsiveMode = function () {
                var responsiveMode = ResponsiveMode.small;
                var win = Utilities_1.getWindow();
                if (typeof win !== 'undefined') {
                    while (win.innerWidth > RESPONSIVE_MAX_CONSTRAINT[responsiveMode]) {
                        responsiveMode++;
                    }
                }
                else {
                    if (_defaultMode !== undefined) {
                        responsiveMode = _defaultMode;
                    }
                    else {
                        throw new Error('Content was rendered in a server environment without providing a default responsive mode. ' +
                            'Call setResponsiveMode to define what the responsive mode is.');
                    }
                }
                return responsiveMode;
            };
            return WithResponsiveMode;
        }(BaseDecorator_1.BaseDecorator));
    }
    exports.withResponsiveMode = withResponsiveMode;
});

//# sourceMappingURL=withResponsiveMode.js.map
