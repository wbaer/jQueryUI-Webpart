/**
 * Webpart interface to support lazy loading
 *
 * @internal
 */
interface IViewportAwareWebpart {
    /**
     * Initially this flag is false reflecting the fact that web part will be loaded lazily.
     *
     * Once true, it reflects that web part is in viewport or atleast has been in viewport earlier.
     *
     * However this does not mean that web part rendering is also complete. It just ensures that
     * web part has been asked to load. Either it is in the middle of loading or already loaded.
     *
     * For web parts in the viewport during initial page load, it will become true at start.
     * For rest, it will turn true as and when user scrolls closer to the web part.
     *
     * NOTE: Don't update it. This flag should be only read to know the lazy loading status.
     * NOTE: Don't use this flag to track position of the web part in viewport. Use this
     * flag only to track if web part rendeing has been delayed or not.
     */
    _isInViewport: boolean;
    /**
     * The DOM element of the lazyily loaded webpart.
     */
    domElement: HTMLElement;
    /**
     * Render actual web part when it is in the viewport.
     *
     * Note: Viewport also includes offset from the viewport for early loading.
     */
    _internalRenderInViewPort: () => void;
}
export default IViewportAwareWebpart;
