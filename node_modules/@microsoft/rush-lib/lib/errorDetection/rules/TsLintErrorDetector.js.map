{"version":3,"sources":["errorDetection/rules/TsLintErrorDetector.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,6BAA6B;AAE7B,kDAA2E;AAC3E,0CAA8C;AAE9C;;GAEG;AACH,+FAA+F;AAC/F,WAAW;AACX,kBAAkB;AAClB,oBAAoB;AACpB,SAAS;AACT,SAAS;AACT,0CAA0C;AAC1C,IAAM,mBAAmB,GAAwB,kCAAkB,CACjE,4FAA4F,EAC5F,UAAC,KAAsB;IACrB,MAAM,CAAC,IAAI,0BAAc,CACvB,QAAQ,EAAU,OAAO;IACzB,KAAK,CAAC,CAAC,CAAC,EAAU,UAAU;IAC5B,KAAK,CAAC,CAAC,CAAC,EAAU,OAAO;IACzB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO;IACzB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE,SAAS;KAC5B,CAAC;AACJ,CAAC,CACqB,CAAC;;AAEzB,kBAAe,mBAAmB,CAAC","file":"errorDetection/rules/TsLintErrorDetector.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n// tslint:disable:export-name\r\n\r\nimport { IErrorDetectionRule, RegexErrorDetector } from '../ErrorDetector';\r\nimport { BuildTaskError } from '../TaskError';\r\n\r\n/**\r\n * Detects an error from TypeScript Linter\r\n */\r\n// Example: \"[20:22:07] Error - tslint - src\\Cache.ts(5,8): error no-any: 'any' is not allowed\"\r\n// 0: input\r\n// 1: \"[20:22:07]\"\r\n// 2: \"src\\Cache.ts\"\r\n// 3: \"5\"\r\n// 4: \"8\"\r\n// 5: \"error no-any: 'any' is not allowed\"\r\nconst tsLintErrorDetector: IErrorDetectionRule = RegexErrorDetector(\r\n  /^\\s*(\\[[^\\]]+\\])\\s*Error\\s*-\\s*tslint\\s*-\\s*([^(]+)\\(([0-9]+)\\s*,\\s*([0-9]+)\\):\\s*(.*)\\s*$/,\r\n  (match: RegExpExecArray) => {\r\n    return new BuildTaskError(\r\n      'tslint',         // type\r\n      match[5],         // message\r\n      match[2],         // file\r\n      Number(match[3]), // line\r\n      Number(match[4])  // offset\r\n    );\r\n  }\r\n) as IErrorDetectionRule;\r\n\r\nexport default tsLintErrorDetector;\r\n"],"sourceRoot":"..\\..\\..\\src"}