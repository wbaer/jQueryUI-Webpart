/// <reference types="mocha" />
"use strict";
var chai_1 = require("chai");
var WriteManifestsTask_1 = require("./../WriteManifestsTask");
var task;
var config = {};
describe('WriteManifestsTask tests', function () {
    // Reset task information before each test
    beforeEach(function () {
        task = new WriteManifestsTask_1.WriteManifestsTask();
        task.mergeConfig(config);
    });
    describe('normalizeLocaleName', function () {
        it('correctly normalizes locale names', function () {
            var testPairs = {
                'en-us': 'en-US',
                'en-US': 'en-US',
                'EN-US': 'en-US',
                'qps-ploc': 'qps-ploc',
                'qps-Ploc': 'qps-ploc',
                'qps-PLOC': 'qps-ploc',
                'qps-plocm': 'qps-plocm',
                'qps-ploca': 'qps-ploca',
                'bs-latn-ba': 'bs-Latn-BA',
                'en': 'en',
                'EN': 'en',
                'sr-sp-latn': 'sr-SP-Latn',
                'en-latn': 'en-Latn'
            };
            for (var testValue in testPairs) {
                if (testPairs.hasOwnProperty(testValue)) {
                    var expectedValue = testPairs[testValue];
                    chai_1.assert.equal(task.normalizeLocaleName(testValue), expectedValue);
                }
            }
        });
    });
});

//# sourceMappingURL=WriteManifestsTask.test.js.map
