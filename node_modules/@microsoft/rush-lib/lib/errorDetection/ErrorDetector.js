// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
"use strict";
var ErrorDetectionMode;
(function (ErrorDetectionMode) {
    ErrorDetectionMode[ErrorDetectionMode["LocalBuild"] = 1] = "LocalBuild";
    ErrorDetectionMode[ErrorDetectionMode["VisualStudio"] = 2] = "VisualStudio";
    ErrorDetectionMode[ErrorDetectionMode["VisualStudioOnline"] = 3] = "VisualStudioOnline";
})(ErrorDetectionMode = exports.ErrorDetectionMode || (exports.ErrorDetectionMode = {}));
/**
 * Creates an Error Detection Rule based on a regex and a function which converts a regex match to a TaskError
 */
function RegexErrorDetector(regex, getError) {
    return function (line) {
        var match = regex.exec(line);
        if (match) {
            return getError(match);
        }
        return undefined;
    };
}
exports.RegexErrorDetector = RegexErrorDetector;
/**
 * The error detector will find all errors in a chunk of text by running a number
 * of error detection rules against each line of text.
 * @todo #168353: add unit tests for the ErrorDetector & for each individual rule in rules/
 */
var ErrorDetector = (function () {
    function ErrorDetector(rules) {
        this._rules = rules;
    }
    ErrorDetector.prototype.execute = function (data) {
        var _this = this;
        var errors = [];
        data.split('\n').forEach(function (line) {
            var error = _this._checkLine(line);
            if (error) {
                errors.push(error);
            }
        });
        return errors;
    };
    ErrorDetector.prototype._checkLine = function (line) {
        for (var _i = 0, _a = this._rules; _i < _a.length; _i++) {
            var rule = _a[_i];
            var error = rule(line);
            if (error) {
                return error;
            }
        }
        return undefined;
    };
    return ErrorDetector;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ErrorDetector;

//# sourceMappingURL=ErrorDetector.js.map
