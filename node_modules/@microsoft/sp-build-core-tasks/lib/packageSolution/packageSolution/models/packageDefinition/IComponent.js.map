{"version":3,"sources":["packageSolution/packageSolution/models/packageDefinition/IComponent.ts"],"names":[],"mappings":"AAAA;;;;;GAKG","file":"packageSolution/packageSolution/models/packageDefinition/IComponent.js","sourcesContent":["/**\r\n * @file IComponent.ts\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * Defines the necessary information to generate a component/element xml\r\n */\r\n\r\nimport ComponentType from '../ComponentType';\r\n\r\ninterface IComponent {\r\n  name: string;\r\n  description: string;\r\n  id: string;\r\n  manifest: string;\r\n  type: ComponentType;\r\n  componentDefinition: IWebPartDefinition | IApplicationDefinition | ICodePartDefinition;\r\n}\r\n\r\nexport interface IWebPartDefinition {\r\n  entries: IWebPartEntryDefinition[];\r\n}\r\n\r\n/**\r\n * Entry Definition of a WebPart component.\r\n *\r\n * id:          Id of the entry, to be used for file names, as opposed to the id.\r\n *              It's in the form of <webPartId>_<entryNumber> (i.e. x...x-xxxx-xxxx-xxxx-x...x_0)\r\n *\r\n * webPartData: Serialized webPartData. It comes from the pre-configured entry and is used for\r\n *              the initial webPartData of the client-side web part the first time it renders.\r\n */\r\nexport interface IWebPartEntryDefinition {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  webPartData: string;\r\n}\r\n\r\nexport interface IApplicationDefinition {\r\n\r\n}\r\n\r\nexport interface ICodePartDefinition {\r\n\r\n}\r\n\r\nexport default IComponent;\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}