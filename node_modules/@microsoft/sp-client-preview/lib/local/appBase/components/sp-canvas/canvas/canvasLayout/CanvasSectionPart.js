"use strict";
var sp_core_library_1 = require("@microsoft/sp-core-library");
var CanvasLayout_1 = require("./CanvasLayout");
var CanvasControlType_1 = require("../canvasControl/CanvasControlType");
var CanvasSectionPart = (function () {
    function CanvasSectionPart(sectionIdx, factor) {
        this._index = sectionIdx;
        this._factor = factor;
        this._controlsMap = new Map();
    }
    Object.defineProperty(CanvasSectionPart.prototype, "emptySectionControl", {
        get: function () {
            return {
                controlType: undefined,
                displayMode: sp_core_library_1.DisplayMode.Edit,
                id: CanvasSectionPart.emptySectionId,
                position: {
                    zoneIndex: undefined,
                    sectionIndex: this._index,
                    controlIndex: undefined,
                    sectionFactor: this._factor
                }
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasSectionPart.prototype, "factor", {
        get: function () {
            return this._factor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasSectionPart.prototype, "index", {
        get: function () {
            return this._index;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasSectionPart.prototype, "controls", {
        get: function () {
            var _this = this;
            var canvasControls = [];
            this._controlsMap.forEach(function (control) {
                control.position.sectionFactor = _this._factor;
                canvasControls.push(control);
            });
            return canvasControls.sort(function (ctrl1, ctrl2) {
                return ctrl1.position.controlIndex - ctrl2.position.controlIndex;
            });
        },
        enumerable: true,
        configurable: true
    });
    CanvasSectionPart.prototype.addControl = function (canvasControl) {
        if (canvasControl.controlType === CanvasControlType_1.default.WebPartZone ||
            canvasControl.controlType === CanvasControlType_1.default.RTE) {
            if (!canvasControl || !canvasControl.position) {
                return undefined;
            }
            var curControlIndex = canvasControl.position.controlIndex;
            if (curControlIndex === undefined) {
                return undefined;
            }
            var sectionControl = this._controlsMap.get(curControlIndex);
            if (!sectionControl) {
                this._controlsMap.set(curControlIndex, canvasControl);
            }
            else {
                var layoutControlItems = this.controls.map(function (control) {
                    return {
                        index: control.position.controlIndex
                    };
                });
                canvasControl.position.controlIndex = CanvasLayout_1.default._generateNewLayoutIndex(layoutControlItems, curControlIndex);
                if (canvasControl.position.controlIndex === undefined) {
                    return undefined;
                }
                this._controlsMap.set(canvasControl.position.controlIndex, canvasControl);
            }
        }
        return canvasControl.id;
    };
    CanvasSectionPart.prototype.removeControl = function (controlPosition) {
        if (!controlPosition) {
            return undefined;
        }
        var control = this._controlsMap.get(controlPosition.controlIndex);
        if (!control) {
            return undefined;
        }
        this._controlsMap.delete(control.position.controlIndex);
        return control.id;
    };
    CanvasSectionPart.prototype.fetchControl = function (controlPosition) {
        if (!controlPosition) {
            return undefined;
        }
        return this._controlsMap.get(controlPosition.controlIndex);
    };
    CanvasSectionPart.prototype.fetchAllControls = function () {
        return this.controls;
    };
    CanvasSectionPart.prototype.isEmpty = function () {
        return this.fetchAllControls().length === 0;
    };
    CanvasSectionPart.prototype.dispose = function () {
        this._controlsMap.clear();
    };
    CanvasSectionPart.prototype.changeFactor = function (newFactor) {
        this.controls.forEach(function (control) {
            control.position.sectionFactor = newFactor;
        });
        this._factor = newFactor;
    };
    return CanvasSectionPart;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = CanvasSectionPart;
