"use strict";
var developerToolsLoader = require("./DeveloperTools/DeveloperToolsLoader");
var SPSystemJsComponentLoader_1 = require("./SPSystemJsComponentLoader");
var StringsProxy_1 = require("@microsoft/sp-core-library/lib/StringsProxy");
var SPCoreLibraryStrings_resx_1 = require("./SPCoreLibraryStrings.resx");
StringsProxy_1.setStrings(SPCoreLibraryStrings_resx_1.default);
var sp_core_library_1 = require("@microsoft/sp-core-library");
var sp_telemetry_1 = require("@ms/sp-telemetry");
var odsp_utilities_exporter_1 = require("@ms/sp-telemetry/lib/odsp-utilities/odsp-utilities-exporter");
var telemetryConstants_1 = require("./utilities/telemetryConstants");
var SPLoader_resx_1 = require("./SPLoader.resx");
var SPStarter = (function () {
    function SPStarter() {
    }
    SPStarter.start = function (preloadedData) {
        if (!preloadedData) {
            throw new Error(SPLoader_resx_1.default.invalidPreloadedDataError);
        }
        if (!preloadedData.clientSideApplicationId) {
            throw new Error(SPLoader_resx_1.default.missingApplicationIdError);
        }
        if (preloadedData && preloadedData.spPageContextInfo) {
            sp_core_library_1.Log._initialize(new sp_telemetry_1._SPTelemetryLogHandler());
            SPStarter._initializeEnvironment();
            sp_core_library_1.Session._initialize({ applicationId: preloadedData.spPageContextInfo.CorrelationId });
            SPStarter._initializeTelemetry(preloadedData);
            sp_core_library_1._SPFlight.initialize(preloadedData.spPageContextInfo.ExpFeatures);
            sp_core_library_1._SPKillSwitch.initialize(preloadedData.spPageContextInfo.killSwitches);
        }
        if (!SPStarter._isBrowserSupported()) {
            var error = new Error(SPLoader_resx_1.default.browserNotSupportedError);
            sp_telemetry_1._TraceLogger.logError(telemetryConstants_1.spStarterLogSource, error);
            throw error;
        }
        var spLoader = require('./index');
        spLoader.SPComponentLoader.initialize(new SPSystemJsComponentLoader_1.default());
        spLoader.DeveloperTools.initialize(developerToolsLoader);
        return spLoader.SPComponentLoader.start(preloadedData);
    };
    SPStarter._isBrowserSupported = function () {
        var platform = new odsp_utilities_exporter_1.PlatformDetection();
        return !((platform.isFirefox && platform.browserMajor < 44) ||
            platform.isIE9);
    };
    SPStarter._initializeEnvironment = function () {
        var type;
        if (window.location.hostname === 'localhost' ||
            window['ENVIRONMENTTYPE'] &&
                window['ENVIRONMENTTYPE'] === 'Local') {
            type = sp_core_library_1.EnvironmentType.Local;
        }
        else {
            type = sp_core_library_1.EnvironmentType.SharePoint;
        }
        sp_core_library_1.Environment._initialize({ type: type });
    };
    SPStarter._initializeTelemetry = function (preloadedData) {
        var pageContextInfo = preloadedData.spPageContextInfo;
        sp_telemetry_1._Telemetry.initialize(preloadedData.manifests[0].alias, {
            environment: pageContextInfo.env,
            farmLabel: pageContextInfo.farmLabel,
            clientSideApplicationId: preloadedData.clientSideApplicationId,
            siteSubscriptionId: pageContextInfo.siteSubscriptionId,
            version: !!BUILD_NUMBER ? BUILD_NUMBER : preloadedData.manifests[0].version,
            loginName: pageContextInfo.userLoginName,
            systemUserKey: pageContextInfo.systemUserKey,
            currentUICultureName: pageContextInfo.currentUICultureName,
            correlationId: pageContextInfo.CorrelationId,
            enableConsoleLog: SPStarter._isConsoleLogEnabled()
        });
    };
    SPStarter._isConsoleLogEnabled = function () {
        var enableConsoleLog;
        try {
            var queryParams = new sp_core_library_1.UrlQueryParameterCollection(window.location.href);
            enableConsoleLog = queryParams.getValue('enableConsoleLog') === 'true';
        }
        catch (error) {
            enableConsoleLog = false;
        }
        return enableConsoleLog;
    };
    return SPStarter;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SPStarter;
