{"version":3,"sources":["writeManifests/test/WriteManifestsTask.test.ts"],"names":[],"mappings":"AAAA,+BAA+B;;AAE/B,6BAA8B;AAC9B,8DAAwF;AAExF,IAAI,IAAwB,CAAC;AAC7B,IAAM,MAAM,GAA8B,EACzC,CAAC;AAEF,QAAQ,CAAC,0BAA0B,EAAE;IACnC,0CAA0C;IAC1C,UAAU,CAAC;QACT,IAAI,GAAG,IAAI,uCAAkB,EAAE,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qBAAqB,EAAE;QAC9B,EAAE,CAAE,mCAAmC,EAAE;YACvC,IAAM,SAAS,GAAoC;gBACjD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,UAAU,EAAE,UAAU;gBACtB,UAAU,EAAE,UAAU;gBACtB,UAAU,EAAE,UAAU;gBACtB,WAAW,EAAE,WAAW;gBACxB,WAAW,EAAE,WAAW;gBACxB,YAAY,EAAE,YAAY;gBAC1B,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,IAAI;gBACV,YAAY,EAAE,YAAY;gBAC1B,SAAS,EAAE,SAAS;aACrB,CAAC;YAEF,GAAG,CAAC,CAAC,IAAM,SAAS,IAAI,SAAS,CAAC,CAAC,CAAC;gBAClC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBACxC,IAAM,aAAa,GAAW,SAAS,CAAC,SAAS,CAAC,CAAC;oBACnD,aAAM,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE,aAAa,CAAC,CAAC;gBACnE,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"writeManifests/test/WriteManifestsTask.test.js","sourcesContent":["/// <reference types=\"mocha\" />\r\n\r\nimport { assert } from 'chai';\r\nimport { WriteManifestsTask, IWriteManifestsTaskConfig } from './../WriteManifestsTask';\r\n\r\nlet task: WriteManifestsTask;\r\nconst config: IWriteManifestsTaskConfig = {\r\n};\r\n\r\ndescribe('WriteManifestsTask tests', () => {\r\n  // Reset task information before each test\r\n  beforeEach(() => {\r\n    task = new WriteManifestsTask();\r\n    task.mergeConfig(config);\r\n  });\r\n\r\n  describe('normalizeLocaleName', () => {\r\n    it ('correctly normalizes locale names', () => {\r\n      const testPairs: { [testValue: string]: string } = {\r\n        'en-us': 'en-US',\r\n        'en-US': 'en-US',\r\n        'EN-US': 'en-US',\r\n        'qps-ploc': 'qps-ploc',\r\n        'qps-Ploc': 'qps-ploc',\r\n        'qps-PLOC': 'qps-ploc',\r\n        'qps-plocm': 'qps-plocm',\r\n        'qps-ploca': 'qps-ploca',\r\n        'bs-latn-ba': 'bs-Latn-BA',\r\n        'en': 'en',\r\n        'EN': 'en',\r\n        'sr-sp-latn': 'sr-SP-Latn',\r\n        'en-latn': 'en-Latn'\r\n      };\r\n\r\n      for (const testValue in testPairs) {\r\n        if (testPairs.hasOwnProperty(testValue)) {\r\n          const expectedValue: string = testPairs[testValue];\r\n          assert.equal(task.normalizeLocaleName(testValue), expectedValue);\r\n        }\r\n      }\r\n    });\r\n  });\r\n});\r\n"],"sourceRoot":"..\\..\\..\\src"}