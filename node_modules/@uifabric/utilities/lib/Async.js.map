{"version":3,"sources":["Async.ts"],"names":[],"mappings":"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","file":"Async.js","sourcesContent":["/**\r\n * Bugs often appear in async code when stuff gets disposed, but async operations don't get canceled.\r\n * This Async helper class solves these issues by tying async code to the lifetime of a disposable object.\r\n *\r\n * Usage: Anything class extending from BaseModel can access this helper via this.async. Otherwise create a\r\n * new instance of the class and remember to call dispose() during your code's dispose handler.\r\n */\r\n\r\ndeclare function setTimeout(cb: Function, delay: number): number;\r\ndeclare function setInterval(cb: Function, delay: number): number;\r\n\r\nexport class Async {\r\n  private _timeoutIds = null;\r\n  private _immediateIds = null;\r\n  private _intervalIds = null;\r\n  private _animationFrameIds: { [id: number]: boolean } = null;\r\n  private _isDisposed = false;\r\n  private _parent: any;\r\n  private _onErrorHandler: (e: any) => void;\r\n  private _noop: any;\r\n\r\n  constructor(parent?: any, onError?: (e: any) => void) {\r\n    this._parent = parent || null;\r\n    this._onErrorHandler = onError;\r\n    this._noop = () => { /* do nothing */ };\r\n  }\r\n\r\n  /**\r\n   * Dispose function, clears all async operations.\r\n   */\r\n  public dispose() {\r\n    let id;\r\n\r\n    this._isDisposed = true;\r\n    this._parent = null;\r\n\r\n    // Clear timeouts.\r\n    if (this._timeoutIds) {\r\n      for (id in this._timeoutIds) {\r\n        if (this._timeoutIds.hasOwnProperty(id)) {\r\n          this.clearTimeout(id);\r\n        }\r\n      }\r\n\r\n      this._timeoutIds = null;\r\n    }\r\n\r\n    // Clear immediates.\r\n    if (this._immediateIds) {\r\n      for (id in this._immediateIds) {\r\n        if (this._immediateIds.hasOwnProperty(id)) {\r\n          this.clearImmediate(id);\r\n        }\r\n      }\r\n\r\n      this._immediateIds = null;\r\n    }\r\n\r\n    // Clear intervals.\r\n    if (this._intervalIds) {\r\n      for (id in this._intervalIds) {\r\n        if (this._intervalIds.hasOwnProperty(id)) {\r\n          this.clearInterval(id);\r\n        }\r\n      }\r\n      this._intervalIds = null;\r\n    }\r\n\r\n    // Clear animation frames.\r\n    if (this._animationFrameIds) {\r\n      for (id in this._animationFrameIds) {\r\n        if (this._animationFrameIds.hasOwnProperty(id)) {\r\n          this.cancelAnimationFrame(id);\r\n        }\r\n      }\r\n\r\n      this._animationFrameIds = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * SetTimeout override, which will auto cancel the timeout during dispose.\r\n   * @param callback Callback to execute.\r\n   * @param duration Duration in milliseconds.\r\n   * @return The setTimeout id.\r\n   */\r\n  public setTimeout(callback: () => void, duration: number): number {\r\n\r\n    let timeoutId = 0;\r\n\r\n    if (!this._isDisposed) {\r\n      if (!this._timeoutIds) {\r\n        this._timeoutIds = {};\r\n      }\r\n\r\n      /* tslint:disable:ban-native-functions */\r\n      timeoutId = setTimeout(\r\n        () => {\r\n          // Time to execute the timeout, enqueue it as a foreground task to be executed.\r\n\r\n          try {\r\n            // Now delete the record and call the callback.\r\n            delete this._timeoutIds[timeoutId];\r\n            callback.apply(this._parent);\r\n          } catch (e) {\r\n            if (this._onErrorHandler) {\r\n              this._onErrorHandler(e);\r\n            }\r\n          }\r\n        },\r\n        duration);\r\n      /* tslint:enable:ban-native-functions */\r\n\r\n      this._timeoutIds[timeoutId] = true;\r\n    }\r\n\r\n    return timeoutId;\r\n  }\r\n\r\n  /**\r\n   * Clears the timeout.\r\n   * @param id Id to cancel.\r\n   */\r\n  public clearTimeout(id: number) {\r\n\r\n    if (this._timeoutIds && this._timeoutIds[id]) {\r\n      /* tslint:disable:ban-native-functions */\r\n      clearTimeout(id);\r\n      delete this._timeoutIds[id];\r\n      /* tslint:enable:ban-native-functions */\r\n    }\r\n  }\r\n\r\n  /**\r\n   * SetImmediate override, which will auto cancel the immediate during dispose.\r\n   * @param callback Callback to execute.\r\n   * @return The setTimeout id.\r\n   */\r\n  public setImmediate(callback: () => void): number {\r\n\r\n    let immediateId = 0;\r\n\r\n    if (!this._isDisposed) {\r\n      if (!this._immediateIds) {\r\n        this._immediateIds = {};\r\n      }\r\n\r\n      /* tslint:disable:ban-native-functions */\r\n      let setImmediateCallback = () => {\r\n        // Time to execute the timeout, enqueue it as a foreground task to be executed.\r\n\r\n        try {\r\n          // Now delete the record and call the callback.\r\n          delete this._immediateIds[immediateId];\r\n          callback.apply(this._parent);\r\n        } catch (e) {\r\n          this._logError(e);\r\n        }\r\n      };\r\n\r\n      immediateId = window.setImmediate ? window.setImmediate(setImmediateCallback) : window.setTimeout(setImmediateCallback, 0);\r\n      /* tslint:enable:ban-native-functions */\r\n\r\n      this._immediateIds[immediateId] = true;\r\n    }\r\n\r\n    return immediateId;\r\n  }\r\n\r\n  /**\r\n   * Clears the immediate.\r\n   * @param id Id to cancel.\r\n   */\r\n  public clearImmediate(id: number) {\r\n\r\n    if (this._immediateIds && this._immediateIds[id]) {\r\n      /* tslint:disable:ban-native-functions */\r\n      window.clearImmediate ? window.clearImmediate(id) : window.clearTimeout(id);\r\n      delete this._immediateIds[id];\r\n      /* tslint:enable:ban-native-functions */\r\n    }\r\n  }\r\n\r\n  /**\r\n   * SetInterval override, which will auto cancel the timeout during dispose.\r\n   * @param callback Callback to execute.\r\n   * @param duration Duration in milliseconds.\r\n   * @return The setTimeout id.\r\n   */\r\n  public setInterval(callback: () => void, duration: number): number {\r\n    let intervalId = 0;\r\n\r\n    if (!this._isDisposed) {\r\n      if (!this._intervalIds) {\r\n        this._intervalIds = {};\r\n      }\r\n\r\n      /* tslint:disable:ban-native-functions */\r\n      intervalId = setInterval(\r\n        () => {\r\n          // Time to execute the interval callback, enqueue it as a foreground task to be executed.\r\n          try {\r\n            callback.apply(this._parent);\r\n          } catch (e) {\r\n            this._logError(e);\r\n          }\r\n        },\r\n        duration);\r\n      /* tslint:enable:ban-native-functions */\r\n\r\n      this._intervalIds[intervalId] = true;\r\n    }\r\n\r\n    return intervalId;\r\n  }\r\n\r\n  /**\r\n   * Clears the interval.\r\n   * @param id Id to cancel.\r\n   */\r\n  public clearInterval(id: number) {\r\n    if (this._intervalIds && this._intervalIds[id]) {\r\n      /* tslint:disable:ban-native-functions */\r\n      clearInterval(id);\r\n      delete this._intervalIds[id];\r\n      /* tslint:enable:ban-native-functions */\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a function that, when executed, will only call the func function at most once per\r\n   * every wait milliseconds. Provide an options object to indicate that func should be invoked\r\n   * on the leading and/or trailing edge of the wait timeout. Subsequent calls to the throttled\r\n   * function will return the result of the last func call.\r\n   *\r\n   * Note: If leading and trailing options are true func will be called on the trailing edge of\r\n   * the timeout only if the the throttled function is invoked more than once during the wait timeout.\r\n   *\r\n   * @param func The function to throttle.\r\n   * @param wait The number of milliseconds to throttle executions to. Defaults to 0.\r\n   * @param options The options object.\r\n   * @param options.leading Specify execution on the leading edge of the timeout.\r\n   * @param options.trailing Specify execution on the trailing edge of the timeout.\r\n   * @return The new throttled function.\r\n   */\r\n  public throttle<T extends Function>(func: T, wait?: number, options?: {\r\n    leading?: boolean;\r\n    trailing?: boolean;\r\n  }): T {\r\n\r\n    if (this._isDisposed) {\r\n      return this._noop;\r\n    }\r\n\r\n    let waitMS = wait || 0;\r\n    let leading = true;\r\n    let trailing = true;\r\n    let lastExecuteTime = 0;\r\n    let lastResult;\r\n    let lastArgs: any[];\r\n    let timeoutId: number = null;\r\n\r\n    if (options && typeof (options.leading) === 'boolean') {\r\n      leading = options.leading;\r\n    }\r\n\r\n    if (options && typeof (options.trailing) === 'boolean') {\r\n      trailing = options.trailing;\r\n    }\r\n\r\n    let callback = (userCall?: boolean) => {\r\n      let now = (new Date).getTime();\r\n      let delta = now - lastExecuteTime;\r\n      let waitLength = leading ? waitMS - delta : waitMS;\r\n      if (delta >= waitMS && (!userCall || leading)) {\r\n        lastExecuteTime = now;\r\n        if (timeoutId) {\r\n          this.clearTimeout(timeoutId);\r\n          timeoutId = null;\r\n        }\r\n        lastResult = func.apply(this._parent, lastArgs);\r\n      } else if (timeoutId === null && trailing) {\r\n        timeoutId = this.setTimeout(callback, waitLength);\r\n      }\r\n\r\n      return lastResult;\r\n    };\r\n\r\n    let resultFunction: any = (...args: any[]) => {\r\n      lastArgs = args;\r\n      return callback(true);\r\n    };\r\n\r\n    return resultFunction;\r\n  }\r\n\r\n  /**\r\n   * Creates a function that will delay the execution of func until after wait milliseconds have\r\n   * elapsed since the last time it was invoked. Provide an options object to indicate that func\r\n   * should be invoked on the leading and/or trailing edge of the wait timeout. Subsequent calls\r\n   * to the debounced function will return the result of the last func call.\r\n   *\r\n   * Note: If leading and trailing options are true func will be called on the trailing edge of\r\n   * the timeout only if the the debounced function is invoked more than once during the wait\r\n   * timeout.\r\n   *\r\n   * @param func The function to debounce.\r\n   * @param wait The number of milliseconds to delay.\r\n   * @param options The options object.\r\n   * @param options.leading Specify execution on the leading edge of the timeout.\r\n   * @param options.maxWait The maximum time func is allowed to be delayed before it's called.\r\n   * @param options.trailing Specify execution on the trailing edge of the timeout.\r\n   * @return The new debounced function.\r\n   */\r\n  public debounce<T extends Function>(func: T, wait?: number, options?: {\r\n    leading?: boolean;\r\n    maxWait?: number;\r\n    trailing?: boolean;\r\n  }): T {\r\n\r\n    if (this._isDisposed) {\r\n      return this._noop;\r\n    }\r\n\r\n    let waitMS = wait || 0;\r\n    let leading = false;\r\n    let trailing = true;\r\n    let maxWait = null;\r\n    let lastCallTime = 0;\r\n    let lastExecuteTime = (new Date).getTime();\r\n    let lastResult;\r\n    let lastArgs: any[];\r\n    let timeoutId: number = null;\r\n\r\n    if (options && typeof (options.leading) === 'boolean') {\r\n      leading = options.leading;\r\n    }\r\n\r\n    if (options && typeof (options.trailing) === 'boolean') {\r\n      trailing = options.trailing;\r\n    }\r\n\r\n    if (options && typeof (options.maxWait) === 'number' && !isNaN(options.maxWait)) {\r\n      maxWait = options.maxWait;\r\n    }\r\n\r\n    let callback = (userCall?: boolean) => {\r\n      let now = (new Date).getTime();\r\n      let executeImmediately = false;\r\n      if (userCall) {\r\n        if (leading && now - lastCallTime >= waitMS) {\r\n          executeImmediately = true;\r\n        }\r\n        lastCallTime = now;\r\n      }\r\n      let delta = now - lastCallTime;\r\n      let waitLength = waitMS - delta;\r\n      let maxWaitDelta = now - lastExecuteTime;\r\n      let maxWaitExpired = false;\r\n\r\n      if (maxWait !== null) {\r\n        // maxWait only matters when there is a pending callback\r\n        if (maxWaitDelta >= maxWait && timeoutId) {\r\n          maxWaitExpired = true;\r\n        } else {\r\n          waitLength = Math.min(waitLength, maxWait - maxWaitDelta);\r\n        }\r\n      }\r\n\r\n      if (delta >= waitMS || maxWaitExpired || executeImmediately) {\r\n        if (timeoutId) {\r\n          this.clearTimeout(timeoutId);\r\n          timeoutId = null;\r\n        }\r\n        lastExecuteTime = now;\r\n        lastResult = func.apply(this._parent, lastArgs);\r\n      } else if ((timeoutId === null || !userCall) && trailing) {\r\n        timeoutId = this.setTimeout(callback, waitLength);\r\n      }\r\n\r\n      return lastResult;\r\n    };\r\n\r\n    let resultFunction: any = (...args: any[]) => {\r\n      lastArgs = args;\r\n      return callback(true);\r\n    };\r\n\r\n    return resultFunction;\r\n  }\r\n\r\n  public requestAnimationFrame(callback: () => void): number {\r\n    let animationFrameId = 0;\r\n\r\n    if (!this._isDisposed) {\r\n      if (!this._animationFrameIds) {\r\n        this._animationFrameIds = {};\r\n      }\r\n\r\n      /* tslint:disable:ban-native-functions */\r\n      let animationFrameCallback = () => {\r\n        try {\r\n          // Now delete the record and call the callback.\r\n          delete this._animationFrameIds[animationFrameId];\r\n          callback.apply(this._parent);\r\n        } catch (e) {\r\n          this._logError(e);\r\n        }\r\n      };\r\n\r\n      animationFrameId = window.requestAnimationFrame ?\r\n        window.requestAnimationFrame(animationFrameCallback) :\r\n        window.setTimeout(animationFrameCallback, 0);\r\n      /* tslint:enable:ban-native-functions */\r\n\r\n      this._animationFrameIds[animationFrameId] = true;\r\n    }\r\n\r\n    return animationFrameId;\r\n  }\r\n\r\n  public cancelAnimationFrame(id: number) {\r\n    if (this._animationFrameIds && this._animationFrameIds[id]) {\r\n      /* tslint:disable:ban-native-functions */\r\n      window.cancelAnimationFrame ? window.cancelAnimationFrame(id) : window.clearTimeout(id);\r\n      /* tslint:enable:ban-native-functions */\r\n      delete this._animationFrameIds[id];\r\n    }\r\n  }\r\n\r\n  protected _logError(e: any) {\r\n    if (this._onErrorHandler) {\r\n      this._onErrorHandler(e);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\src"}