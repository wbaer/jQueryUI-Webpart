"use strict";
var chai_1 = require("chai");
var enzyme_1 = require("enzyme");
var React = require("react");
var SPRteLinkDialog_1 = require("../formattingbar/SPRteLinkDialog");
var office_ui_fabric_react_1 = require("office-ui-fabric-react");
describe('SPRteLinkDialog tests', function () {
    var linkDialogElement;
    var mockProps;
    var onDismiss;
    var onSaveClicked;
    var onCancelClicked;
    var editableDiv;
    var URL_VALIDATION_REGEX = new RegExp('((^https?:\/\/)|(^ftp:\/\/)|(^file:\/\/)|(^mailto:)|(^news:)|(^pnm:\/\/)|(^mms:\/\/)|(^\/)|(^#)|(^\\\\)).+', 'i');
    var linkDialog;
    beforeEach(function () {
        onSaveClicked = sinon.spy();
        onCancelClicked = sinon.spy();
        onDismiss = sinon.spy();
        editableDiv = document.createElement('div');
        mockProps = {
            editorElement: editableDiv,
            isOpen: true,
            onDismiss: onDismiss,
            onSaveClicked: onSaveClicked,
            onCancelClicked: onCancelClicked,
            textFieldValue: 'linkDialog',
            validationRegex: URL_VALIDATION_REGEX
        };
        linkDialogElement = enzyme_1.shallow(React.createElement(SPRteLinkDialog_1.default, mockProps));
        linkDialog = linkDialogElement.instance();
    });
    it('should render the dialog expected', function (done) {
        chai_1.expect(linkDialogElement.find(office_ui_fabric_react_1.Dialog).length).to.be.eq(1);
        done();
    });
    it('should render the dialog footer expected', function (done) {
        chai_1.expect(linkDialogElement.find(office_ui_fabric_react_1.DialogFooter).length).to.be.eq(1);
        done();
    });
    it('should render the buttons as expected', function (done) {
        chai_1.expect(linkDialogElement.find(office_ui_fabric_react_1.Button).length).to.be.eq(2);
        done();
    });
    it('should call the click handler for cancel button as expected', function (done) {
        chai_1.expect(linkDialogElement.find("[data-automation-id='cancelButton']").length).to.be.eq(1);
        linkDialogElement.find("[data-automation-id='cancelButton']").simulate('click');
        chai_1.expect(onCancelClicked.calledOnce).to.be.true;
        done();
    });
});
