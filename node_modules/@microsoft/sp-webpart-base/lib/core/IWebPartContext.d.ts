import { IClientSideWebPartManifestInstance } from '@microsoft/sp-module-interfaces';
import { HttpClient, SPHttpClient } from '@microsoft/sp-http';
import { PageContext } from '@microsoft/sp-page-context';
import { IClientSideComponentContext } from '@microsoft/sp-component-base';
import IClientSideWebPartStatusRenderer from './IClientSideWebPartStatusRenderer';
import { IEventAggregator } from './events/IEvent';
import IWebPartHost from './IWebPartHost';
import { IPropertyPaneAccessor } from './context/IPropertyPaneAccessor';
/**
 * The base context interface for client-side web parts.
 *
 * @remarks
 * A "context" object is a collection of well-known services and other
 * objects that are likely to be needed by any business logic working with
 * a component.  Each component type has its own specialized extension of
 * this interface, e.g. IWebPartContext for web parts, ICodePartContext for
 * code parts, etc.
 *
 * @internalremarks
 *
 * NOTE: The context object is a convenience that avoids the overhead of
 * properly factoring the dependencies for each class in your project,
 * in a situation where most classes have essentially the same dependencies.
 * If lots of members are added to the context without displine, it can
 * easily devolve into a poor engineering practice (where "everything depends
 * on everything else").  Think carefully before adding more objects to this
 * interface.
 *
 * Only add data properties or well-defined classes with ubiquitous applicability.
 * Do not add loose functions, callbacks, or settable properties.
 *
 * @public
 */
interface IWebPartContext extends IClientSideComponentContext {
    /**
     * Manifest for the client side web part.
     * @internalremarks
     * This augments the type from IClientSideComponentContext.manifest.
     */
    readonly manifest: IClientSideWebPartManifestInstance<any>;
    /**
     * Web part instance id. This is a globally unique value.
     */
    readonly instanceId: string;
    /**
     * Web part tag to be used for logging and telemetry.
     */
    readonly webPartTag: string;
    /**
     * Reference to the DOM element that hosts this client side component.
     */
    readonly domElement: HTMLElement;
    /**
     * SPHttpClient instance scoped to this web part.
     */
    spHttpClient: SPHttpClient;
    /**
     * HttpClient instance scoped to this web part.
     */
    httpClient: HttpClient;
    /**
     * SharePoint page context.
     */
    readonly pageContext: PageContext;
    /**
     * Web part status renderer.
     */
    readonly statusRenderer: IClientSideWebPartStatusRenderer;
    /**
     * Accessor for common web part property pane operations.
     */
    readonly propertyPane: IPropertyPaneAccessor;
    /**
     * Web part event aggregator.
     *
     * @internal
     */
    readonly eventAggregator: IEventAggregator;
    /**
     * Web part host.
     *
     * @internal
     */
    readonly host: IWebPartHost;
}
export default IWebPartContext;
