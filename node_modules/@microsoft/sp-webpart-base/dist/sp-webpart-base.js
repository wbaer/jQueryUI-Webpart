define("974a7777-0990-4136-8fa6-95d80114c2e0_0.0.1", ["@microsoft/decorators","@microsoft/sp-lodash-subset","@ms/sp-telemetry","@microsoft/sp-core-library","resx-strings","@microsoft/sp-loader","@microsoft/sp-http","@microsoft/sp-page-context","react-dom","react","office-ui-fabric-react","@microsoft/sp-client-base","@microsoft/sp-component-base"], function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_23__, __WEBPACK_EXTERNAL_MODULE_25__, __WEBPACK_EXTERNAL_MODULE_26__, __WEBPACK_EXTERNAL_MODULE_28__, __WEBPACK_EXTERNAL_MODULE_40__, __WEBPACK_EXTERNAL_MODULE_65__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp974a7777_0990_4136_8fa6_95d80114c2e0_0_0_1"];
/******/ 	window["webpackJsonp974a7777_0990_4136_8fa6_95d80114c2e0_0_0_1"] = function webpackJsonpCallback(chunkIds, moreModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, callbacks = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId])
/******/ 				callbacks.push.apply(callbacks, installedChunks[chunkId]);
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			modules[moduleId] = moreModules[moduleId];
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);
/******/ 		while(callbacks.length)
/******/ 			callbacks.shift().call(null, __webpack_require__);
/******/
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// "0" means "already loaded"
/******/ 	// Array means "loading", array contains callbacks
/******/ 	var installedChunks = {
/******/ 		0:0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] === 0)
/******/ 			return callback.call(null, __webpack_require__);
/******/
/******/ 		// an array means "currently loading".
/******/ 		if(installedChunks[chunkId] !== undefined) {
/******/ 			installedChunks[chunkId].push(callback);
/******/ 		} else {
/******/ 			// start chunk loading
/******/ 			installedChunks[chunkId] = [callback];
/******/ 			var head = document.getElementsByTagName('head')[0];
/******/ 			var script = document.createElement('script');
/******/ 			script.type = 'text/javascript';
/******/ 			script.charset = 'utf-8';
/******/ 			script.async = true;
/******/
/******/ 			script.src = __webpack_require__.p + "" + chunkId + "." + ({"1":"sp-webpart-base-propertypane"}[chunkId]||chunkId) + "_" + {"1":"ca60b981aba0b7ac1c56"}[chunkId] + ".js";
/******/ 			head.appendChild(script);
/******/ 		}
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(1);
	var PropertyPaneDefinitions_1 = __webpack_require__(2);
	exports.WebPartConfigurationEvent = PropertyPaneDefinitions_1.WebPartConfigurationEvent;
	var BaseClientSideWebPart_1 = __webpack_require__(3);
	exports.BaseClientSideWebPart = BaseClientSideWebPart_1.default;
	var ClientSideWebPartManager_1 = __webpack_require__(20);
	exports.ClientSideWebPartManager = ClientSideWebPartManager_1.default;
	var ReactWebPart_1 = __webpack_require__(67);
	exports.ReactWebPart = ReactWebPart_1.default;
	var ReservedEventNames_1 = __webpack_require__(33);
	exports.ReservedEventNames = ReservedEventNames_1.default;
	var WebPartDataConverter_1 = __webpack_require__(68);
	exports.WebPartDataConverter = WebPartDataConverter_1.default;
	var EventAggregator_1 = __webpack_require__(32);
	exports.EventAggregator = EventAggregator_1.default;
	var Placeholder_1 = __webpack_require__(70);
	exports.Placeholder = Placeholder_1.default;
	var PlaceholderSpinner_1 = __webpack_require__(27);
	exports.PlaceholderSpinner = PlaceholderSpinner_1.default;
	var WebPartForm_1 = __webpack_require__(73);
	exports.WebPartForm = WebPartForm_1.default;
	var PropertyPaneDefinitions_2 = __webpack_require__(2);
	exports.PropertyPaneState = PropertyPaneDefinitions_2.PropertyPaneState;
	var IPropertyPaneField_1 = __webpack_require__(45);
	exports.PropertyPaneFieldType = IPropertyPaneField_1.PropertyPaneFieldType;
	var PropertyPaneCustomField_1 = __webpack_require__(74);
	exports.PropertyPaneCustomField = PropertyPaneCustomField_1.PropertyPaneCustomField;
	var IPropertyPaneButton_1 = __webpack_require__(75);
	exports.PropertyPaneButtonType = IPropertyPaneButton_1.PropertyPaneButtonType;
	var PropertyPaneButton_1 = __webpack_require__(76);
	exports.PropertyPaneButton = PropertyPaneButton_1.PropertyPaneButton;
	var PropertyPaneCheckbox_1 = __webpack_require__(77);
	exports.PropertyPaneCheckbox = PropertyPaneCheckbox_1.PropertyPaneCheckbox;
	var PropertyPaneChoiceGroup_1 = __webpack_require__(78);
	exports.PropertyPaneChoiceGroup = PropertyPaneChoiceGroup_1.PropertyPaneChoiceGroup;
	var PropertyPaneDropdown_1 = __webpack_require__(79);
	exports.PropertyPaneDropdown = PropertyPaneDropdown_1.PropertyPaneDropdown;
	var PropertyPaneHorizontalRule_1 = __webpack_require__(80);
	exports.PropertyPaneHorizontalRule = PropertyPaneHorizontalRule_1.PropertyPaneHorizontalRule;
	var PropertyPaneLabel_1 = __webpack_require__(81);
	exports.PropertyPaneLabel = PropertyPaneLabel_1.PropertyPaneLabel;
	var PropertyPaneLink_1 = __webpack_require__(82);
	exports.PropertyPaneLink = PropertyPaneLink_1.PropertyPaneLink;
	var PropertyPaneSlider_1 = __webpack_require__(83);
	exports.PropertyPaneSlider = PropertyPaneSlider_1.PropertyPaneSlider;
	var PropertyPaneTextField_1 = __webpack_require__(84);
	exports.PropertyPaneTextField = PropertyPaneTextField_1.PropertyPaneTextField;
	var PropertyPaneToggle_1 = __webpack_require__(85);
	exports.PropertyPaneToggle = PropertyPaneToggle_1.PropertyPaneToggle;
	var BasePropertyPaneControl_1 = __webpack_require__(86);
	exports.BasePropertyPaneControl = BasePropertyPaneControl_1.default;


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var scripts = document.getElementsByTagName('script');
	var regex = new RegExp('ScriptLoadName-DoNotChange', 'i');
	var found = false;
	
	if (scripts && scripts.length) {
	  for (var i = 0; i < scripts.length; i++) {
	    if (!scripts[i]) continue;
	    var path = scripts[i].getAttribute('src');
	    if (path && path.match(regex)) {
	      __webpack_require__.p = path.substring(0, path.lastIndexOf('/') + 1);
	      found = true;
	      break;
	    }
	  }
	}
	
	if (!found) {
	  for (var global in window.__setWebpackPublicPathLoaderSrcRegistry__) {
	    if (global && global.match(regex)) {
	      __webpack_require__.p = global.substring(0, global.lastIndexOf('/') + 1);
	      break;
	    }
	  }
	}

/***/ },
/* 2 */
/***/ function(module, exports) {

	"use strict";
	var WebPartConfigurationEvent;
	(function (WebPartConfigurationEvent) {
	    WebPartConfigurationEvent[WebPartConfigurationEvent["PropertyPaneConfigurationStart"] = 1] = "PropertyPaneConfigurationStart";
	    WebPartConfigurationEvent[WebPartConfigurationEvent["PropertyPaneConfigurationComplete"] = 2] = "PropertyPaneConfigurationComplete";
	    WebPartConfigurationEvent[WebPartConfigurationEvent["PropertyPaneOpened"] = 3] = "PropertyPaneOpened";
	    WebPartConfigurationEvent[WebPartConfigurationEvent["PropertyPaneClosed"] = 4] = "PropertyPaneClosed";
	    WebPartConfigurationEvent[WebPartConfigurationEvent["PropertyPaneApplyClicked"] = 5] = "PropertyPaneApplyClicked";
	    WebPartConfigurationEvent[WebPartConfigurationEvent["PropertyPaneLostFocus"] = 6] = "PropertyPaneLostFocus";
	    WebPartConfigurationEvent[WebPartConfigurationEvent["PropertyPaneWebPartsSwitched"] = 7] = "PropertyPaneWebPartsSwitched";
	})(WebPartConfigurationEvent = exports.WebPartConfigurationEvent || (exports.WebPartConfigurationEvent = {}));
	var PropertyPaneState;
	(function (PropertyPaneState) {
	    PropertyPaneState[PropertyPaneState["Open"] = 1] = "Open";
	    PropertyPaneState[PropertyPaneState["Close"] = 2] = "Close";
	    PropertyPaneState[PropertyPaneState["Toggle"] = 3] = "Toggle";
	    PropertyPaneState[PropertyPaneState["Default"] = 4] = "Default";
	    PropertyPaneState[PropertyPaneState["Refresh"] = 5] = "Refresh";
	})(PropertyPaneState = exports.PropertyPaneState || (exports.PropertyPaneState = {}));


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var decorators_1 = __webpack_require__(4);
	var lodash = __webpack_require__(5);
	var sp_telemetry_1 = __webpack_require__(6);
	var sp_core_library_1 = __webpack_require__(7);
	var PropertyPaneDefinitions_1 = __webpack_require__(2);
	var SPWebPartError_1 = __webpack_require__(8);
	var Object_1 = __webpack_require__(11);
	var ExecuteAndReThrow_1 = __webpack_require__(12);
	var ClassicPageUtils_1 = __webpack_require__(13);
	var ViewportLoader_1 = __webpack_require__(14);
	var Strings_resx_1 = __webpack_require__(9);
	var cswp_base_module_scss_1 = __webpack_require__(15);
	var WEBPARTLOADINVIEWPORTFLIGHT = 33;
	var BaseClientSideWebPart = (function () {
	    function BaseClientSideWebPart() {
	        this._initialized = false;
	        this._logSource = sp_telemetry_1._LogSource.create('BaseClientSideWebPart');
	        this._isInViewport = false;
	        if (this.constructor['name'] === 'BaseClientSideWebPart') {
	            throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.BaseConstructError);
	        }
	    }
	    Object.defineProperty(BaseClientSideWebPart.prototype, "context", {
	        get: function () {
	            if (this._initialized) {
	                return this._context;
	            }
	            else {
	                throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.NotInitializedError);
	            }
	        },
	        set: function (o) { this._throwReadOnlyError(); },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "domElement", {
	        get: function () { return this._context.domElement; },
	        set: function (o) { this._throwReadOnlyError(); },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "width", {
	        get: function () { return this.domElement.clientWidth; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "dataVersion", {
	        get: function () {
	            return sp_core_library_1.Version.parse('1.0');
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ;
	    Object.defineProperty(BaseClientSideWebPart.prototype, "displayMode", {
	        get: function () { return this._displayMode; },
	        set: function (o) { this._throwReadOnlyError(); },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "properties", {
	        get: function () {
	            if (this._initialized) {
	                return this._properties;
	            }
	            else {
	                throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.NotInitializedError);
	            }
	        },
	        set: function (o) { this._throwReadOnlyError(); },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "propertiesMetadata", {
	        get: function () { return undefined; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "renderedOnce", {
	        get: function () { return this._renderedOnce; },
	        set: function (o) { this._throwReadOnlyError(); },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "renderedFromPersistedData", {
	        get: function () { return this._renderedFromPersistedData; },
	        set: function (o) { this._throwReadOnlyError(); },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "canOpenPopupOnRender", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "disableReactivePropertyChanges", {
	        get: function () { return false; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "previewImageUrl", {
	        get: function () { return undefined; },
	        set: function (o) { this._throwReadOnlyError(); },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "accessibleTitle", {
	        get: function () { return this._getDefaultAccessibleTitle(); },
	        set: function (o) { this._throwReadOnlyError(); },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "title", {
	        get: function () { return this._title; },
	        set: function (o) { this._throwReadOnlyError(); },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "description", {
	        get: function () { return this._description; },
	        set: function (o) { this._throwReadOnlyError(); },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "isRenderAsync", {
	        get: function () { return false; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "instanceId", {
	        set: function (o) { this._throwReadOnlyError(); },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseClientSideWebPart.prototype, "propertyPaneRenderedByWebPart", {
	        set: function (o) { this._throwReadOnlyError(); },
	        enumerable: true,
	        configurable: true
	    });
	    BaseClientSideWebPart.prototype.onInit = function () {
	        return Promise.resolve(undefined);
	    };
	    BaseClientSideWebPart.prototype.renderCompleted = function () {
	        this._renderCompleted();
	    };
	    BaseClientSideWebPart.prototype.onDisplayModeChanged = function (oldDisplayMode) {
	        sp_core_library_1.Validate.isTrue(oldDisplayMode !== this.displayMode, Strings_resx_1.default.OnDisplayModeChangedInvalidInvocation);
	        this._renderWithAccessibileTitle();
	    };
	    BaseClientSideWebPart.prototype.onBeforeSerialize = function () {
	        return undefined;
	    };
	    BaseClientSideWebPart.prototype.onAfterDeserialize = function (deserializedObject, dataVersion) {
	        return deserializedObject;
	    };
	    ;
	    BaseClientSideWebPart.prototype.onEvent = function (eventName, eventObject) {
	    };
	    BaseClientSideWebPart.prototype.getPropertyPaneConfiguration = function () {
	        return undefined; 
	    };
	    BaseClientSideWebPart.prototype.onDispose = function () {
	        if (sp_core_library_1._SPFlight.isEnabled(WEBPARTLOADINVIEWPORTFLIGHT) && !this.context.host.isViewportLoadingDisabled
	            && !this._isInViewport) {
	            BaseClientSideWebPart._viewportLoader.unregister(this);
	        }
	    };
	    BaseClientSideWebPart.prototype.onPropertyPaneFieldChanged = function (propertyPath, oldValue, newValue) {
	        if (!this.disableReactivePropertyChanges) {
	            this._renderWithAccessibileTitle();
	        }
	    };
	    BaseClientSideWebPart.prototype.onPropertyPaneConfigurationStart = function () {
	    };
	    BaseClientSideWebPart.prototype.onPropertyPaneConfigurationComplete = function () {
	    };
	    BaseClientSideWebPart.prototype.onAfterPropertyPaneChangesApplied = function () {
	    };
	    BaseClientSideWebPart.prototype.onPropertyPaneRendered = function () {
	    };
	    BaseClientSideWebPart.prototype.onAfterResize = function (newWidth) {
	    };
	    BaseClientSideWebPart.prototype.renderError = function (error) {
	        this.context.statusRenderer.clearLoadingIndicator(this.domElement);
	        this.context.statusRenderer.renderError(this.domElement, error);
	        sp_telemetry_1._TraceLogger.logError(this._logSource, error);
	    };
	    BaseClientSideWebPart.prototype.clearError = function () {
	        this.context.statusRenderer.clearError(this.domElement);
	    };
	    BaseClientSideWebPart.prototype._reInstateServerProcessedData = function (deserializedProperties, serverProcessedContent) {
	        var _this = this;
	        if (!deserializedProperties) {
	            return {};
	        }
	        var fixedProperties = deserializedProperties;
	        if (!this.renderedFromPersistedData) {
	            return fixedProperties;
	        }
	        this._forEachPropertyWithMetaData(function (propPath, metadata) {
	            if (_this.context.manifest.id !== 'b7dd04e1-19ce-4b24-9132-b60a1c2b910d') {
	                lodash.set(fixedProperties, propPath, undefined);
	            }
	        }, fixedProperties);
	        if (serverProcessedContent) {
	            var htmlMaps = [serverProcessedContent.htmlStrings, serverProcessedContent.imageSources, serverProcessedContent.links];
	            for (var _i = 0, htmlMaps_1 = htmlMaps; _i < htmlMaps_1.length; _i++) {
	                var htmlMap = htmlMaps_1[_i];
	                if (htmlMap) {
	                    for (var propPath in htmlMap) {
	                        var value = htmlMap[propPath];
	                        if (typeof value === 'string') {
	                            lodash.set(fixedProperties, propPath, value);
	                        }
	                    }
	                }
	            }
	        }
	        return fixedProperties;
	    };
	    BaseClientSideWebPart.prototype._forEachPropertyWithMetaData = function (callback, properties ) {
	        if (this.propertiesMetadata) {
	            for (var propPath in this.propertiesMetadata) {
	                var metadata = this.propertiesMetadata[propPath];
	                var wildcardCount = (propPath.match(/\*/g) || []).length;
	                if (wildcardCount > 1) {
	                    console.warn("Invalid property path: Multiple wildcards are not supported in property paths.\n Entry with path '" + propPath + "' got ignored in the properties metadata.");
	                    continue;
	                }
	                else if (wildcardCount === 1) {
	                    var index = propPath.indexOf('[*]');
	                    if (index < -1) {
	                        console.warn("Invalid property path: Wildcards are only supported inside brackets to select array\n indices as in 'foo[*].bar'. Entry with path '" + propPath + "' got ignored in the properties metadata.");
	                        continue;
	                    }
	                    else {
	                        var arrayPath = propPath.substr(0, index);
	                        var arrayInstance = lodash.get(properties || this.properties, arrayPath);
	                        if (!arrayInstance) {
	                            console.warn("Invalid property path: Could not find an array named '" + arrayPath + "' in the properties.\n Entry with path '" + propPath + "' got ignored in the properties metadata.");
	                            continue;
	                        }
	                        else {
	                            for (var i = 0; i < arrayInstance.length; i++) {
	                                var fixedPropPath = propPath.replace('*', "" + i);
	                                callback(fixedPropPath, metadata);
	                            }
	                        }
	                    }
	                }
	                else {
	                    callback(propPath, metadata);
	                }
	            }
	        }
	    };
	    BaseClientSideWebPart.prototype._deserialize = function (data) {
	        return this._reInstateServerProcessedData(data.properties, data.serverProcessedContent);
	    };
	    BaseClientSideWebPart.prototype._internalInitialize = function (webPartContext) {
	        sp_core_library_1.Validate.isNotNullOrUndefined(webPartContext, 'webPartContext');
	        var context = webPartContext;
	        this._processInputParams(context);
	        sp_telemetry_1._TraceLogger.logVerbose(this._logSource, sp_core_library_1.Text.format(Strings_resx_1.default.ConstructLog, context.webPartTag));
	        this._renderedOnce = false;
	        this['__type'] = 'BaseClientSideWebPart';
	        this.render = this.render.bind(this);
	        this.onDispose = this.onDispose.bind(this);
	        this.renderError = this.renderError.bind(this);
	        this.clearError = this.clearError.bind(this);
	        this.renderCompleted = this.renderCompleted.bind(this);
	        this.onPropertyPaneRendered = this.onPropertyPaneRendered.bind(this);
	        this._initialized = true;
	    };
	    BaseClientSideWebPart.prototype._internalDeserialize = function (data) {
	        if (data) {
	            if (data.title) {
	                this._title = data.title;
	            }
	            if (data.description) {
	                this._description = data.description;
	            }
	            if (typeof data.dataVersion !== 'string') {
	                data.dataVersion = '1.0';
	            }
	            var deserializedData = {
	                properties: data.properties,
	                serverProcessedContent: data.serverProcessedContent,
	                dataVersion: sp_core_library_1.Version.tryParse(data.dataVersion)
	            };
	            var deserializedPropsObject = this._deserialize(deserializedData);
	            var fixedProps = this.onAfterDeserialize(deserializedPropsObject, deserializedData.dataVersion);
	            if (!fixedProps) {
	                throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.OnAfterDeserializeReturnedNull, this.context.webPartTag);
	            }
	            this._properties = fixedProps;
	        }
	    };
	    BaseClientSideWebPart.prototype._internalFirstTimeRender = function (addedFromPersistedData, mode, qosMonitor, data) {
	        var _this = this;
	        if (mode === void 0) { mode = sp_core_library_1.DisplayMode.Read; }
	        if (this._renderPromiseResolver) {
	            throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.FirstTimeRenderCalledMoreThanOnce, this.context.webPartTag);
	        }
	        sp_telemetry_1._TraceLogger.logVerboseData({
	            source: this._logSource,
	            message: sp_core_library_1.Text.format(Strings_resx_1.default.StartedFirstTimeRender, this.context.webPartTag),
	            serviceScope: this.context.serviceScope
	        });
	        return new Promise(function (resolve) {
	            if (!_this._initialized && qosMonitor) {
	                qosMonitor.writeUnexpectedFailure('BaseConstructorNotCalled');
	                throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.NotInitializedError, _this.context.webPartTag);
	            }
	            _this._displayMode = mode;
	            _this._renderedFromPersistedData = addedFromPersistedData;
	            if (!_this._renderedFromPersistedData) {
	                var isInternal = _this.context.manifest.isInternal || false;
	                var logEntry = new sp_telemetry_1._LogEntry(_this._logSource.id, 'WebPartAdded', sp_telemetry_1._LogType.Event, {
	                    'alias': _this.context.manifest.alias,
	                    'isInternal': isInternal.toString()
	                });
	                sp_telemetry_1._EngagementLogger.logEventWithLogEntry(logEntry);
	            }
	            if (data) {
	                _this._internalDeserialize(data);
	            }
	            if (!_this._properties && qosMonitor) {
	                qosMonitor.writeUnexpectedFailure('PropertyBagNull');
	                throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.PropertyBagNull, _this.context.webPartTag);
	            }
	            _this._renderPromiseResolver = resolve;
	            if (sp_core_library_1._SPFlight.isEnabled(WEBPARTLOADINVIEWPORTFLIGHT) && !_this.context.host.isViewportLoadingDisabled) {
	                sp_telemetry_1._PerformanceLogger.markComponent(_this.context.webPartTag, 'loadingDelayed');
	                BaseClientSideWebPart._viewportLoader.register(_this);
	            }
	            else {
	                _this._internalRenderInViewPort();
	            }
	        });
	    };
	    BaseClientSideWebPart.prototype._internalRenderInViewPort = function () {
	        var _this = this;
	        if (sp_core_library_1._SPFlight.isEnabled(WEBPARTLOADINVIEWPORTFLIGHT) && !this.context.host.isViewportLoadingDisabled) {
	            sp_telemetry_1._PerformanceLogger.markComponent(this.context.webPartTag, 'inViewportLoading');
	        }
	        var promise = this.onInit();
	        if (!promise) {
	            throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.OnInitReturnedNullPromise, this.context.webPartTag);
	        }
	        promise.then(function () {
	            sp_telemetry_1._TraceLogger.logVerboseData({
	                source: _this._logSource,
	                message: sp_core_library_1.Text.format(Strings_resx_1.default.OnInitCompleted, _this.context.webPartTag),
	                serviceScope: _this.context.serviceScope
	            });
	            sp_telemetry_1._PerformanceLogger.markComponent(_this.context.webPartTag, 'init');
	            _this.context.statusRenderer.clearLoadingIndicator(_this.domElement);
	            _this._renderWithAccessibileTitle();
	            _this._renderedOnce = true;
	            if (!_this.isRenderAsync) {
	                sp_telemetry_1._PerformanceLogger.endMarkForComponent(_this.context.webPartTag);
	                _this._resolveOnRenderPromise();
	            }
	            else {
	                sp_telemetry_1._PerformanceLogger.markComponent(_this.context.webPartTag, 'asyncRenderStart');
	                _this._startAsyncRenderGuardTimer();
	            }
	        });
	    };
	    BaseClientSideWebPart.prototype._internalSetDisplayMode = function (newDisplayMode) {
	        if (this._displayMode !== newDisplayMode) {
	            var oldDisplayMode = this._displayMode;
	            this._displayMode = newDisplayMode;
	            this.onDisplayModeChanged(oldDisplayMode);
	        }
	    };
	    BaseClientSideWebPart.prototype._internalGetPropertyPaneData = function () {
	        if (!this._propertiesBackup) {
	            this._propertiesBackup = lodash.cloneDeep(this.properties);
	        }
	        var configuration = this.getPropertyPaneConfiguration();
	        return {
	            webPartId: this.context.instanceId,
	            title: this.title,
	            isReactive: !this.disableReactivePropertyChanges,
	            configuration: configuration,
	            properties: lodash.cloneDeep(this.properties),
	            onPropertyPaneFieldChanged: undefined,
	            onConfigurationEvent: undefined,
	            onRendered: this.onPropertyPaneRendered
	        };
	    };
	    BaseClientSideWebPart.prototype._internalOnPropertyPaneFieldChanged = function (propertyPath, newValue) {
	        var oldValue = lodash.get(this._properties, propertyPath); 
	        this._updateProperty(propertyPath, newValue);
	        if (this.context.host.setDirty) {
	            this.context.host.setDirty(this.context.instanceId);
	        }
	        this.onPropertyPaneFieldChanged(propertyPath, oldValue, newValue);
	    };
	    BaseClientSideWebPart.prototype._internalOnConfigurationEvent = function (configurationEvent) {
	        switch (configurationEvent) {
	            case PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationStart:
	                this.onPropertyPaneConfigurationStart();
	                break;
	            case PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationComplete:
	                this.onPropertyPaneConfigurationComplete();
	                break;
	            case PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneApplyClicked:
	                if (this.disableReactivePropertyChanges) {
	                    this.render();
	                }
	                this._propertiesBackup = undefined;
	                this.onAfterPropertyPaneChangesApplied();
	                break;
	        }
	    };
	    BaseClientSideWebPart.prototype._internalSetDirtyBit = function () {
	        if (this.displayMode === sp_core_library_1.DisplayMode.Read) {
	            return;
	        }
	        var serializedState = this._internalSerialize();
	        var newState = JSON.stringify(serializedState);
	        if (!this._previousState) {
	            this._previousState = newState;
	        }
	        else if (this._previousState !== newState && this.context.host.setDirty) {
	            this.context.host.setDirty(this.context.instanceId, serializedState);
	            this._previousState = newState;
	        }
	    };
	    BaseClientSideWebPart.prototype._serialize = function () {
	        var serverProcessedContent = {
	            htmlStrings: {},
	            imageSources: {},
	            links: {}
	        };
	        var properties = lodash.cloneDeep(this.properties);
	        this._forEachPropertyWithMetaData(function (propPath, metadata) {
	            var key = propPath;
	            var value = lodash.get(properties, propPath);
	            if (serverProcessedContent && typeof value === 'string' && value !== undefined) {
	                if (serverProcessedContent.htmlStrings && metadata.isHtmlString) {
	                    serverProcessedContent.htmlStrings[key] = value;
	                }
	                else if (serverProcessedContent.links && metadata.isLink) {
	                    serverProcessedContent.links[key] = value;
	                }
	                else if (serverProcessedContent.imageSources && metadata.isImageSource) {
	                    serverProcessedContent.imageSources[key] = value;
	                }
	                lodash.set(properties, propPath, undefined);
	            }
	        });
	        return {
	            dataVersion: this.dataVersion,
	            properties: properties,
	            serverProcessedContent: serverProcessedContent
	        };
	    };
	    BaseClientSideWebPart.prototype._internalSerialize = function () {
	        var _this = this;
	        var data; 
	        ExecuteAndReThrow_1.executeAndReThrow(function () {
	            _this.onBeforeSerialize();
	            var serializedData = _this._serialize();
	            sp_core_library_1.Validate.isNotNullOrUndefined(serializedData.dataVersion, 'serialized data version');
	            data = {
	                id: _this.context.manifest.id,
	                instanceId: _this.context.instanceId,
	                title: _this.title,
	                description: _this.description,
	                serverProcessedContent: serializedData.serverProcessedContent,
	                dataVersion: serializedData.dataVersion.toString(),
	                properties: serializedData.properties
	            };
	        }, SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.SerializationFailed, this.context.webPartTag), this._logSource);
	        return data;
	    };
	    BaseClientSideWebPart.prototype._internalDispose = function () {
	        this.onDispose();
	        sp_telemetry_1._TraceLogger.logVerbose(this._logSource, sp_core_library_1.Text.format(Strings_resx_1.default.DisposeLog, this.context.webPartTag));
	    };
	    BaseClientSideWebPart.prototype._internalOnAfterResize = function () {
	        this.onAfterResize(this.width);
	    };
	    BaseClientSideWebPart.prototype._updateProperty = function (propertyPath, newValue) {
	        lodash.update(this.properties, propertyPath, function () { return newValue; });
	    };
	    BaseClientSideWebPart.prototype._processInputParams = function (context) {
	        sp_core_library_1.Validate.isNotNullOrUndefined(context, 'webpart context');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.domElement, 'webpart element');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.instanceId, 'webpart instanceId');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.manifest, 'webpart manifest');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.webPartTag, 'webpart tag');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.spHttpClient, 'webpart spHttpClient');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.httpClient, 'webpart httpClient');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.pageContext, 'webpart context pageContext');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.eventAggregator, 'webpart context eventAggregator');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.statusRenderer, 'webpart context statusRenderer');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.propertyPane, 'webpart context propertyPane');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.host, 'webpart host');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.serviceScope, 'webpart service scope');
	        Object_1.deepFreeze(context.manifest);
	        this._context = context;
	        this._logEntry = 'BaseClientSideWebPart';
	    };
	    BaseClientSideWebPart.prototype._throwReadOnlyError = function () {
	        throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.ReadOnlyProperty);
	    };
	    BaseClientSideWebPart.prototype._renderWithAccessibileTitle = function () {
	        this.render();
	        var accessibleContext = this.accessibleTitle || this._getDefaultAccessibleTitle();
	        if (accessibleContext) {
	            var contextualLabelId = "cswpAccessibleLabelContextual_" + this.context.instanceId;
	            var accessibleDiv = this.domElement.querySelector("#" + contextualLabelId);
	            var isNewLabelElement = !accessibleDiv;
	            if (isNewLabelElement) {
	                accessibleDiv = document.createElement('div');
	                accessibleDiv.id = contextualLabelId;
	                accessibleDiv.className = cswp_base_module_scss_1.default.screenReaderOnly;
	            }
	            accessibleDiv.textContent = accessibleContext;
	            if (isNewLabelElement) {
	                this.domElement.appendChild(accessibleDiv);
	            }
	            ClassicPageUtils_1.default.disableAutomaticPostbacks(this.domElement, sp_core_library_1.Environment.type);
	        }
	    };
	    BaseClientSideWebPart.prototype._getDefaultAccessibleTitle = function () {
	        return sp_core_library_1.Text.format(Strings_resx_1.default.GenericAccessibleLabelTemplate, this.title);
	    };
	    BaseClientSideWebPart.prototype._startAsyncRenderGuardTimer = function () {
	        var _this = this;
	        this._clearAsyncRenderGuardTimer();
	        this._asyncRenderQosMonitor = new sp_telemetry_1._QosMonitor("WebPartAsyncRender");
	        this._asyncRenderGuardTimer = window.setTimeout(function () {
	            _this._asyncRenderTimeout();
	        }, 25000);
	    };
	    BaseClientSideWebPart.prototype._renderCompleted = function () {
	        if (this._asyncRenderGuardTimer) {
	            this._clearAsyncRenderGuardTimer();
	            this._asyncRenderQosMonitor.writeSuccess({
	                'alias': this.context.manifest.alias,
	                'webPartId': this.context.manifest.id
	            });
	            sp_telemetry_1._TraceLogger.logVerboseData({
	                source: this._logSource,
	                message: sp_core_library_1.Text.format(Strings_resx_1.default.CompletedAsyncRender, this.context.webPartTag),
	                serviceScope: this.context.serviceScope
	            });
	            this._resolveOnRenderPromise();
	        }
	        else {
	            sp_telemetry_1._TraceLogger.logVerboseData({
	                source: this._logSource,
	                message: sp_core_library_1.Text.format(Strings_resx_1.default.CompletedAsyncRender, this.context.webPartTag),
	                serviceScope: this.context.serviceScope
	            });
	        }
	    };
	    BaseClientSideWebPart.prototype._asyncRenderTimeout = function () {
	        if (this._asyncRenderGuardTimer) {
	            this._clearAsyncRenderGuardTimer();
	            var error = SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.RenderCompletedCallNotCalled, this.context.webPartTag);
	            sp_telemetry_1._TraceLogger.logErrorData({
	                source: this._logSource,
	                error: error,
	                serviceScope: this.context.serviceScope
	            });
	            this._asyncRenderQosMonitor.writeUnexpectedFailure('Timeout', error, {
	                'alias': this.context.manifest.alias,
	                'webPartId': this.context.manifest.id,
	                'instanceId': this.instanceId
	            });
	            ClassicPageUtils_1.default.disableAutomaticPostbacks(this.domElement, sp_core_library_1.Environment.type);
	            this._resolveOnRenderPromise();
	        }
	    };
	    BaseClientSideWebPart.prototype._clearAsyncRenderGuardTimer = function () {
	        if (this._asyncRenderGuardTimer) {
	            window.clearTimeout(this._asyncRenderGuardTimer);
	            this._asyncRenderGuardTimer = undefined;
	        }
	    };
	    BaseClientSideWebPart.prototype._resolveOnRenderPromise = function () {
	        if (this._renderPromiseResolver) {
	            this._renderPromiseResolver();
	        }
	        this._renderPromiseResolver = undefined;
	    };
	    return BaseClientSideWebPart;
	}());
	BaseClientSideWebPart._viewportLoader = new ViewportLoader_1.default();
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "propertiesMetadata", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "disableReactivePropertyChanges", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "previewImageUrl", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "accessibleTitle", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "isRenderAsync", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "onInit", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "onDisplayModeChanged", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "onBeforeSerialize", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "onAfterDeserialize", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "getPropertyPaneConfiguration", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "onDispose", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "onPropertyPaneFieldChanged", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "onPropertyPaneConfigurationStart", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "onPropertyPaneConfigurationComplete", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "onAfterPropertyPaneChangesApplied", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "onPropertyPaneRendered", null);
	__decorate([
	    decorators_1.virtual
	], BaseClientSideWebPart.prototype, "onAfterResize", null);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = BaseClientSideWebPart;


/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_5__;

/***/ },
/* 6 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_6__;

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_7__;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var decorators_1 = __webpack_require__(4);
	var sp_core_library_1 = __webpack_require__(7);
	var Strings_resx_1 = __webpack_require__(9);
	var SPWebPartErrorCode;
	(function (SPWebPartErrorCode) {
	    SPWebPartErrorCode[SPWebPartErrorCode["ModuleUndefined"] = 0] = "ModuleUndefined";
	    SPWebPartErrorCode[SPWebPartErrorCode["ModuleNotLoaded"] = 1] = "ModuleNotLoaded";
	    SPWebPartErrorCode[SPWebPartErrorCode["IncorrectBoostrapModule"] = 2] = "IncorrectBoostrapModule";
	    SPWebPartErrorCode[SPWebPartErrorCode["MissingExpectedWebPartMemberError"] = 3] = "MissingExpectedWebPartMemberError";
	    SPWebPartErrorCode[SPWebPartErrorCode["NonBaseWebPart"] = 4] = "NonBaseWebPart";
	    SPWebPartErrorCode[SPWebPartErrorCode["ScriptLoadError"] = 5] = "ScriptLoadError";
	    SPWebPartErrorCode[SPWebPartErrorCode["LoaderNotFound"] = 6] = "LoaderNotFound";
	    SPWebPartErrorCode[SPWebPartErrorCode["ManifestNull"] = 7] = "ManifestNull";
	    SPWebPartErrorCode[SPWebPartErrorCode["ManifestInvalid"] = 8] = "ManifestInvalid";
	    SPWebPartErrorCode[SPWebPartErrorCode["BaseConstructError"] = 9] = "BaseConstructError";
	    SPWebPartErrorCode[SPWebPartErrorCode["MustOverrideRender"] = 10] = "MustOverrideRender";
	    SPWebPartErrorCode[SPWebPartErrorCode["NotInitializedError"] = 11] = "NotInitializedError";
	    SPWebPartErrorCode[SPWebPartErrorCode["PropertyBagNull"] = 12] = "PropertyBagNull";
	    SPWebPartErrorCode[SPWebPartErrorCode["OnAfterDeserializeReturnedNull"] = 13] = "OnAfterDeserializeReturnedNull";
	    SPWebPartErrorCode[SPWebPartErrorCode["OnInitReturnedNullPromise"] = 14] = "OnInitReturnedNullPromise";
	    SPWebPartErrorCode[SPWebPartErrorCode["ReadOnlyProperty"] = 15] = "ReadOnlyProperty";
	    SPWebPartErrorCode[SPWebPartErrorCode["SerializationFailed"] = 16] = "SerializationFailed";
	    SPWebPartErrorCode[SPWebPartErrorCode["FirstTimeRenderCalledMoreThanOnce"] = 17] = "FirstTimeRenderCalledMoreThanOnce";
	    SPWebPartErrorCode[SPWebPartErrorCode["RenderCompletedCallNotCalled"] = 18] = "RenderCompletedCallNotCalled";
	})(SPWebPartErrorCode = exports.SPWebPartErrorCode || (exports.SPWebPartErrorCode = {}));
	var SPWebPartError = SPWebPartError_1 = (function (_super) {
	    __extends(SPWebPartError, _super);
	    function SPWebPartError(errorCode, logProperties) {
	        var params = [];
	        for (var _i = 2; _i < arguments.length; _i++) {
	            params[_i - 2] = arguments[_i];
	        }
	        var _this = _super.call(this, SPWebPartErrorCode[errorCode], sp_core_library_1.Text.format(SPWebPartError_1._errorCodeToMessageMap.get(errorCode), params), logProperties) || this;
	        _this.__proto__ = SPWebPartError_1.prototype; 
	        _this._id = errorCode;
	        return _this;
	    }
	    Object.defineProperty(SPWebPartError.prototype, "id", {
	        get: function () {
	            return this._id;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(SPWebPartError.prototype, "category", {
	        get: function () {
	            return 'SPWebPartErrorCode';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    SPWebPartError.create = function (errorCode) {
	        var params = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            params[_i - 1] = arguments[_i];
	        }
	        return new SPWebPartError_1(errorCode, undefined, params);
	    };
	    SPWebPartError.createWithLogProperties = function (errorCode, logProperties) {
	        var params = [];
	        for (var _i = 2; _i < arguments.length; _i++) {
	            params[_i - 2] = arguments[_i];
	        }
	        return new SPWebPartError_1(errorCode, logProperties, params);
	    };
	    return SPWebPartError;
	}(sp_core_library_1.SPError));
	SPWebPartError._errorCodeToMessageMap = new Map([
	    [SPWebPartErrorCode.ModuleUndefined, Strings_resx_1.default.UndefinedModuleError],
	    [SPWebPartErrorCode.ModuleNotLoaded, Strings_resx_1.default.ModuleNotLoadedError],
	    [SPWebPartErrorCode.IncorrectBoostrapModule, Strings_resx_1.default.IncorrectBoostrapModuleError],
	    [SPWebPartErrorCode.MissingExpectedWebPartMemberError, Strings_resx_1.default.MissingExpectedWebPartMemberError],
	    [SPWebPartErrorCode.NonBaseWebPart, Strings_resx_1.default.NonBaseWebPartError],
	    [SPWebPartErrorCode.ScriptLoadError, Strings_resx_1.default.ScriptLoadErrorTemplate],
	    [SPWebPartErrorCode.ManifestNull, Strings_resx_1.default.ManifestNullError],
	    [SPWebPartErrorCode.ManifestInvalid, Strings_resx_1.default.ManifestInvalidError],
	    [SPWebPartErrorCode.BaseConstructError, Strings_resx_1.default.BaseConstructError],
	    [SPWebPartErrorCode.MustOverrideRender, Strings_resx_1.default.MustOverrideRenderError],
	    [SPWebPartErrorCode.NotInitializedError, Strings_resx_1.default.NotIntializedError],
	    [SPWebPartErrorCode.PropertyBagNull, Strings_resx_1.default.PropertyBagNullError],
	    [SPWebPartErrorCode.OnAfterDeserializeReturnedNull, Strings_resx_1.default.OnAfterDeserializeReturnedNull],
	    [SPWebPartErrorCode.OnInitReturnedNullPromise, Strings_resx_1.default.OnInitReturnedNullPromise],
	    [SPWebPartErrorCode.ReadOnlyProperty, Strings_resx_1.default.ReadOnlyPropertyError],
	    [SPWebPartErrorCode.SerializationFailed, Strings_resx_1.default.SerializationFailedError],
	    [SPWebPartErrorCode.FirstTimeRenderCalledMoreThanOnce, Strings_resx_1.default.FirstTimeRenderCalledMoreThanOnceError],
	    [SPWebPartErrorCode.RenderCompletedCallNotCalled, Strings_resx_1.default.RenderCompletedCallNotCalledError]
	]);
	SPWebPartError = SPWebPartError_1 = __decorate([
	    decorators_1.sealed
	], SPWebPartError);
	exports.SPWebPartError = SPWebPartError;
	var SPWebPartError_1;


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var strings =  false
	    ? require('../../resx-strings/en-us.json')
	    : __webpack_require__(10);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = (strings['_cUY5i3OR5M46pep9mRCR0g'] || {});


/***/ },
/* 10 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_10__;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var lodash = __webpack_require__(5);
	function deepFreeze(obj) {
	    if (!obj) {
	        return undefined;
	    }
	    if (!Object.isFrozen(obj)) {
	        Object.freeze(obj);
	    }
	    var depth = 0;
	    var func = function (o) {
	        if (++depth > 5) {
	            return;
	        }
	        var propNames = Object.getOwnPropertyNames(o);
	        propNames.forEach(function (name) {
	            var prop = o[name];
	            if (typeof prop === 'object' && !!prop && !lodash.isElement(prop) && !Object.isFrozen(prop)) {
	                func(prop);
	            }
	        });
	    };
	    func(obj);
	    return obj;
	}
	exports.deepFreeze = deepFreeze;


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var sp_telemetry_1 = __webpack_require__(6);
	var sp_core_library_1 = __webpack_require__(7);
	function executeAndReThrow(method, errorToThrow, logSource) {
	    sp_core_library_1.Validate.isNotNullOrUndefined(method, 'method');
	    try {
	        method();
	    }
	    catch (e) {
	        if (logSource) {
	            sp_telemetry_1._TraceLogger.logError(logSource, new Error('Error: ' + e));
	        }
	        errorToThrow.innerError = e;
	        throw errorToThrow;
	    }
	}
	exports.executeAndReThrow = executeAndReThrow;


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var sp_core_library_1 = __webpack_require__(7);
	var ClassicPageFixupUtils = (function () {
	    function ClassicPageFixupUtils() {
	    }
	    ClassicPageFixupUtils.disableAutomaticPostbacks = function (domElement, env) {
	        sp_core_library_1.Validate.isNotNullOrUndefined(domElement, 'domElement');
	        if (env === sp_core_library_1.EnvironmentType.ClassicSharePoint) {
	            var buttons = domElement.getElementsByTagName('button');
	            if (buttons && buttons.length) {
	                for (var i = 0; i < buttons.length; i++) {
	                    if (buttons[i]) {
	                        buttons[i].onclick = function () { return false; };
	                    }
	                }
	            }
	            var inputs = domElement.getElementsByTagName('input');
	            if (inputs && inputs.length) {
	                for (var i = 0; i < inputs.length; i++) {
	                    if (inputs[i]) {
	                        inputs[i].onkeydown = function (e) { if (e.keyCode === 13) {
	                            return false;
	                        } };
	                    }
	                }
	            }
	        }
	    };
	    ClassicPageFixupUtils.removeFabricLinks = function () {
	        var links = document.getElementsByTagName('link');
	        if (links && links.length) {
	            for (var i = 0; i < links.length; i++) {
	                if (links[i] && links[i].href.indexOf('fabric.min.css') !== -1) {
	                    var parentNode = links[i].parentNode;
	                    if (parentNode) {
	                        parentNode.removeChild(links[i]);
	                    }
	                }
	            }
	        }
	    };
	    return ClassicPageFixupUtils;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ClassicPageFixupUtils;


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var sp_telemetry_1 = __webpack_require__(6);
	var sp_core_library_1 = __webpack_require__(7);
	var lodash = __webpack_require__(5);
	var Strings_resx_1 = __webpack_require__(9);
	var ViewportLoader = (function () {
	    function ViewportLoader() {
	        this._webparts = new Set();
	        this._lazyLoadedTrackerAttribute = 'data-sp-webpart-lazycount';
	        this.SCROLL = 'scroll';
	        this.RESIZE = 'resize';
	        this._isInitialized = false;
	        this._logSource = sp_telemetry_1._LogSource.create('ViewportLoader');
	        this._isListeningWindow = false;
	        this._bind();
	    }
	    ViewportLoader.prototype.register = function (webpart) {
	        var _this = this;
	        sp_core_library_1.Validate.isNotNullOrUndefined(webpart, 'webpart');
	        webpart._isInViewport = false;
	        if (!this._isInitialized) {
	            this._initialize();
	        }
	        this._checkVisibilityAndRender(webpart);
	        if (webpart._isInViewport) {
	            return;
	        }
	        var parents = this._findScrollableParents(webpart.domElement);
	        parents.forEach(function (parent, index, allPatents) {
	            var count = _this._updateRegisteredChildren(parent, 1);
	            if (count === 1) {
	                _this._listenEvents(parent);
	            }
	        });
	        this._listenEvents(window);
	        this._webparts.add(webpart);
	    };
	    ViewportLoader.prototype.unregister = function (webpart) {
	        var _this = this;
	        sp_core_library_1.Validate.isNotNullOrUndefined(webpart, 'unregister Web part');
	        if (!this._webparts.has(webpart)) {
	            return;
	        }
	        this._webparts.delete(webpart);
	        var parents = this._findScrollableParents(webpart.domElement);
	        parents.forEach(function (parent, index, allParents) {
	            var count = _this._updateRegisteredChildren(parent, -1);
	            if (count <= 0) {
	                _this._unlistenEvents(parent);
	            }
	        });
	        if (this._webparts.size === 0) {
	            this._unlistenEvents(window);
	            this._dispose();
	        }
	    };
	    ViewportLoader.prototype._bind = function () {
	        this.register = this.register.bind(this);
	        this.unregister = this.unregister.bind(this);
	        this._checkVisibilityAndRender = this._checkVisibilityAndRender.bind(this);
	        this._dispose = this._dispose.bind(this);
	        this._findScrollableParent = this._findScrollableParent.bind(this);
	        this._findScrollableParents = this._findScrollableParents.bind(this);
	        this._initialize = this._initialize.bind(this);
	        this._isCloseToViewport = this._isCloseToViewport.bind(this);
	        this._renderWebpartInViewport = this._renderWebpartInViewport.bind(this);
	        this._unlistenEvents = this._unlistenEvents.bind(this);
	        this._updateRegisteredChildren = this._updateRegisteredChildren.bind(this);
	    };
	    ViewportLoader.prototype._lazyLoaderEventHandler = function () {
	        var _this = this;
	        if (!this._webparts || this._webparts.size === 0) {
	            sp_telemetry_1._TraceLogger.logError(this._logSource, new Error(Strings_resx_1.default.LazyEventOnNoLazyWebpart));
	            return;
	        }
	        this._webparts.forEach(function (value, index, theSet) {
	            _this._checkVisibilityAndRender(value);
	        });
	    };
	    ViewportLoader.prototype._checkVisibilityAndRender = function (webpart) {
	        if (webpart._isInViewport) {
	            this.unregister(webpart);
	            return;
	        }
	        if (this._isCloseToViewport(webpart.domElement)) {
	            this._renderWebpartInViewport(webpart);
	            this.unregister(webpart);
	        }
	    };
	    ViewportLoader.prototype._isCloseToViewport = function (webpartNode) {
	        try {
	            var parent_1 = this._findScrollableParent(webpartNode);
	            var offset = (window.innerHeight || document.documentElement.clientHeight) / 3;
	            var _a = webpartNode.getBoundingClientRect(), top_1 = _a.top, height = _a.height;
	            var documentHeight = window.innerHeight || document.documentElement.clientHeight;
	            if (!parent_1) {
	                var topInOrAboveViewport = (top_1 - offset) <= documentHeight;
	                var bottomNotAboveViewport = (top_1 + height + offset) >= 0;
	                return topInOrAboveViewport && bottomNotAboveViewport;
	            }
	            var _b = parent_1.getBoundingClientRect(), parentTop = _b.top, parentHeight = _b.height;
	            var parentIntersectionTop = Math.max(0, parentTop);
	            var parentIntersectionHeight = Math.min(parentTop + parentHeight, documentHeight) - parentIntersectionTop;
	            var offsetTop = top_1 - parentIntersectionTop;
	            var parentTopInOrAboveViewport = (offsetTop - offset) <= parentIntersectionHeight;
	            var parentBottomNotAboveViewport = (offsetTop + height + offset) >= 0;
	            return parentTopInOrAboveViewport && parentBottomNotAboveViewport;
	        }
	        catch (error) {
	            sp_telemetry_1._TraceLogger.logError(this._logSource, error);
	            return true;
	        }
	    };
	    ViewportLoader.prototype._findScrollableParents = function (startingElement) {
	        var parents = [];
	        var parent = startingElement;
	        while (parent) {
	            parent = this._findScrollableParent(parent);
	            if (parent) {
	                parents.push(parent);
	                parent = parent.parentElement;
	            }
	        }
	        return parents;
	    };
	    ViewportLoader.prototype._findScrollableParent = function (startingElement) {
	        var DATA_IS_SCROLLABLE_ATTRIBUTE = 'data-is-scrollable';
	        var el = startingElement;
	        while (el && el !== document.body) {
	            if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) === 'true') {
	                return el;
	            }
	            el = el.parentElement;
	        }
	        el = startingElement;
	        while (el && el !== document.body) {
	            if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) !== 'false') {
	                var styles = getComputedStyle(el);
	                if (styles) {
	                    var overflowY = styles.getPropertyValue('overflow-y');
	                    if (overflowY && (overflowY === this.SCROLL || overflowY === 'auto')) {
	                        return el;
	                    }
	                }
	            }
	            el = el.parentElement;
	        }
	        if (!el || el === document.body) {
	            el = undefined;
	        }
	        return el;
	    };
	    ViewportLoader.prototype._initialize = function () {
	        this._initTime = new Date();
	        this._lazyHandler = lodash.throttle(this._lazyLoaderEventHandler, 100).bind(this);
	        sp_telemetry_1._TraceLogger.logVerbose(this._logSource, 'Webpart.ViewportLoad.Initialize');
	        this._isInitialized = true;
	    };
	    ViewportLoader.prototype._dispose = function () {
	        var timeSpent = (new Date()).getTime() - this._initTime.getTime();
	        sp_telemetry_1._EngagementLogger.logEvent('Webpart.ViewportLoad.Completed', timeSpent.toString());
	        this._isInitialized = false;
	        this._initTime = undefined;
	    };
	    ViewportLoader.prototype._listenEvents = function (parent) {
	        if (!parent) {
	            return;
	        }
	        var isWindow = parent === window;
	        if (!isWindow || (isWindow && !this._isListeningWindow)) {
	            this._addEventListerer(parent);
	            if (isWindow) {
	                this._isListeningWindow = true;
	            }
	        }
	    };
	    ViewportLoader.prototype._addEventListerer = function (element) {
	        element.addEventListener(this.SCROLL, this._lazyHandler, false);
	        element.addEventListener(this.RESIZE, this._lazyHandler, false);
	    };
	    ViewportLoader.prototype._unlistenEvents = function (parent) {
	        if (!parent) {
	            return;
	        }
	        var isWindow = parent === window;
	        if (!isWindow || (isWindow && this._isListeningWindow)) {
	            this._removeEventListener(parent);
	            if (isWindow) {
	                this._isListeningWindow = false;
	            }
	        }
	    };
	    ViewportLoader.prototype._removeEventListener = function (element) {
	        element.removeEventListener(this.SCROLL, this._lazyHandler);
	        element.removeEventListener(this.RESIZE, this._lazyHandler);
	    };
	    ViewportLoader.prototype._updateRegisteredChildren = function (element, count) {
	        var lazyChilds = count + Number(element.getAttribute(this._lazyLoadedTrackerAttribute));
	        if (count !== 0) {
	            element.setAttribute(this._lazyLoadedTrackerAttribute, lazyChilds.toString());
	        }
	        return lazyChilds;
	    };
	    ViewportLoader.prototype._renderWebpartInViewport = function (webpart) {
	        if (webpart && !webpart._isInViewport) {
	            webpart._isInViewport = true;
	            webpart._internalRenderInViewPort();
	            if (this._webparts.has(webpart)) {
	                sp_telemetry_1._EngagementLogger.logEvent('Webpart.ViewportLoad.Scroll', 'ViewportLoaded');
	            }
	            else {
	                sp_telemetry_1._EngagementLogger.logEvent('Webpart.ViewportLoad.Scroll', 'InViewportOnLoad');
	            }
	        }
	    };
	    return ViewportLoader;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ViewportLoader;


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(16);
	var styles = {
	    errorBox: 'errorBox_52d430e0',
	    errorBoxText: 'errorBoxText_52d430e0',
	    screenReaderOnly: 'screenReaderOnly_52d430e0',
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = styles;


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(17);
	var loader = __webpack_require__(19);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(18)();
	// imports
	
	
	// module
	exports.push([module.id, ".errorBox_52d430e0{color:#333;font-family:\"Segoe UI Regular WestEuropean\",\"Segoe UI\",Tahoma,Arial,sans-serif;font-size:15px;font-weight:400;color:#ff3a46;padding:12px 0;overflow:hidden;position:relative;top:0;left:0;right:0;z-index:1}.errorBoxText_52d430e0{text-align:left;position:relative;padding-right:28px;display:inline-block}.screenReaderOnly_52d430e0{position:absolute;text-indent:-9999px;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;border:0}", ""]);
	
	// exports


/***/ },
/* 18 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 19 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	 * An IThemingInstruction can specify a rawString to be preserved or a theme slot and a default value
	 * to use if that slot is not specified by the theme.
	 */
	"use strict";
	// IE needs to inject styles using cssText. However, we need to evaluate this lazily, so this
	// value will initialize as undefined, and later will be set once on first loadStyles injection.
	var _injectStylesWithCssText;
	// Store the theming state in __themeState__ global scope for reuse in the case of duplicate
	// load-themed-styles hosted on the page.
	var _root = (typeof window === 'undefined') ? global : window; // tslint:disable-line:no-any
	var _themeState = _root.__themeState__ = _root.__themeState__ || {
	    theme: undefined,
	    lastStyleElement: undefined,
	    registeredStyles: []
	};
	/**
	 * Matches theming tokens. For example, "[theme: themeSlotName, default: #FFF]" (including the quotes).
	 */
	/* tslint:disable: max-line-length */
	var _themeTokenRegex = /[\'\"]\[theme:\s*(\w+)\s*(?:\,\s*default:\s*([\\"\']?[\.\,\(\)\#\-\s\w]*[\.\,\(\)\#\-\w][\"\']?))?\s*\][\'\"]/g;
	/* tslint:enable: max-line-length */
	/** Maximum style text length, for supporting IE style restrictions. */
	var MAX_STYLE_CONTENT_SIZE = 10000;
	/**
	 * Loads a set of style text. If it is registered too early, we will register it when the window.load
	 * event is fired.
	 * @param {string | ThemableArray} styles Themable style text to register.
	 */
	function loadStyles(styles) {
	    var styleParts = Array.isArray(styles) ? styles : splitStyles(styles);
	    if (_injectStylesWithCssText === undefined) {
	        _injectStylesWithCssText = shouldUseCssText();
	    }
	    applyThemableStyles(styleParts);
	}
	exports.loadStyles = loadStyles;
	/**
	 * Allows for customizable loadStyles logic. e.g. for server side rendering application
	 * @param {(styles: string) => void} a loadStyles callback that gets called when styles are loaded or reloaded
	 */
	function configureLoadStyles(callback) {
	    _themeState.loadStyles = callback;
	}
	exports.configureLoadStyles = configureLoadStyles;
	/**
	 * Loads a set of style text. If it is registered too early, we will register it when the window.load event
	 * is fired.
	 * @param {string} styleText Style to register.
	 * @param {IStyleRecord} styleRecord Existing style record to re-apply.
	 */
	function applyThemableStyles(stylesArray, styleRecord) {
	    if (_themeState.loadStyles) {
	        var styles = resolveThemableArray(stylesArray);
	        _themeState.loadStyles(styles);
	    }
	    else {
	        _injectStylesWithCssText ?
	            registerStylesIE(stylesArray, styleRecord) :
	            registerStyles(stylesArray, styleRecord);
	    }
	}
	/**
	 * Registers a set theme tokens to find and replace. If styles were already registered, they will be
	 * replaced.
	 * @param {theme} theme JSON object of theme tokens to values.
	 */
	function loadTheme(theme) {
	    _themeState.theme = theme;
	    // reload styles.
	    reloadStyles();
	}
	exports.loadTheme = loadTheme;
	/**
	 * Reloads styles.
	 */
	function reloadStyles() {
	    if (_themeState.theme) {
	        for (var _i = 0, _a = _themeState.registeredStyles; _i < _a.length; _i++) {
	            var styleRecord = _a[_i];
	            applyThemableStyles(styleRecord.themableStyle, styleRecord);
	        }
	    }
	}
	/**
	 * Find theme tokens and replaces them with provided theme values.
	 * @param {string} styles Tokenized styles to fix.
	 */
	function detokenize(styles) {
	    if (styles) {
	        styles = resolveThemableArray(splitStyles(styles));
	    }
	    return styles;
	}
	exports.detokenize = detokenize;
	/**
	 * Resolves ThemingInstruction objects in an array and joins the result into a string.
	 * @param {ThemableArray} splitStyleArray ThemableArray to resolve and join.
	 */
	function resolveThemableArray(splitStyleArray) {
	    var theme = _themeState.theme;
	    var resolvedCss;
	    if (splitStyleArray) {
	        // Resolve the array of theming instructions to an array of strings.
	        // Then join the array to produce the final CSS string.
	        var resolvedArray = splitStyleArray.map(function (currentValue) {
	            var themeSlot = currentValue.theme;
	            if (themeSlot) {
	                // A theming annotation. Resolve it.
	                var themedValue = theme ? theme[themeSlot] : undefined;
	                var defaultValue = currentValue.defaultValue;
	                // Warn to console if we hit an unthemed value even when themes are provided.
	                // Allow the themedValue to be undefined to explicitly request the default value.
	                if (theme && !themedValue && console && !(themeSlot in theme)) {
	                    /* tslint:disable: max-line-length */
	                    console.warn("Theming value not provided for \"" + themeSlot + "\". Falling back to \"" + (defaultValue || 'inherit') + "\".");
	                }
	                return themedValue || defaultValue || 'inherit';
	            }
	            else {
	                // A non-themable string. Preserve it.
	                return currentValue.rawString;
	            }
	        });
	        resolvedCss = resolvedArray.join('');
	    }
	    return resolvedCss;
	}
	/**
	 * Split tokenized CSS into an array of strings and theme specification objects
	 * @param {string} styles Tokenized styles to split.
	 */
	function splitStyles(styles) {
	    var result = [];
	    if (styles) {
	        var pos = 0; // Current position in styles.
	        var tokenMatch = void 0;
	        while (tokenMatch = _themeTokenRegex.exec(styles)) {
	            var matchIndex = tokenMatch.index;
	            if (matchIndex > pos) {
	                result.push({
	                    rawString: styles.substring(pos, matchIndex)
	                });
	            }
	            result.push({
	                theme: tokenMatch[1],
	                defaultValue: tokenMatch[2] // May be undefined
	            });
	            // index of the first character after the current match
	            pos = _themeTokenRegex.lastIndex;
	        }
	        // Push the rest of the string after the last match.
	        result.push({
	            rawString: styles.substring(pos)
	        });
	    }
	    return result;
	}
	exports.splitStyles = splitStyles;
	/**
	 * Registers a set of style text. If it is registered too early, we will register it when the
	 * window.load event is fired.
	 * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.
	 * @param {IStyleRecord} styleRecord May specify a style Element to update.
	 */
	function registerStyles(styleArray, styleRecord) {
	    var head = document.getElementsByTagName('head')[0];
	    var styleElement = document.createElement('style');
	    styleElement.type = 'text/css';
	    styleElement.appendChild(document.createTextNode(resolveThemableArray(styleArray)));
	    if (styleRecord) {
	        head.replaceChild(styleElement, styleRecord.styleElement);
	        styleRecord.styleElement = styleElement;
	    }
	    else {
	        head.appendChild(styleElement);
	    }
	    if (!styleRecord) {
	        _themeState.registeredStyles.push({
	            styleElement: styleElement,
	            themableStyle: styleArray
	        });
	    }
	}
	/**
	 * Registers a set of style text, for IE 9 and below, which has a ~30 style element limit so we need
	 * to register slightly differently.
	 * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.
	 * @param {IStyleRecord} styleRecord May specify a style Element to update.
	 */
	function registerStylesIE(styleArray, styleRecord) {
	    var head = document.getElementsByTagName('head')[0];
	    var lastStyleElement = _themeState.lastStyleElement, registeredStyles = _themeState.registeredStyles;
	    var stylesheet = lastStyleElement ? lastStyleElement.styleSheet : undefined;
	    var lastStyleContent = stylesheet ? stylesheet.cssText : '';
	    var lastRegisteredStyle = registeredStyles[registeredStyles.length - 1];
	    var resolvedStyleText = resolveThemableArray(styleArray);
	    if (!lastStyleElement || (lastStyleContent.length + resolvedStyleText.length) > MAX_STYLE_CONTENT_SIZE) {
	        lastStyleElement = document.createElement('style');
	        lastStyleElement.type = 'text/css';
	        if (styleRecord) {
	            head.replaceChild(lastStyleElement, styleRecord.styleElement);
	            styleRecord.styleElement = lastStyleElement;
	        }
	        else {
	            head.appendChild(lastStyleElement);
	        }
	        if (!styleRecord) {
	            lastRegisteredStyle = {
	                styleElement: lastStyleElement,
	                themableStyle: styleArray
	            };
	            registeredStyles.push(lastRegisteredStyle);
	        }
	    }
	    lastStyleElement.styleSheet.cssText += detokenize(resolvedStyleText);
	    Array.prototype.push.apply(lastRegisteredStyle.themableStyle, styleArray); // concat in-place
	    // Preserve the theme state.
	    _themeState.lastStyleElement = lastStyleElement;
	}
	/**
	 * Checks to see if styleSheet exists as a property off of a style element.
	 * This will determine if style registration should be done via cssText (<= IE9) or not
	 */
	function shouldUseCssText() {
	    var useCSSText = false;
	    if (typeof document !== 'undefined') {
	        var emptyStyle = document.createElement('style');
	        emptyStyle.type = 'text/css';
	        useCSSText = !!emptyStyle.styleSheet;
	    }
	    return useCSSText;
	}
	
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var decorators_1 = __webpack_require__(4);
	var lodash = __webpack_require__(5);
	var sp_loader_1 = __webpack_require__(21);
	var sp_http_1 = __webpack_require__(22);
	var sp_telemetry_1 = __webpack_require__(6);
	var sp_core_library_1 = __webpack_require__(7);
	var sp_page_context_1 = __webpack_require__(23);
	var BaseClientSideWebPart_1 = __webpack_require__(3);
	var ClientSideWebPartStatusRenderer_1 = __webpack_require__(24);
	var EventAggregator_1 = __webpack_require__(32);
	var ExecuteWithoutFailing_1 = __webpack_require__(34);
	var SPWebPartError_1 = __webpack_require__(8);
	var PropertyPaneDefinitions_1 = __webpack_require__(2);
	var PropertyPaneController_1 = __webpack_require__(35);
	var WebPartContext_1 = __webpack_require__(64);
	var ClassicPageUtils_1 = __webpack_require__(13);
	var Strings_resx_1 = __webpack_require__(9);
	var ClientSideWebPartManager = ClientSideWebPartManager_1 = (function () {
	    function ClientSideWebPartManager(host) {
	        this._webparts = new Map();
	        this._logSource = sp_telemetry_1._LogSource.create('ClientSideWebPartManager');
	        this._eventAggregator = new EventAggregator_1.default();
	        this._statusRenderer = new ClientSideWebPartStatusRenderer_1.default();
	        sp_core_library_1.Validate.isNotNullOrUndefined(host, 'host');
	        this._host = host;
	        this._pageContext = host.serviceScope.consume(sp_page_context_1.PageContext.serviceKey);
	        this._onContainerResize = this._onContainerResize.bind(this);
	        this._onPropertyPaneToggled = this._onPropertyPaneToggled.bind(this);
	        this.setPropertyPaneState = this.setPropertyPaneState.bind(this);
	        this.isPropertyPaneRenderedByWebPart = this.isPropertyPaneRenderedByWebPart.bind(this);
	        if (ClientSideWebPartManager_1._webPartManagerList.length === 0) {
	            this._initialzeOnResizeEventHandler();
	        }
	        ClientSideWebPartManager_1._webPartManagerList.push(this);
	    }
	    ClientSideWebPartManager.prototype.loadWebPart = function (context) {
	        var _this = this;
	        return new Promise(function (resolve, reject) {
	            _this._validateInput(context);
	            var webPartTag = _this._createWebPartTag(context.manifest, context.instanceId);
	            if (context.displayMode === undefined) {
	                context.displayMode = sp_core_library_1.DisplayMode.Read;
	            }
	            if (!_this._validateManifest(context.manifest, context.displayMode, webPartTag)) {
	                _this.renderError(context.domElement, SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.ManifestInvalid, webPartTag));
	                return;
	            }
	            var manifest = context.manifest; 
	            var instanceId = context.instanceId;
	            var domElement = context.domElement;
	            var qosMonitor = _this._createLoadQosMonitor(manifest);
	            if (context.shouldAddWebpartsToEupl !== false) {
	                sp_telemetry_1._PerformanceLogger.addComponent(webPartTag);
	            }
	            sp_telemetry_1._PerformanceLogger.startMarkForComponent(webPartTag);
	            sp_telemetry_1._TraceLogger.logVerboseData({
	                source: _this._logSource,
	                message: sp_core_library_1.Text.format(Strings_resx_1.default.StartedLoadingWebPart, webPartTag),
	                serviceScope: _this._host.serviceScope
	            });
	            var title = context.webPartData && context.webPartData.title
	                ? context.webPartData.title
	                : (manifest.title && manifest.title.default 
	                    ? manifest.title.default 
	                    : manifest.preconfiguredEntries[0].title.default);
	            _this._statusRenderer.displayLoadingIndicator(domElement, title);
	            var modulePromise = sp_loader_1.SPComponentLoader.loadComponent(manifest);
	            if (modulePromise) {
	                modulePromise.then(function (moduleLibrary) {
	                    sp_telemetry_1._PerformanceLogger.markComponentModuleLoaded(webPartTag);
	                    sp_telemetry_1._TraceLogger.logVerboseData({
	                        source: _this._logSource,
	                        message: sp_core_library_1.Text.format(Strings_resx_1.default.ModulesLoadedForWebPart, webPartTag),
	                        serviceScope: _this._host.serviceScope
	                    });
	                    if (!moduleLibrary) {
	                        throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.ModuleUndefined, webPartTag);
	                    }
	                    try {
	                        var wp = moduleLibrary; 
	                        if (wp && wp.default) {
	                            wp = wp.default;
	                        }
	                        if (!wp) {
	                            throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.ModuleNotLoaded, webPartTag, _this._getLoadedModuleList(moduleLibrary));
	                        }
	                        if (typeof (wp) !== 'function' && wp.default) {
	                            wp = wp.default;
	                        }
	                        if (typeof (wp) !== 'function') {
	                            throw SPWebPartError_1.SPWebPartError.createWithLogProperties(SPWebPartError_1.SPWebPartErrorCode.IncorrectBoostrapModule, { actualType: typeof (wp), wp: wp }, webPartTag);
	                        }
	                        var typedWebPartClass = wp;
	                        var wpi = new typedWebPartClass();
	                        if (!wpi._internalInitialize) {
	                            throw SPWebPartError_1.SPWebPartError.createWithLogProperties(SPWebPartError_1.SPWebPartErrorCode.MissingExpectedWebPartMemberError, { actualType: typeof (wp), wp: wp }, webPartTag, '_internalInitialize');
	                        }
	                        wpi._internalInitialize(_this._getWebPartContext(context));
	                        _this._webparts.set(instanceId, wpi);
	                        _this._startDirtyBitTimer(context.displayMode);
	                        var webPartData = lodash.cloneDeep(context.webPartData);
	                        if (_this._instanceOfBase(wpi)) {
	                            return wpi._internalFirstTimeRender(context.addedFromPersistedData, context.displayMode, qosMonitor, webPartData).then(function () {
	                                var extraData = _this._createSuccessExtraData(manifest.alias, manifest.isInternal, manifest.id);
	                                qosMonitor.writeSuccess(extraData);
	                                sp_telemetry_1._PerformanceLogger.endMarkForComponent(webPartTag);
	                                ClassicPageUtils_1.default.removeFabricLinks();
	                                sp_telemetry_1._TraceLogger.logVerboseData({
	                                    source: _this._logSource,
	                                    message: sp_core_library_1.Text.format(Strings_resx_1.default.ModulesLoadedForWebPart, webPartTag),
	                                    serviceScope: _this._host.serviceScope
	                                });
	                                resolve();
	                            });
	                        }
	                        else {
	                            throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.NonBaseWebPart, webPartTag);
	                        }
	                    }
	                    catch (ex) {
	                        var wpi_1 = _this._webparts.get(instanceId);
	                        if (wpi_1) {
	                            ExecuteWithoutFailing_1.executeWithoutFailing(function () { _this._statusRenderer.clearLoadingIndicator(domElement); }, _this._logSource);
	                            ExecuteWithoutFailing_1.executeWithoutFailing(function () { wpi_1._internalDispose(); }, _this._logSource);
	                            ExecuteWithoutFailing_1.executeWithoutFailing(function () { _this._webparts.delete(instanceId); }, _this._logSource);
	                        }
	                        ExecuteWithoutFailing_1.executeWithoutFailing(function () {
	                            var extraData = _this._createUnexpectedFailureExtraData(manifest.alias, instanceId, manifest.isInternal, manifest.id);
	                            qosMonitor.writeUnexpectedFailure('UnhandledLoadError', ex, extraData);
	                        }, _this._logSource);
	                        _this.renderError(domElement, ex);
	                        reject();
	                    }
	                }).catch(function (errorMsg) {
	                    var err = SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.ScriptLoadError, webPartTag, errorMsg);
	                    ExecuteWithoutFailing_1.executeWithoutFailing(function () {
	                        var extraData = _this._createUnexpectedFailureExtraData(manifest.alias, instanceId, manifest.isInternal, manifest.id);
	                        qosMonitor.writeUnexpectedFailure('ScriptLoad', err, extraData);
	                    }, _this._logSource);
	                    _this.renderError(domElement, err);
	                    reject();
	                });
	            }
	            else {
	                var error = SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.LoaderNotFound, webPartTag);
	                _this.renderError(domElement, error);
	                reject();
	            }
	        });
	    };
	    ClientSideWebPartManager.prototype.setPropertyPaneControl = function (id, control) {
	        sp_core_library_1.Validate.isNonemptyString(id, 'id');
	        sp_core_library_1.Validate.isNotNullOrUndefined(control, 'control');
	        this._webparts.set(id, control);
	    };
	    ClientSideWebPartManager.prototype.fetchWebPartManifests = function () {
	        var _this = this;
	        if (!this._toolboxManifestsPromise) {
	            var qosMonitor_1 = new sp_telemetry_1._QosMonitor('ClientSideWebPartManager.FetchWebParts');
	            this._toolboxManifestsPromise = new Promise(function (resolve, reject) {
	                if (_this._pageContext.web &&
	                    _this._pageContext.web.serverRelativeUrl &&
	                    sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.Local &&
	                    sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.Test) {
	                    var requestUrl_1 = sp_core_library_1.UrlUtilities.removeEndSlash(_this._pageContext.web.serverRelativeUrl) + "/_api/web/GetClientSideWebParts";
	                    _this._host.serviceScope.whenFinished(function () {
	                        var httpClient = _this._host.serviceScope.consume(sp_http_1.SPHttpClient.serviceKey);
	                        httpClient.get(requestUrl_1, sp_http_1.SPHttpClient.configurations.v1)
	                            .then(function (response) {
	                            return response.json();
	                        })
	                            .then(function (value) {
	                            var manifests = value.value.map(function (manifestObject) { return JSON.parse(manifestObject.Manifest); });
	                            _this._disambiguateWebPartManifestLocales(manifests);
	                            sp_loader_1.SPComponentLoader.registerManifests(manifests);
	                            sp_telemetry_1._TraceLogger.logVerboseData({
	                                source: _this._logSource,
	                                message: Strings_resx_1.default.CompletedLoadingWebPartManifests,
	                                serviceScope: _this._host.serviceScope
	                            });
	                            qosMonitor_1.writeSuccess();
	                            resolve();
	                        })
	                            .catch(function (error) {
	                            _this._toolboxManifestsPromise = undefined;
	                            sp_telemetry_1._TraceLogger.logErrorData({
	                                source: _this._logSource,
	                                error: error,
	                                serviceScope: _this._host.serviceScope
	                            });
	                            qosMonitor_1.writeUnexpectedFailure('Rejected', error);
	                            reject(error);
	                        });
	                    });
	                }
	                else {
	                    resolve();
	                }
	            });
	        }
	        return this._toolboxManifestsPromise;
	    };
	    ClientSideWebPartManager.prototype.getWebPartManifests = function () {
	        var manifests = sp_loader_1.SPComponentLoader.getManifests();
	        var result = []; 
	        if (manifests) {
	            for (var _i = 0, manifests_1 = manifests; _i < manifests_1.length; _i++) {
	                var manifest = manifests_1[_i];
	                if (manifest && manifest.componentType === 'WebPart') {
	                    result.push(manifest); 
	                }
	            }
	        }
	        return result;
	    };
	    ClientSideWebPartManager.prototype.setDisplayMode = function (displayMode, instanceId) {
	        this._executeForIdsOrAll(this._getArrayOrUndefined(instanceId), function (wp) {
	            wp._internalSetDisplayMode(displayMode);
	        });
	        this._startDirtyBitTimer(displayMode);
	    };
	    ClientSideWebPartManager.prototype.serialize = function (instanceId) {
	        var sd = new Map();
	        this._executeForIdsOrAll(this._getArrayOrUndefined(instanceId), function (wp, _instanceId) {
	            sd.set(_instanceId, wp._internalSerialize());
	        });
	        return sd;
	    };
	    ClientSideWebPartManager.prototype.dispose = function (instanceId) {
	        var _this = this;
	        this._executeForIdsOrAll(this._getArrayOrUndefined(instanceId), function (wp, _instanceId) {
	            ExecuteWithoutFailing_1.executeWithoutFailing(function () { wp._internalDispose(); }, _this._logSource);
	            _this._deleteWebPart(_instanceId);
	        });
	    };
	    ClientSideWebPartManager.prototype.tryGeneratePreviewImageUrl = function (instanceIds) {
	        var previewImageUrl = undefined;
	        this._executeForIdsOrAll(instanceIds, function (wp, id) {
	            if (!previewImageUrl) {
	                previewImageUrl = wp.previewImageUrl;
	            }
	        });
	        return previewImageUrl;
	    };
	    ClientSideWebPartManager.prototype.setPropertyPaneState = function (instanceId, propertyPaneState, renderedByWebPart) {
	        if (propertyPaneState === void 0) { propertyPaneState = PropertyPaneDefinitions_1.PropertyPaneState.Default; }
	        if (!ClientSideWebPartManager_1._propertyPaneController) {
	            ClientSideWebPartManager_1._propertyPaneController =
	                new PropertyPaneController_1.default(function (wpId) {
	                    var wp = undefined;
	                    for (var i = 0; i < ClientSideWebPartManager_1._webPartManagerList.length; i++) {
	                        wp = ClientSideWebPartManager_1._webPartManagerList[i]._webparts.get(wpId);
	                        if (wp) {
	                            break;
	                        }
	                    }
	                    return wp;
	                }, this._onWebPartConfigurationChange);
	        }
	        ClientSideWebPartManager_1._propertyPaneController.setPropertyPaneState(instanceId, propertyPaneState, renderedByWebPart);
	    };
	    ClientSideWebPartManager.prototype.isPropertyPaneRenderedByWebPart = function () {
	        return ClientSideWebPartManager_1._propertyPaneController.isRenderedByWebPart();
	    };
	    ClientSideWebPartManager.prototype.onWebPartDelete = function (instanceId) {
	        this.dispose(instanceId);
	    };
	    ClientSideWebPartManager.prototype.renderError = function (domElement, error) {
	        var _this = this;
	        ExecuteWithoutFailing_1.executeWithoutFailing(function () {
	            _this._statusRenderer.renderError(domElement, error);
	            sp_telemetry_1._TraceLogger.logErrorData({
	                source: _this._logSource,
	                error: error,
	                serviceScope: _this._host.serviceScope
	            });
	        }, this._logSource);
	    };
	    ClientSideWebPartManager.prototype._disambiguateWebPartManifestLocales = function (manifests) {
	        var currentLocale = this._pageContext.cultureInfo.currentUICultureName
	            ? this._pageContext.cultureInfo.currentUICultureName.toLowerCase()
	            : undefined;
	        if (currentLocale) {
	            var disambiguateLocale_1 = function (values) {
	                var foundMatch = undefined;
	                for (var locale in values) {
	                    if (locale && locale.toLowerCase() === currentLocale && values[locale]) {
	                        foundMatch = values[locale];
	                        break;
	                    }
	                }
	                return {
	                    default: foundMatch || values['default']
	                };
	            };
	            manifests.forEach(function (manifest) {
	                if (manifest.componentType === 'WebPart') {
	                    var wpManifest = manifest;
	                    wpManifest.preconfiguredEntries.forEach(function (entry) {
	                        entry.title = disambiguateLocale_1(entry.title);
	                        entry.description = disambiguateLocale_1(entry.description);
	                        if (entry.group) {
	                            entry.group = disambiguateLocale_1(entry.group);
	                        }
	                    });
	                }
	            });
	        }
	    };
	    ClientSideWebPartManager.prototype._validateInput = function (context) {
	        sp_core_library_1.Validate.isNotNullOrUndefined(context, 'web part manager context');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.domElement, 'web part element');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.instanceId, 'web part instanceId');
	        sp_core_library_1.Validate.isNotNullOrUndefined(context.manifest, 'web part manifest');
	        sp_core_library_1.Validate.isTrue(!this._webparts.get(context.instanceId), 'Duplicate web part id not allowed');
	    };
	    ClientSideWebPartManager.prototype._validateManifest = function (manifest,  mode, webPartTag) {
	        if (!manifest) {
	            if (mode === sp_core_library_1.DisplayMode.Read) {
	                throw SPWebPartError_1.SPWebPartError.create(SPWebPartError_1.SPWebPartErrorCode.ManifestNull, webPartTag);
	            }
	            else {
	                return false;
	            }
	        }
	        var cm = lodash.cloneDeep(manifest);
	        sp_core_library_1.Validate.isTrue(cm.manifestVersion == 2, 'Only version 2 manifests are currently supported');
	        sp_core_library_1.Validate.isTrue(!!cm.id, 'web part id cannot be null or undefined');
	        sp_core_library_1.Validate.isNotNullOrUndefined(sp_core_library_1.Guid.tryParse(cm.id), 'web part id has to be a GUID');
	        sp_core_library_1.Validate.isTrue(!!cm.version, 'webp art version cannot be null or undefined');
	        return true;
	    };
	    ClientSideWebPartManager.prototype._executeForIdsOrAll = function (instanceIds, cb) {
	        var _this = this;
	        if (instanceIds) {
	            instanceIds.forEach(function (id) {
	                var wp = _this._webparts.get(id);
	                if (wp) {
	                    cb(wp, id);
	                }
	            });
	        }
	        else {
	            this._webparts.forEach(function (wp, id) {
	                if (wp && (wp['__type'] === 'BaseClientSideWebPart' || wp instanceof BaseClientSideWebPart_1.default)) {
	                    cb(wp, id);
	                }
	            });
	        }
	    };
	    ClientSideWebPartManager.prototype._getWebPartContext = function (context) {
	        var webPartTag = this._createWebPartTag(context.manifest, context.instanceId);
	        var parameters = {
	            parentServiceScope: this._host.serviceScope,
	            manifest: this._getManifestInstance(context),
	            instanceId: context.instanceId,
	            webPartTag: webPartTag,
	            domElement: context.domElement,
	            statusRenderer: this._statusRenderer,
	            eventAggregator: this._eventAggregator,
	            isPropertyPaneRenderedByWebPart: this.isPropertyPaneRenderedByWebPart,
	            host: this._host,
	            setPropertyPaneState: this.setPropertyPaneState
	        };
	        return new WebPartContext_1.default(parameters);
	    };
	    ClientSideWebPartManager.prototype._instanceOfBase = function (wpi) {
	        return wpi instanceof BaseClientSideWebPart_1.default || wpi['__type'] === 'BaseClientSideWebPart';
	    };
	    ClientSideWebPartManager.prototype._getLoadedModuleList = function (moduleLibrary) {
	        var loadedModulesString = '';
	        for (var m in moduleLibrary) {
	            if (moduleLibrary.hasOwnProperty(m)) {
	                if (loadedModulesString) {
	                    loadedModulesString += ',';
	                }
	                loadedModulesString += "" + m;
	            }
	        }
	        return loadedModulesString;
	    };
	    ClientSideWebPartManager.prototype._startDirtyBitTimer = function (mode) {
	        var _this = this;
	        if (mode === sp_core_library_1.DisplayMode.Read) {
	            if (this._dirtyBitTimer && sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.ClassicSharePoint) {
	                window.clearInterval(this._dirtyBitTimer);
	                this._dirtyBitTimer = undefined;
	            }
	        }
	        else if (!this._dirtyBitTimer) {
	            this._dirtyBitTimer = window.setInterval(function () {
	                _this._executeForIdsOrAll(undefined, function (wp) {
	                    wp._internalSetDirtyBit();
	                });
	            }, 1000);
	        }
	    };
	    ClientSideWebPartManager.prototype._createSuccessExtraData = function (alias, isInternal, manifestId) {
	        var successExtraData = {
	            alias: alias,
	            isInternal: isInternal,
	            manifestId: manifestId
	        };
	        return successExtraData;
	    };
	    ClientSideWebPartManager.prototype._createUnexpectedFailureExtraData = function (alias, instanceId, isInternal, manifestId) {
	        var unexpectedFailureExtraData = {
	            alias: alias,
	            instanceId: instanceId,
	            isInternal: isInternal,
	            manifestId: manifestId
	        };
	        return unexpectedFailureExtraData;
	    };
	    ClientSideWebPartManager.prototype._createLoadQosMonitor = function (manifest) {
	        return new sp_telemetry_1._QosMonitor("WebPart.Load");
	    };
	    ClientSideWebPartManager.prototype._createWebPartTag = function (manifest, instanceId) {
	        return "WebPart." + manifest.alias + "." + instanceId;
	    };
	    ClientSideWebPartManager.prototype._deleteWebPart = function (id) {
	        sp_core_library_1.Validate.isNotNullOrUndefined(id, 'id');
	        if (ClientSideWebPartManager_1._propertyPaneController) {
	            ClientSideWebPartManager_1._propertyPaneController.onWebPartDelete(id);
	        }
	        this._webparts.delete(id);
	    };
	    ClientSideWebPartManager.prototype._getManifestInstance = function (context) {
	        var manifest = context.manifest;
	        var manifestClone = lodash.cloneDeep(manifest);
	        delete manifestClone.preconfiguredEntries;
	        return manifestClone;
	    };
	    ClientSideWebPartManager.prototype._getArrayOrUndefined = function (instanceId) {
	        return instanceId ? [instanceId] : undefined;
	    };
	    ClientSideWebPartManager.prototype._initialzeOnResizeEventHandler = function () {
	        window.addEventListener('resize', lodash.debounce(this._onContainerResize, 1000));
	        window.addEventListener('message', this._onPropertyPaneToggled);
	    };
	    ClientSideWebPartManager.prototype._onContainerResize = function () {
	        ClientSideWebPartManager_1._webPartManagerList.forEach(function (wpm) {
	            wpm._webparts.forEach(function (wp) { wp._internalOnAfterResize(); });
	        });
	    };
	    ClientSideWebPartManager.prototype._onPropertyPaneToggled = function (event) {
	        if (event && event.origin === window.location.origin && event.data === 'Property pane toggled') {
	            this._onContainerResize();
	        }
	    };
	    ClientSideWebPartManager.prototype._onWebPartConfigurationChange = function (event, data) {
	        ClientSideWebPartManager_1._webPartManagerList.forEach(function (wpm) {
	            if (wpm._host.webPartConfigurationEventCallback &&
	                (ClientSideWebPartManager_1._propertyPaneController.currentlyConfiguredWebPartId &&
	                    wpm._webparts.get(ClientSideWebPartManager_1._propertyPaneController.currentlyConfiguredWebPartId) ||
	                    event === PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneWebPartsSwitched)) {
	                wpm._host.webPartConfigurationEventCallback(event, data);
	            }
	        });
	    };
	    return ClientSideWebPartManager;
	}());
	ClientSideWebPartManager._webPartManagerList = [];
	ClientSideWebPartManager = ClientSideWebPartManager_1 = __decorate([
	    decorators_1.sealed
	], ClientSideWebPartManager);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ClientSideWebPartManager;
	var ClientSideWebPartManager_1;


/***/ },
/* 21 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_21__;

/***/ },
/* 22 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_22__;

/***/ },
/* 23 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_23__;

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var ReactDOM = __webpack_require__(25);
	var React = __webpack_require__(26);
	var decorators_1 = __webpack_require__(4);
	var sp_telemetry_1 = __webpack_require__(6);
	var sp_core_library_1 = __webpack_require__(7);
	var PlaceholderSpinner_1 = __webpack_require__(27);
	var Strings_resx_1 = __webpack_require__(9);
	var cswp_base_module_scss_1 = __webpack_require__(15);
	var ClientSideWebPartStatusRenderer = (function () {
	    function ClientSideWebPartStatusRenderer() {
	        this._errorId = 'cswp-error';
	        this._logSource = sp_telemetry_1._LogSource.create('ClientSideWebPartStatusRenderer');
	        this._activeIndicatorCache = new Map();
	    }
	    ClientSideWebPartStatusRenderer.prototype.displayLoadingIndicator = function (domElement, loadingMessage, timeout) {
	        var _this = this;
	        sp_core_library_1.Validate.isNotNullOrUndefined(domElement, 'domElement');
	        if (!timeout || (timeout && isNaN(timeout))) {
	            timeout = 1500; 
	        }
	        var cacheEntry = this._getCacheEntry(domElement);
	        if (cacheEntry.loadingTimer) {
	            window.clearTimeout(cacheEntry.loadingTimer);
	        }
	        this._renderSpinner(domElement, loadingMessage, false);
	        cacheEntry.loadingTimer =
	            window.setTimeout(function () { _this._renderSpinner(domElement, loadingMessage, true); }, timeout);
	    };
	    ClientSideWebPartStatusRenderer.prototype.clearLoadingIndicator = function (domElement) {
	        sp_core_library_1.Validate.isNotNullOrUndefined(domElement, 'domElement');
	        if (this._activeIndicatorCache.has(domElement)) {
	            var cacheEntry = this._getCacheEntry(domElement);
	            sp_telemetry_1._TraceLogger.logVerbose(this._logSource, Strings_resx_1.default.ClearLoadingIndicator);
	            if (cacheEntry.loadingTimer) {
	                window.clearTimeout(cacheEntry.loadingTimer);
	            }
	            if (cacheEntry.placeholder) {
	                cacheEntry.placeholder.showSpinner(false);
	            }
	            this._activeIndicatorCache.delete(domElement);
	        }
	    };
	    ClientSideWebPartStatusRenderer.prototype.renderError = function (domElement, error) {
	        sp_core_library_1.Validate.isNotNullOrUndefined(domElement, 'domElement');
	        sp_core_library_1.Validate.isNotNullOrUndefined(error, 'error');
	        var cacheEntry = this._getCacheEntry(domElement);
	        cacheEntry.isErrorBeingRendered = true;
	        var divErr = domElement.querySelector("div[data-sp-id='" + this._errorId + "']");
	        if (divErr) {
	            divErr.style.display = 'block';
	        }
	        else {
	            if (!this._errorHtml) {
	                this._errorHtml =
	                    "<div class='" + cswp_base_module_scss_1.default.errorBox + "' role='alert' aria-live='assertive'>" +
	                        ("<span class='" + cswp_base_module_scss_1.default.errorBoxText + "'></span>") +
	                        "</div>";
	            }
	            divErr = document.createElement('div');
	            divErr.setAttribute('data-sp-id', this._errorId);
	            divErr.setAttribute('data-automation-id', 'webPartError');
	            divErr.innerHTML = this._errorHtml;
	            domElement.appendChild(divErr);
	        }
	        var text = divErr.getElementsByTagName('span')[0];
	        var errorText = '';
	        if (error instanceof sp_core_library_1.SPError) {
	            errorText = error.toStringForUI();
	        }
	        else {
	            errorText += "" + (error.message || error);
	            if ((true) && error.stack) {
	                errorText += " CALLSTACK:: " + error.stack;
	            }
	        }
	        text.textContent = errorText;
	    };
	    ClientSideWebPartStatusRenderer.prototype.clearError = function (domElement) {
	        sp_core_library_1.Validate.isNotNullOrUndefined(domElement, 'domElement');
	        if (!this._activeIndicatorCache.has(domElement)) {
	            return;
	        }
	        var cacheEntry = this._activeIndicatorCache.get(domElement);
	        if (cacheEntry.isErrorBeingRendered) {
	            cacheEntry.isErrorBeingRendered = false;
	            var divErr = domElement.querySelector("div[data-sp-id='" + this._errorId + "']");
	            if (divErr) {
	                divErr.style.display = 'none';
	                divErr.removeAttribute('data-automation-id');
	            }
	        }
	    };
	    ClientSideWebPartStatusRenderer.prototype._renderSpinner = function (domElement, loadingMessage, showSpinner) {
	        if (!this._activeIndicatorCache.has(domElement)) {
	            return;
	        }
	        var cacheEntry = this._getCacheEntry(domElement);
	        if (cacheEntry.isErrorBeingRendered) {
	            return;
	        }
	        sp_telemetry_1._TraceLogger.logVerbose(this._logSource, Strings_resx_1.default.DisplayLoadingIndicator);
	        if (!cacheEntry.placeholder) {
	            var el = React.createElement(PlaceholderSpinner_1.default, { hideSpinner: !showSpinner, label: sp_core_library_1.Text.format(Strings_resx_1.default.LoadingStatus, loadingMessage) });
	            cacheEntry.placeholder = ReactDOM.render(el, domElement);
	        }
	        else {
	            cacheEntry.placeholder.showSpinner(showSpinner);
	        }
	    };
	    ClientSideWebPartStatusRenderer.prototype._getCacheEntry = function (domElement) {
	        if (this._activeIndicatorCache.has(domElement)) {
	            return this._activeIndicatorCache.get(domElement);
	        }
	        var cacheEntry = {
	            loadingTimer: undefined,
	            placeholder: undefined,
	            isErrorBeingRendered: false
	        };
	        this._activeIndicatorCache.set(domElement, cacheEntry);
	        return cacheEntry;
	    };
	    return ClientSideWebPartStatusRenderer;
	}());
	ClientSideWebPartStatusRenderer = __decorate([
	    decorators_1.sealed
	], ClientSideWebPartStatusRenderer);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ClientSideWebPartStatusRenderer;


/***/ },
/* 25 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_25__;

/***/ },
/* 26 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_26__;

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var decorators_1 = __webpack_require__(4);
	var React = __webpack_require__(26);
	var office_ui_fabric_react_1 = __webpack_require__(28);
	__webpack_require__(29);
	var PlaceholderSpinner = (function (_super) {
	    __extends(PlaceholderSpinner, _super);
	    function PlaceholderSpinner(props) {
	        var _this = _super.call(this, props) || this;
	        _this.showSpinner = _this.showSpinner.bind(_this);
	        _this.state = { showSpinner: !props.hideSpinner };
	        return _this;
	    }
	    PlaceholderSpinner.prototype.componentDidMount = function () {
	        this._isMounted = true;
	    };
	    PlaceholderSpinner.prototype.render = function () {
	        return (React.createElement(office_ui_fabric_react_1.Overlay, { className: 'Placeholder-overlay' }, this.state.showSpinner && (React.createElement("div", { className: 'Placeholder-spinnerContainer' },
	            React.createElement(office_ui_fabric_react_1.Spinner, { type: office_ui_fabric_react_1.SpinnerType.large, label: this.props.label })))));
	    };
	    PlaceholderSpinner.prototype.componentWillUnmount = function () {
	        this._isMounted = false;
	    };
	    PlaceholderSpinner.prototype.showSpinner = function (showSpinner) {
	        if (this._isMounted) {
	            this.setState({ showSpinner: showSpinner });
	        }
	    };
	    return PlaceholderSpinner;
	}(React.Component));
	PlaceholderSpinner = __decorate([
	    decorators_1.sealed
	], PlaceholderSpinner);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = PlaceholderSpinner;


/***/ },
/* 28 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_28__;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(30);


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(31);
	var loader = __webpack_require__(19);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(18)();
	// imports
	
	
	// module
	exports.push([module.id, ".Placeholder{display:-webkit-box;display:-ms-flexbox;display:flex}.Placeholder .Placeholder-container{-webkit-box-align:center;-ms-flex-align:center;-ms-grid-row-align:center;align-items:center;color:\"[theme:neutralSecondary, default: #666666]\";background-color:\"[theme:neutralLighter, default: #f4f4f4]\";width:100%;padding:80px 0}.Placeholder .Placeholder-container .Placeholder-head{color:\"[theme:neutralPrimary, default: #333333]\"}.Placeholder .Placeholder-container .Placeholder-head .Placeholder-headContainer{height:100%;white-space:nowrap;text-align:center}.Placeholder .Placeholder-container .Placeholder-head .Placeholder-icon{display:inline-block;vertical-align:middle;white-space:normal}.Placeholder .Placeholder-container .Placeholder-head .Placeholder-text{display:inline-block;vertical-align:middle;white-space:normal}[dir=ltr] .Placeholder .Placeholder-container .Placeholder-head .Placeholder-text{padding-left:20px}[dir=rtl] .Placeholder .Placeholder-container .Placeholder-head .Placeholder-text{padding-right:20px}.Placeholder .Placeholder-container .Placeholder-description{width:65%;vertical-align:middle;margin:0 auto;text-align:center}.Placeholder .Placeholder-container .Placeholder-description .Placeholder-descriptionText{color:\"[theme:neutralSecondary, default: #666666]\";font-size:17px;display:inline-block;margin:24px 0;font-weight:100}.Placeholder-overlay{position:relative;height:100%;z-index:1}.Placeholder-overlay .Placeholder-spinnerContainer{position:relative;width:100%;margin:164px 0}", ""]);
	
	// exports


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var decorators_1 = __webpack_require__(4);
	var sp_core_library_1 = __webpack_require__(7);
	var ReservedEventNames_1 = __webpack_require__(33);
	var EventAggregator = (function () {
	    function EventAggregator() {
	        this._events = new Map();
	        this._sources = new Map();
	    }
	    EventAggregator.prototype.subscribeByEventName = function (eventName, subscriberId, callback) {
	        sp_core_library_1.Validate.isNotNullOrUndefined(eventName, 'eventName');
	        this._validateEvent(eventName);
	        this._setSubscription(eventName, subscriberId, callback, this._events);
	    };
	    EventAggregator.prototype.subscribeBySourceId = function (sourceId, subscriberId, callback) {
	        sp_core_library_1.Validate.isNotNullOrUndefined(sourceId, 'sourceId');
	        this._setSubscription(sourceId, subscriberId, callback, this._sources);
	    };
	    EventAggregator.prototype.raiseEvent = function (eventName, eventObject) {
	        sp_core_library_1.Validate.isNotNullOrUndefined(eventName, 'eventName');
	        sp_core_library_1.Validate.isNotNullOrUndefined(eventObject, 'eventObject');
	        sp_core_library_1.Validate.isNotNullOrUndefined(eventObject.sourceId, 'eventObject.sourceId');
	        var targets = {};
	        this._validateEvent(eventName);
	        this._processEvent(eventName, eventObject, targets, this._events.get(eventName));
	        this._processEvent(eventName, eventObject, targets, this._sources.get(eventObject.sourceId));
	    };
	    EventAggregator.prototype._validateEvent = function (eventName) {
	        var e = eventName.split(ReservedEventNames_1.default.delimitor);
	        if (e.length !== 2) {
	            throw new Error('Event ' + eventName + ' not in eventName:action format');
	        }
	    };
	    EventAggregator.prototype._processEvent = function (eventName, eventObject, targets, map) {
	        if (map) {
	            map.forEach(function (callback, targetId) {
	                if (!targets[targetId]) {
	                    targets[targetId] = true;
	                    callback(eventName, eventObject);
	                }
	            });
	        }
	    };
	    EventAggregator.prototype._setSubscription = function (id, subscriberId, callback, eventBucket) {
	        sp_core_library_1.Validate.isNotNullOrUndefined(subscriberId, 'subscriberId');
	        sp_core_library_1.Validate.isNotNullOrUndefined(callback, 'callback');
	        if (!eventBucket.get(id)) {
	            eventBucket.set(id, new Map());
	        }
	        var map = eventBucket.get(id);
	        map.set(subscriberId, callback);
	    };
	    return EventAggregator;
	}());
	EventAggregator = __decorate([
	    decorators_1.sealed
	], EventAggregator);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = EventAggregator;


/***/ },
/* 33 */
/***/ function(module, exports) {

	"use strict";
	var ReservedEventNames = (function () {
	    function ReservedEventNames() {
	    }
	    return ReservedEventNames;
	}());
	ReservedEventNames.delimitor = ':';
	ReservedEventNames.configure = 'configure';
	ReservedEventNames.start = 'start';
	ReservedEventNames.end = 'end';
	ReservedEventNames.configureStart = ReservedEventNames.configure
	    + ReservedEventNames.delimitor + ReservedEventNames.start;
	ReservedEventNames.configureEnd = ReservedEventNames.configure
	    + ReservedEventNames.delimitor + ReservedEventNames.end;
	ReservedEventNames.classicToolpane = 'ClassicToolpane';
	ReservedEventNames.classicToolpaneId = '121ff297-293c-4d66-a24b-916156760cab';
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ReservedEventNames;


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var sp_telemetry_1 = __webpack_require__(6);
	var sp_core_library_1 = __webpack_require__(7);
	function executeWithoutFailing(method, logSource) {
	    sp_core_library_1.Validate.isNotNullOrUndefined(method, 'method');
	    try {
	        method();
	    }
	    catch (e) {
	        if (logSource) {
	            sp_telemetry_1._TraceLogger.logError(logSource, new Error('Error: ' + e));
	        }
	    }
	}
	exports.executeWithoutFailing = executeWithoutFailing;


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ReactDOM = __webpack_require__(25);
	var React = __webpack_require__(26);
	var sp_core_library_1 = __webpack_require__(7);
	var sp_telemetry_1 = __webpack_require__(6);
	var PropertyPaneDefinitions_1 = __webpack_require__(2);
	var Strings_resx_1 = __webpack_require__(36);
	var PropertyPaneController_module_scss_1 = __webpack_require__(37);
	__webpack_require__(36);
	__webpack_require__(28);
	__webpack_require__(40);
	var PropertyPaneController = (function () {
	    function PropertyPaneController(webPartGetter, callback) {
	        this._logSource = sp_telemetry_1._LogSource.create('PropertyPaneController');
	        sp_core_library_1.Validate.isNotNullOrUndefined(webPartGetter, 'webPartGetter');
	        this._webPartGetter = webPartGetter;
	        this._configurationEventCallback = callback;
	        this._onPropertyPaneFieldChanged = this._onPropertyPaneFieldChanged.bind(this);
	        this._onConfigurationEvent = this._onConfigurationEvent.bind(this);
	        this._fireConfigurationEvent = this._fireConfigurationEvent.bind(this);
	    }
	    Object.defineProperty(PropertyPaneController.prototype, "currentlyConfiguredWebPartId", {
	        get: function () { return this._currentlyConfiguredWebPartId; },
	        enumerable: true,
	        configurable: true
	    });
	    PropertyPaneController.prototype.setPropertyPaneState = function (id, propertyPaneState, renderedByWebPart) {
	        var noOp = renderedByWebPart &&
	            propertyPaneState === PropertyPaneDefinitions_1.PropertyPaneState.Refresh &&
	            id !== this._currentlyConfiguredWebPartId;
	        if (!noOp) {
	            var toBeConfiguredWebPart = this._webPartGetter(id);
	            this._resolvePropertyPaneElements();
	            var paneWillOpen = !this._isOpen &&
	                (propertyPaneState === PropertyPaneDefinitions_1.PropertyPaneState.Open || propertyPaneState === PropertyPaneDefinitions_1.PropertyPaneState.Toggle);
	            if (id && this._currentlyConfiguredWebPartId && (id !== this._currentlyConfiguredWebPartId || paneWillOpen)) {
	                this._fireConfigurationEvent(id, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneWebPartsSwitched);
	            }
	            this._isRenderedByWebPart = !!renderedByWebPart;
	            this._setPropertyPaneState(toBeConfiguredWebPart, id, propertyPaneState);
	            this._currentlyConfiguredWebPartId = id;
	        }
	        else {
	            sp_telemetry_1._TraceLogger.logVerbose(this._logSource, sp_core_library_1.Text.format(Strings_resx_1.default.NoOpOnRefreshPropertyPaneText, id));
	        }
	    };
	    PropertyPaneController.prototype.isRenderedByWebPart = function () {
	        return this._isRenderedByWebPart;
	    };
	    ;
	    PropertyPaneController.prototype.onWebPartDelete = function (id) {
	        sp_core_library_1.Validate.isNonemptyString(id, 'id');
	        if (id === this._currentlyConfiguredWebPartId) {
	            if (this._isOpen) {
	                this._renderPropertyPane(undefined, true);
	            }
	            this._currentlyConfiguredWebPartId = undefined;
	        }
	    };
	    PropertyPaneController.prototype._setPropertyPaneState = function (wp, id, propertyPaneState) {
	        switch (propertyPaneState) {
	            case PropertyPaneDefinitions_1.PropertyPaneState.Open:
	                var paneOpenBeforeRender = this._isOpen;
	                this._renderPropertyPane(wp, true, true);
	                if (paneOpenBeforeRender) {
	                    this._fireNoToggleConfigurationEvents(id);
	                }
	                break;
	            case PropertyPaneDefinitions_1.PropertyPaneState.Close:
	                if (this._isOpen) {
	                    this._renderPropertyPane(undefined);
	                    this._togglePropertyPanePositionAndFireConfigurationEvents();
	                }
	                break;
	            case PropertyPaneDefinitions_1.PropertyPaneState.Toggle:
	                if (!this._isOpen) {
	                    this._renderPropertyPane(wp, true, true);
	                }
	                else {
	                    this._renderPropertyPane(undefined);
	                    this._togglePropertyPanePositionAndFireConfigurationEvents();
	                }
	                break;
	            case PropertyPaneDefinitions_1.PropertyPaneState.Default:
	                if (this._isOpen) {
	                    this._fireNoToggleConfigurationEvents(id);
	                    if (this._isCurrentlyConfiguredPropertyPaneReactive) {
	                        this._renderPropertyPane(wp, true, true);
	                    }
	                    else {
	                        this._renderPropertyPane(wp, true, true);
	                    }
	                }
	                break;
	            case PropertyPaneDefinitions_1.PropertyPaneState.Refresh:
	                if (this._isOpen) {
	                    this._renderPropertyPane(wp, true, false);
	                }
	                break;
	        }
	        if (this._isOpen !== false && wp) {
	            var wpContext = wp._context; 
	            var wpAlias = wpContext && wpContext._manifest && wpContext._manifest.alias;
	            var isInternal = wpContext && wpContext._manifest && wpContext._manifest.isInternal || false;
	            var logEntry = new sp_telemetry_1._LogEntry(this._logSource.id, 'PropertyPaneOpened', sp_telemetry_1._LogType.Event, {
	                'alias': wpAlias,
	                'isInternal': isInternal.toString()
	            });
	            sp_telemetry_1._EngagementLogger.logEventWithLogEntry(logEntry);
	        }
	    };
	    PropertyPaneController.prototype._renderPropertyPane = function (currentWebpart, shouldRecreatePropertyPaneElement, resetPropertyPaneState) {
	        var _this = this;
	        if (currentWebpart) {
	            this._currentPropertyPaneData = currentWebpart._internalGetPropertyPaneData();
	            this._currentPropertyPaneData.onPropertyPaneFieldChanged = this._onPropertyPaneFieldChanged;
	            this._currentPropertyPaneData.onConfigurationEvent = this._onConfigurationEvent;
	            this._currentPropertyPaneData.render = function () { _this._render(); };
	            this._currentPropertyPaneData.shouldResetState = resetPropertyPaneState;
	            if (this._currentPropertyPaneData.configuration &&
	                this._currentPropertyPaneData.configuration.showLoadingIndicator) {
	                var delay = this._currentPropertyPaneData.configuration.loadingIndicatorDelayTime === undefined ?
	                    500 :
	                    this._currentPropertyPaneData.configuration.loadingIndicatorDelayTime;
	                setTimeout(function () {
	                    if (_this._currentPropertyPaneData.configuration.showLoadingIndicator) {
	                        _this._loadPropertyPaneComponent(true);
	                    }
	                }, delay);
	            }
	            else {
	                this._loadPropertyPaneComponent(true);
	            }
	        }
	        else {
	            this._currentPropertyPaneData = this._getEmptyPropertyPaneData();
	            this._loadPropertyPaneComponent(shouldRecreatePropertyPaneElement);
	        }
	    };
	    PropertyPaneController.prototype._loadPropertyPaneComponent = function (shouldRecreatePropertyPaneElement) {
	        var _this = this;
	        __webpack_require__.e/* nsure */(1, function (require) {
	            var propertyPane = __webpack_require__(41)['default'];
	            var insertIntoDom = false;
	            if (shouldRecreatePropertyPaneElement) {
	                if (!_this._propertyPaneElement) {
	                    _this._propertyPaneElement = document.createElement('div');
	                    insertIntoDom = true;
	                }
	            }
	            _this._propertyPaneElement.className = _this._currentPropertyPaneData.webPartId;
	            var el = React.createElement(propertyPane, { data: _this._currentPropertyPaneData });
	            ReactDOM.render(el, _this._propertyPaneElement);
	            if (_this._propertyPaneContainer) {
	                if (insertIntoDom) {
	                    _this._clearPropertyPaneContainer();
	                    _this._propertyPaneContainer.appendChild(_this._propertyPaneElement);
	                }
	                if (!_this._isOpen) {
	                    _this._togglePropertyPanePositionAndFireConfigurationEvents();
	                }
	            }
	            else {
	                if (insertIntoDom && document.body.lastChild) {
	                    document.body.insertBefore(_this._propertyPaneElement, document.body.lastChild.nextSibling);
	                }
	            }
	        });
	    };
	    PropertyPaneController.prototype._render = function () {
	        var wp = this._webPartGetter(this._currentPropertyPaneData.webPartId);
	        if (wp) {
	            this._renderPropertyPane(wp);
	        }
	    };
	    PropertyPaneController.prototype._onPropertyPaneFieldChanged = function (propertyName, newValue) {
	        sp_core_library_1.Validate.isNonemptyString(propertyName, 'propertyName');
	        sp_core_library_1.Validate.isNotNullOrUndefined(newValue, 'newValue');
	        if (!this._currentPropertyPaneData.webPartId) {
	            throw new Error('onPropertyPaneFieldChanged event is not expected when no web part is being configured');
	        }
	        var wp = this._webPartGetter(this._currentPropertyPaneData.webPartId);
	        if (wp) {
	            wp._internalOnPropertyPaneFieldChanged(propertyName, newValue);
	            this._renderPropertyPane(wp);
	        }
	        if (this._isCurrentlyConfiguredPropertyPaneReactive()) {
	            this._resetConfigurationCompleteTimeout();
	        }
	    };
	    PropertyPaneController.prototype._onConfigurationEvent = function (configurationEvent) {
	        switch (configurationEvent) {
	            case PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneClosed:
	                this._togglePropertyPanePositionAndFireConfigurationEvents();
	                break;
	            case PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneApplyClicked:
	            case PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneLostFocus:
	                this._fireConfigurationEvent(this._currentlyConfiguredWebPartId, configurationEvent);
	                this._fireConfigurationEvent(this._currentlyConfiguredWebPartId, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationComplete);
	                break;
	        }
	    };
	    PropertyPaneController.prototype._togglePropertyPanePositionAndFireConfigurationEvents = function () {
	        if (this._isOpen) {
	            if (this._pageContentElement) {
	                this._pageContentElement.classList.remove(PropertyPaneController_module_scss_1.default.shrinkContent);
	            }
	            else {
	                ReactDOM.unmountComponentAtNode(this._propertyPaneElement);
	            }
	            if (this._workbenchCommandBarElement) {
	                this._workbenchCommandBarElement.classList.remove(PropertyPaneController_module_scss_1.default.shrinkContent);
	            }
	            this._propertyPaneContainer.classList.remove(PropertyPaneController_module_scss_1.default.showPane);
	        }
	        else {
	            if (this._pageContentElement) {
	                this._pageContentElement.classList.add(PropertyPaneController_module_scss_1.default.shrinkContent);
	            }
	            else {
	                this._propertyPaneContainer.style.top = '50px';
	                this._propertyPaneContainer.style.zIndex = '999';
	            }
	            if (this._workbenchCommandBarElement) {
	                this._workbenchCommandBarElement.classList.add(PropertyPaneController_module_scss_1.default.shrinkContent);
	            }
	            this._propertyPaneContainer.classList.add(PropertyPaneController_module_scss_1.default.showPane);
	        }
	        this._isOpen = !this._isOpen;
	        this._firePostToggleConfigurationEvents();
	    };
	    PropertyPaneController.prototype._firePostToggleConfigurationEvents = function () {
	        var _this = this;
	        if (this._isOpen) {
	            window.setTimeout(function () {
	                _this._fireConfigurationEvent(_this._currentlyConfiguredWebPartId, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneOpened);
	                _this._fireConfigurationEvent(_this._currentlyConfiguredWebPartId, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationStart);
	                window.postMessage('Property pane toggled', window.location.origin);
	            }, PropertyPaneController.ANIMATION_TIMEOUT);
	        }
	        else {
	            this._fireConfigurationEvent(this._currentlyConfiguredWebPartId, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationComplete);
	            window.setTimeout(function () {
	                _this._fireConfigurationEvent(_this._currentlyConfiguredWebPartId, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneClosed);
	                window.postMessage('Property pane toggled', window.location.origin);
	            }, PropertyPaneController.ANIMATION_TIMEOUT);
	        }
	    };
	    PropertyPaneController.prototype._fireNoToggleConfigurationEvents = function (id) {
	        this._fireConfigurationEvent(this._currentlyConfiguredWebPartId, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationComplete);
	        this._fireConfigurationEvent(id, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationStart);
	    };
	    PropertyPaneController.prototype._fireConfigurationEvent = function (webpartId, configurationEvent) {
	        this._clearConfigurationCompleteTimeout();
	        var wp = this._webPartGetter(webpartId);
	        if (wp) {
	            if (this._configurationEventCallback) {
	                this._configurationEventCallback(configurationEvent, wp._internalSerialize());
	            }
	            wp._internalOnConfigurationEvent(configurationEvent);
	        }
	    };
	    PropertyPaneController.prototype._resolvePropertyPaneElements = function () {
	        var workbenchElement = document.getElementById('workbenchPageContent');
	        if (workbenchElement) {
	            this._pageContentElement = workbenchElement;
	            this._workbenchCommandBarElement = document.getElementById('workbenchCommandBar');
	        }
	        else {
	            this._pageContentElement = document.getElementById('spPageChromeAppDiv');
	        }
	        if (!this._pageContentElement) {
	            if (!this._propertyPaneContainer) {
	                this._propertyPaneContainer = document.createElement('div');
	                this._propertyPaneContainer.id = PropertyPaneController.PROPERTY_PANE_CONTAINER_ID;
	                this._propertyPaneContainer.className = PropertyPaneController.PROPERTY_PANE_CONTAINER_ID;
	                document.body.appendChild(this._propertyPaneContainer);
	            }
	        }
	        else {
	            this._propertyPaneContainer = document.getElementById(PropertyPaneController.PROPERTY_PANE_CONTAINER_ID);
	        }
	    };
	    PropertyPaneController.prototype._clearPropertyPaneContainer = function () {
	        while (this._propertyPaneContainer && this._propertyPaneContainer.firstChild) {
	            this._propertyPaneContainer.removeChild(this._propertyPaneContainer.firstChild);
	        }
	    };
	    PropertyPaneController.prototype._resetConfigurationCompleteTimeout = function () {
	        this._clearConfigurationCompleteTimeout();
	        this._configurationCompletionTimeout = window.setTimeout(this._fireConfigurationEvent, PropertyPaneController.CONFIGURATION_COMPLETE_TIMEOUT, this._currentlyConfiguredWebPartId, PropertyPaneDefinitions_1.WebPartConfigurationEvent.PropertyPaneConfigurationComplete);
	    };
	    PropertyPaneController.prototype._clearConfigurationCompleteTimeout = function () {
	        if (this._configurationCompletionTimeout) {
	            window.clearTimeout(this._configurationCompletionTimeout);
	            this._configurationCompletionTimeout = undefined;
	        }
	    };
	    PropertyPaneController.prototype._isCurrentlyConfiguredPropertyPaneReactive = function () {
	        if (this._currentlyConfiguredWebPartId) {
	            var currentlyConfiguredWebPart = this._webPartGetter(this._currentlyConfiguredWebPartId);
	            var isReactive = currentlyConfiguredWebPart._internalGetPropertyPaneData().isReactive;
	            return isReactive ? true : false;
	        }
	        return false;
	    };
	    PropertyPaneController.prototype._getEmptyPropertyPaneData = function () {
	        return {
	            webPartId: undefined,
	            title: undefined,
	            shouldResetState: true,
	            onPropertyPaneFieldChanged: undefined,
	            onConfigurationEvent: this._onConfigurationEvent,
	            onRendered: undefined,
	            properties: undefined,
	            configuration: undefined
	        };
	    };
	    return PropertyPaneController;
	}());
	PropertyPaneController.ANIMATION_TIMEOUT = 400;
	PropertyPaneController.CONFIGURATION_COMPLETE_TIMEOUT = 5000;
	PropertyPaneController.PROPERTY_PANE_CONTAINER_ID = 'spPropertyPaneContainer';
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = PropertyPaneController;


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var strings =  false
	    ? require('../../resx-strings/en-us.json')
	    : __webpack_require__(10);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = (strings['_ZRJdhh/Ht8a/UwYAwPqP9Q'] || {});


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(38);
	var styles = {
	    spPropertyPaneContainer: 'spPropertyPaneContainer_65d169f3',
	    showPane: 'showPane_65d169f3',
	    shrinkContent: 'shrinkContent_65d169f3',
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = styles;


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	var content = __webpack_require__(39);
	var loader = __webpack_require__(19);
	
	if(typeof content === "string") content = [[module.id, content]];
	
	// add the styles to the DOM
	for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);
	
	if(content.locals) module.exports = content.locals;

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(18)();
	// imports
	
	
	// module
	exports.push([module.id, "[id^=spPropertyPaneContainer].spPropertyPaneContainer_65d169f3{position:absolute;top:50px;bottom:0;z-index:999}html[dir=ltr] [id^=spPropertyPaneContainer].spPropertyPaneContainer_65d169f3{right:-340px}html[dir=rtl] [id^=spPropertyPaneContainer].spPropertyPaneContainer_65d169f3{left:-340px}html[dir=ltr] [id^=spPropertyPaneContainer].showPane_65d169f3{right:0}html[dir=rtl] [id^=spPropertyPaneContainer].showPane_65d169f3{left:0}html[dir=ltr] [id^=spPageChromeAppDiv].shrinkContent_65d169f3{right:340px}html[dir=rtl] [id^=spPageChromeAppDiv].shrinkContent_65d169f3{left:340px}html[dir=ltr] [id^=workbenchPageContent].shrinkContent_65d169f3{right:340px}html[dir=rtl] [id^=workbenchPageContent].shrinkContent_65d169f3{left:340px}html[dir=ltr] [id^=workbenchCommandBar].shrinkContent_65d169f3{padding-right:340px}html[dir=rtl] [id^=workbenchCommandBar].shrinkContent_65d169f3{padding-left:340px}", ""]);
	
	// exports


/***/ },
/* 40 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_40__;

/***/ },
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */
/***/ function(module, exports) {

	"use strict";
	var PropertyPaneFieldType;
	(function (PropertyPaneFieldType) {
	    PropertyPaneFieldType[PropertyPaneFieldType["Custom"] = 1] = "Custom";
	    PropertyPaneFieldType[PropertyPaneFieldType["CheckBox"] = 2] = "CheckBox";
	    PropertyPaneFieldType[PropertyPaneFieldType["TextField"] = 3] = "TextField";
	    PropertyPaneFieldType[PropertyPaneFieldType["Toggle"] = 5] = "Toggle";
	    PropertyPaneFieldType[PropertyPaneFieldType["Dropdown"] = 6] = "Dropdown";
	    PropertyPaneFieldType[PropertyPaneFieldType["Label"] = 7] = "Label";
	    PropertyPaneFieldType[PropertyPaneFieldType["Slider"] = 8] = "Slider";
	    PropertyPaneFieldType[PropertyPaneFieldType["Heading"] = 9] = "Heading";
	    PropertyPaneFieldType[PropertyPaneFieldType["ChoiceGroup"] = 10] = "ChoiceGroup";
	    PropertyPaneFieldType[PropertyPaneFieldType["Button"] = 11] = "Button";
	    PropertyPaneFieldType[PropertyPaneFieldType["HorizontalRule"] = 12] = "HorizontalRule";
	    PropertyPaneFieldType[PropertyPaneFieldType["Link"] = 13] = "Link";
	})(PropertyPaneFieldType = exports.PropertyPaneFieldType || (exports.PropertyPaneFieldType = {}));


/***/ },
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var decorators_1 = __webpack_require__(4);
	var sp_http_1 = __webpack_require__(22);
	var sp_telemetry_1 = __webpack_require__(6);
	var sp_page_context_1 = __webpack_require__(23);
	var sp_component_base_1 = __webpack_require__(65);
	var PropertyPaneDefinitions_1 = __webpack_require__(2);
	var PropertyPaneAccessor_1 = __webpack_require__(66);
	var WebPartContext = (function (_super) {
	    __extends(WebPartContext, _super);
	    function WebPartContext(parameters) {
	        var _this = _super.call(this, parameters) || this;
	        _this._instanceId = parameters.instanceId;
	        _this._webPartTag = parameters.webPartTag;
	        _this._domElement = parameters.domElement;
	        _this._host = parameters.host;
	        _this._statusRenderer = parameters.statusRenderer;
	        _this._eventAggregator = parameters.eventAggregator;
	        _this._setPropertyPaneState = parameters.setPropertyPaneState;
	        _this._isPropertyPaneRenderedByWebPart = parameters.isPropertyPaneRenderedByWebPart;
	        _this._propertyPaneAccessor = new PropertyPaneAccessor_1.default(function () { _this._setPropertyPaneState(_this._instanceId, PropertyPaneDefinitions_1.PropertyPaneState.Open, true); }, function () { _this._setPropertyPaneState(_this._instanceId, PropertyPaneDefinitions_1.PropertyPaneState.Refresh, true); }, function () { return _this._isPropertyPaneRenderedByWebPart(); });
	        return _this;
	    }
	    Object.defineProperty(WebPartContext.prototype, "manifest", {
	        get: function () {
	            return _super.prototype.getBaseManifest.call(this);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(WebPartContext.prototype, "instanceId", {
	        get: function () { return this._instanceId; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(WebPartContext.prototype, "webPartTag", {
	        get: function () { return this._webPartTag; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(WebPartContext.prototype, "domElement", {
	        get: function () { return this._domElement; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(WebPartContext.prototype, "spHttpClient", {
	        get: function () { return this._spHttpClient; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(WebPartContext.prototype, "httpClient", {
	        get: function () { return this._httpClient; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(WebPartContext.prototype, "pageContext", {
	        get: function () { return this._pageContext; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(WebPartContext.prototype, "statusRenderer", {
	        get: function () { return this._statusRenderer; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(WebPartContext.prototype, "eventAggregator", {
	        get: function () { return this._eventAggregator; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(WebPartContext.prototype, "propertyPane", {
	        get: function () { return this._propertyPaneAccessor; },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(WebPartContext.prototype, "host", {
	        get: function () { return this._host; },
	        enumerable: true,
	        configurable: true
	    });
	    WebPartContext.prototype.onProvideServices = function (parameters) {
	        _super.prototype.onProvideServices.call(this, parameters);
	        this._httpClient = this.serviceScope.createDefaultAndProvide(sp_http_1.HttpClient.serviceKey);
	        this._spHttpClient = this.serviceScope.createDefaultAndProvide(sp_http_1.SPHttpClient.serviceKey);
	        this.serviceScope.provide(sp_telemetry_1._logSourceServiceKey, sp_telemetry_1._LogSource.create(parameters.webPartTag));
	    };
	    WebPartContext.prototype.onConsumeServices = function () {
	        _super.prototype.onConsumeServices.call(this);
	        this._pageContext = this.serviceScope.consume(sp_page_context_1.PageContext.serviceKey);
	    };
	    return WebPartContext;
	}(sp_component_base_1._ClientSideComponentContext));
	__decorate([
	    decorators_1.override
	], WebPartContext.prototype, "manifest", null);
	__decorate([
	    decorators_1.override
	], WebPartContext.prototype, "onProvideServices", null);
	__decorate([
	    decorators_1.override
	], WebPartContext.prototype, "onConsumeServices", null);
	WebPartContext = __decorate([
	    decorators_1.sealed
	], WebPartContext);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = WebPartContext;


/***/ },
/* 65 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_65__;

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var decorators_1 = __webpack_require__(4);
	var PropertyPaneAccessor = (function () {
	    function PropertyPaneAccessor(openProperytPane, refresh, isRenderedByWebPart) {
	        this._open = openProperytPane;
	        this._refresh = refresh;
	        this._isRenderedByWebPart = isRenderedByWebPart;
	        this.open = this.open.bind(this);
	        this.refresh = this.refresh.bind(this);
	        this.isRenderedByWebPart = this.isRenderedByWebPart.bind(this);
	    }
	    PropertyPaneAccessor.prototype.open = function () {
	        this._open();
	    };
	    PropertyPaneAccessor.prototype.refresh = function () {
	        this._refresh();
	    };
	    PropertyPaneAccessor.prototype.isRenderedByWebPart = function () {
	        return this._isRenderedByWebPart();
	    };
	    return PropertyPaneAccessor;
	}());
	PropertyPaneAccessor = __decorate([
	    decorators_1.sealed
	], PropertyPaneAccessor);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = PropertyPaneAccessor;


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(26);
	var ReactDOM = __webpack_require__(25);
	var BaseClientSideWebPart_1 = __webpack_require__(3);
	var ReactWebPart = (function (_super) {
	    __extends(ReactWebPart, _super);
	    function ReactWebPart(componentType) {
	        var _this = _super.call(this) || this;
	        _this._componentType = componentType;
	        return _this;
	    }
	    ReactWebPart.prototype.onDispose = function () {
	        ReactDOM.unmountComponentAtNode(this.domElement);
	    };
	    ReactWebPart.prototype.render = function () {
	        var element = this.domElement;
	        this._componentInstance = React.createElement(this._componentType, {
	            mode: this.displayMode
	        });
	        ReactDOM.render(this._componentInstance, element);
	    };
	    return ReactWebPart;
	}(BaseClientSideWebPart_1.default));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ReactWebPart;


/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var decorators_1 = __webpack_require__(4);
	var lodash = __webpack_require__(5);
	var sp_core_library_1 = __webpack_require__(7);
	var ISerializedServerProcessedData_1 = __webpack_require__(69);
	var WebPartDataConverter = WebPartDataConverter_1 = (function () {
	    function WebPartDataConverter() {
	    }
	    WebPartDataConverter.isWebPartHtml = function (htmlString) {
	        sp_core_library_1.Validate.isNonemptyString(htmlString, 'htmlString');
	        return htmlString.indexOf('<div') === 0 && htmlString.indexOf(WebPartDataConverter_1._webPartDataAttribute) !== -1;
	    };
	    WebPartDataConverter.convertWebPartDataToHtml = function (webpartData) {
	        sp_core_library_1.Validate.isNotNullOrUndefined(webpartData, 'web part data');
	        var wpdata = lodash.cloneDeep(webpartData);
	        WebPartDataConverter_1._initializeIfNeeded();
	        var componentIdDiv = WebPartDataConverter_1._wpComponentIdDiv.cloneNode();
	        componentIdDiv.textContent = wpdata.id;
	        var htmlPropsDiv = WebPartDataConverter_1._wpHtmlPropsDiv.cloneNode();
	        htmlPropsDiv.innerHTML = WebPartDataConverter_1.convertServerProcessedDataToHtml(wpdata.serverProcessedContent);
	        wpdata.serverProcessedContent = undefined;
	        var wpHtmlDiv = WebPartDataConverter_1._wpDiv.cloneNode();
	        wpHtmlDiv.setAttribute(WebPartDataConverter_1._webPartDataAttribute, JSON.stringify(wpdata));
	        wpHtmlDiv.appendChild(componentIdDiv);
	        wpHtmlDiv.appendChild(htmlPropsDiv);
	        var wrapper = document.createElement('div');
	        wrapper.appendChild(wpHtmlDiv);
	        return wrapper.innerHTML;
	    };
	    WebPartDataConverter.convertHtmlToWebPartData = function (htmlString) {
	        var wpdata;
	        var wrapper = document.createElement('div');
	        wrapper.innerHTML = htmlString;
	        var wpHtmlDiv = wrapper.firstChild;
	        if (wpHtmlDiv && wpHtmlDiv.hasAttribute('data-sp-webpart')) {
	            var wpHtmlDivWebPartAttributeData = wpHtmlDiv.getAttribute(WebPartDataConverter_1._webPartDataAttribute);
	            if (wpHtmlDivWebPartAttributeData) {
	                wpdata = JSON.parse(wpHtmlDivWebPartAttributeData);
	            }
	            if (wpdata) {
	                var htmlPropsDiv = wpHtmlDiv.querySelector('[data-sp-htmlproperties]');
	                wpdata.serverProcessedContent = WebPartDataConverter_1.convertServerProcessedHtmlToData(htmlPropsDiv.innerHTML);
	            }
	        }
	        return wpdata || undefined;
	    };
	    WebPartDataConverter.convertServerProcessedDataToHtml = function (serverContent) {
	        var result = '';
	        if (serverContent) {
	            if (serverContent.htmlStrings) {
	                for (var propPath in serverContent.htmlStrings) {
	                    var value = serverContent.htmlStrings[propPath];
	                    result +=
	                        WebPartDataConverter_1._getHtmlString(propPath, ISerializedServerProcessedData_1.ServerProcessedDataType.htmlString, value);
	                }
	            }
	            if (serverContent.links) {
	                for (var propPath in serverContent.links) {
	                    var value = serverContent.links[propPath];
	                    result +=
	                        WebPartDataConverter_1._getHtmlString(propPath, ISerializedServerProcessedData_1.ServerProcessedDataType.link, value);
	                }
	            }
	            if (serverContent.imageSources) {
	                for (var propPath in serverContent.imageSources) {
	                    var value = serverContent.imageSources[propPath];
	                    result +=
	                        WebPartDataConverter_1._getHtmlString(propPath, ISerializedServerProcessedData_1.ServerProcessedDataType.imageSource, value);
	                }
	            }
	        }
	        return result;
	    };
	    WebPartDataConverter.convertServerProcessedHtmlToData = function (htmlString) {
	        var serverContent = {
	            htmlStrings: {},
	            links: {},
	            imageSources: {}
	        };
	        if (!htmlString || htmlString === '') {
	            return serverContent;
	        }
	        var tempNode = document.createElement('DIV');
	        tempNode.innerHTML = htmlString;
	        var nodes = tempNode.children;
	        for (var i = 0; i < nodes.length; i++) {
	            var node = nodes[i];
	            var key = node.getAttribute('data-sp-prop-name');
	            if (key) {
	                switch (node.tagName) {
	                    case 'DIV':
	                        if (serverContent.htmlStrings) {
	                            serverContent.htmlStrings[key] = node.innerHTML;
	                        }
	                        break;
	                    case 'LINK':
	                    case 'A':
	                        var aTagAttribute = node.getAttribute('href');
	                        if (aTagAttribute && serverContent.links) {
	                            serverContent.links[key] = aTagAttribute;
	                        }
	                        break;
	                    case 'IMG':
	                    case 'SPIMG':
	                        var srcAttribute = node.getAttribute('src');
	                        if (serverContent.imageSources && srcAttribute) {
	                            serverContent.imageSources[key] = srcAttribute;
	                        }
	                        var hrefAttribute = node.getAttribute('href');
	                        if (hrefAttribute && serverContent && serverContent.imageSources &&
	                            (serverContent.imageSources[key] === undefined || serverContent.imageSources[key] === null)) {
	                            serverContent.imageSources[key] = hrefAttribute;
	                        }
	                        break;
	                }
	            }
	        }
	        return serverContent;
	    };
	    WebPartDataConverter._getHtmlString = function (propName, propType, propValue) {
	        var htmlPropString = '';
	        if (propName && typeof propValue === 'string' && propValue) {
	            var sanitizedValue = WebPartDataConverter_1._normalizeHTML(propValue);
	            switch (propType) {
	                case ISerializedServerProcessedData_1.ServerProcessedDataType.htmlString:
	                    htmlPropString = "<div data-sp-prop-name=\"" + propName + "\">" + sanitizedValue + "</div>";
	                    break;
	                case ISerializedServerProcessedData_1.ServerProcessedDataType.link:
	                    htmlPropString = "<a data-sp-prop-name=\"" + propName + "\" href=\"" + sanitizedValue + "\"></a>";
	                    break;
	                case ISerializedServerProcessedData_1.ServerProcessedDataType.imageSource:
	                    htmlPropString = "<img data-sp-prop-name=\"" + propName + "\" src=\"" + sanitizedValue + "\">";
	                    break;
	            }
	        }
	        return (htmlPropString);
	    };
	    WebPartDataConverter._normalizeHTML = function (htmlString) {
	        if (!htmlString || htmlString === '') {
	            return htmlString;
	        }
	        var tempDiv = document.createElement('DIV');
	        tempDiv.innerHTML =
	            "<div class='child1'></div>" +
	                ("<div class='main'>" + htmlString + "</div>") +
	                "<div class='child3'></div>";
	        var children = tempDiv.children;
	        if (!children[0] || children[0].className !== 'child1' ||
	            !children[1] || children[1].className !== 'main' ||
	            !children[2] || children[2].className !== 'child3') {
	            return '';
	        }
	        var mainDiv = children[1];
	        var scriptTags = mainDiv.querySelectorAll('script');
	        for (var i = 0; i < scriptTags.length; i++) {
	            var scriptTag = scriptTags[0];
	            if (scriptTag && scriptTag.parentElement) {
	                scriptTag.parentElement.removeChild(scriptTag);
	            }
	        }
	        return mainDiv.innerHTML;
	    };
	    WebPartDataConverter._initializeIfNeeded = function () {
	        if (!WebPartDataConverter_1._wpDiv) {
	            WebPartDataConverter_1._wpDiv = document.createElement('div');
	            WebPartDataConverter_1._wpDiv.setAttribute('data-sp-webpart', '');
	            WebPartDataConverter_1._wpDiv.setAttribute('data-sp-webpartdataversion', '1.0');
	            WebPartDataConverter_1._wpComponentIdDiv = document.createElement('div');
	            WebPartDataConverter_1._wpComponentIdDiv.setAttribute('data-sp-componentid', '');
	            WebPartDataConverter_1._wpHtmlPropsDiv = document.createElement('div');
	            WebPartDataConverter_1._wpHtmlPropsDiv.setAttribute('data-sp-htmlproperties', '');
	        }
	    };
	    return WebPartDataConverter;
	}());
	WebPartDataConverter._webPartDataAttribute = 'data-sp-webpartdata';
	WebPartDataConverter = WebPartDataConverter_1 = __decorate([
	    decorators_1.sealed
	], WebPartDataConverter);
	exports.WebPartDataConverter = WebPartDataConverter;
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = WebPartDataConverter;
	var WebPartDataConverter_1;


/***/ },
/* 69 */
/***/ function(module, exports) {

	"use strict";
	var ServerProcessedDataType;
	(function (ServerProcessedDataType) {
	    ServerProcessedDataType[ServerProcessedDataType["htmlString"] = 1] = "htmlString";
	    ServerProcessedDataType[ServerProcessedDataType["link"] = 2] = "link";
	    ServerProcessedDataType[ServerProcessedDataType["imageSource"] = 3] = "imageSource";
	})(ServerProcessedDataType = exports.ServerProcessedDataType || (exports.ServerProcessedDataType = {}));


/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var decorators_1 = __webpack_require__(4);
	var React = __webpack_require__(26);
	var Button_1 = __webpack_require__(71);
	var Utilities_1 = __webpack_require__(72);
	__webpack_require__(29);
	var Placeholder = (function (_super) {
	    __extends(Placeholder, _super);
	    function Placeholder() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Placeholder.prototype.render = function () {
	        this._descriptionId = "description-" + Math.random().toString();
	        return (React.createElement("div", { className: Utilities_1.css('Placeholder', this.props.contentClassName) },
	            React.createElement("div", { className: 'Placeholder-container ms-Grid' },
	                React.createElement("div", { className: 'Placeholder-head ms-Grid-row' },
	                    React.createElement("div", { className: 'ms-Grid-col ms-u-hiddenSm ms-u-md3' }),
	                    React.createElement("div", { className: 'Placeholder-headContainer ms-Grid-col ms-u-sm12 ms-u-md6' },
	                        React.createElement("i", { className: 'Placeholder-icon ms-fontSize-su ms-Icon ' + this.props.icon }),
	                        React.createElement("span", { className: 'Placeholder-text ms-fontWeight-light ms-fontSize-xxl' }, this.props.iconText)),
	                    React.createElement("div", { className: 'ms-Grid-col ms-u-hiddenSm ms-u-md3' })),
	                React.createElement("div", { className: 'Placeholder-description ms-Grid-row' },
	                    React.createElement("span", { className: 'Placeholder-descriptionText', id: this._descriptionId }, this.props.description)),
	                this.props.children,
	                React.createElement("div", { className: 'Placeholder-description ms-Grid-row' }, this.buttonElement))));
	    };
	    Object.defineProperty(Placeholder.prototype, "buttonElement", {
	        get: function () {
	            var _this = this;
	            return this.props.buttonLabel
	                ? (React.createElement(Button_1.Button, { ref: function (c) { return _this._placeholderButton = c; }, buttonType: Button_1.ButtonType.primary, onClick: this.props.onAdd, ariaLabel: this.props.buttonLabel, ariaDescription: this.props.description }, this.props.buttonLabel))
	                : undefined; 
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Placeholder.prototype.focusOnPlaceHolderButton = function () {
	        if (this._placeholderButton) {
	            this._placeholderButton.focus();
	        }
	    };
	    return Placeholder;
	}(React.Component));
	Placeholder = __decorate([
	    decorators_1.sealed
	], Placeholder);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Placeholder;


/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	// Loading office-ui-fabric-react/components/Button/index.js
	var package = __webpack_require__(28);
	module.exports = package;

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	// Loading office-ui-fabric-react/Utilities.js
	var package = __webpack_require__(28);
	module.exports = package;

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __assign = (this && this.__assign) || Object.assign || function(t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	            t[p] = s[p];
	    }
	    return t;
	};
	var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
	    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
	    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
	    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	var decorators_1 = __webpack_require__(4);
	var React = __webpack_require__(26);
	var office_ui_fabric_react_1 = __webpack_require__(28);
	var WebPartForm = (function (_super) {
	    __extends(WebPartForm, _super);
	    function WebPartForm(props) {
	        var _this = _super.call(this, props) || this;
	        _this._handleKeyDown = _this._handleKeyDown.bind(_this);
	        _this._handleClick = _this._handleClick.bind(_this);
	        return _this;
	    }
	    WebPartForm.prototype.render = function () {
	        var _this = this;
	        var nativeProps = office_ui_fabric_react_1.getNativeProps(this.props, office_ui_fabric_react_1.divProperties);
	        return (this.props.isClassicSharePointPage
	            ? (React.createElement("div", __assign({ ref: function (ref) { return _this._webpartDiv = ref; }, role: 'form' }, nativeProps, { onKeyDown: this._handleKeyDown, onClick: this._handleClick }), this.props.children))
	            : (React.createElement("form", __assign({}, nativeProps), this.props.children)));
	    };
	    WebPartForm.prototype._handleKeyDown = function (evt) {
	        if (this.props.onKeyDown) {
	            this.props.onKeyDown(evt);
	        }
	        if (evt.keyCode === office_ui_fabric_react_1.KeyCodes.enter && this.props.onSubmit) {
	            this.props.onSubmit(evt);
	        }
	    };
	    WebPartForm.prototype._handleClick = function (event) {
	        if (this.props.onSubmit && document.activeElement === this._submitElement) {
	            this.props.onSubmit(event);
	        }
	    };
	    Object.defineProperty(WebPartForm.prototype, "_submitElement", {
	        get: function () {
	            return this._webpartDiv.querySelector('input[type="submit"], button:not([type="reset"]):not([type="button"]):not([type="menu"])');
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return WebPartForm;
	}(React.Component));
	WebPartForm = __decorate([
	    decorators_1.sealed
	], WebPartForm);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = WebPartForm;


/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var IPropertyPaneField_1 = __webpack_require__(45);
	function PropertyPaneCustomField(properties) {
	    return {
	        type: IPropertyPaneField_1.PropertyPaneFieldType.Custom,
	        targetProperty: undefined,
	        properties: properties
	    };
	}
	exports.PropertyPaneCustomField = PropertyPaneCustomField;


/***/ },
/* 75 */
/***/ function(module, exports) {

	"use strict";
	var PropertyPaneButtonType;
	(function (PropertyPaneButtonType) {
	    PropertyPaneButtonType[PropertyPaneButtonType["Normal"] = 0] = "Normal";
	    PropertyPaneButtonType[PropertyPaneButtonType["Primary"] = 1] = "Primary";
	    PropertyPaneButtonType[PropertyPaneButtonType["Hero"] = 2] = "Hero";
	    PropertyPaneButtonType[PropertyPaneButtonType["Compound"] = 3] = "Compound";
	    PropertyPaneButtonType[PropertyPaneButtonType["Command"] = 4] = "Command";
	    PropertyPaneButtonType[PropertyPaneButtonType["Icon"] = 5] = "Icon";
	})(PropertyPaneButtonType = exports.PropertyPaneButtonType || (exports.PropertyPaneButtonType = {}));


/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var IPropertyPaneField_1 = __webpack_require__(45);
	function PropertyPaneButton(targetProperty, properties) {
	    return {
	        type: IPropertyPaneField_1.PropertyPaneFieldType.Button,
	        targetProperty: targetProperty,
	        properties: properties
	    };
	}
	exports.PropertyPaneButton = PropertyPaneButton;


/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var IPropertyPaneField_1 = __webpack_require__(45);
	function PropertyPaneCheckbox(targetProperty, properties) {
	    return {
	        type: IPropertyPaneField_1.PropertyPaneFieldType.CheckBox,
	        targetProperty: targetProperty,
	        properties: properties
	    };
	}
	exports.PropertyPaneCheckbox = PropertyPaneCheckbox;


/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var IPropertyPaneField_1 = __webpack_require__(45);
	function PropertyPaneChoiceGroup(targetProperty, properties) {
	    return {
	        type: IPropertyPaneField_1.PropertyPaneFieldType.ChoiceGroup,
	        targetProperty: targetProperty,
	        properties: properties
	    };
	}
	exports.PropertyPaneChoiceGroup = PropertyPaneChoiceGroup;


/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var IPropertyPaneField_1 = __webpack_require__(45);
	function PropertyPaneDropdown(targetProperty, properties) {
	    return {
	        type: IPropertyPaneField_1.PropertyPaneFieldType.Dropdown,
	        targetProperty: targetProperty,
	        properties: properties
	    };
	}
	exports.PropertyPaneDropdown = PropertyPaneDropdown;


/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var IPropertyPaneField_1 = __webpack_require__(45);
	function PropertyPaneHorizontalRule() {
	    return {
	        type: IPropertyPaneField_1.PropertyPaneFieldType.HorizontalRule,
	        targetProperty: undefined,
	        properties: undefined
	    };
	}
	exports.PropertyPaneHorizontalRule = PropertyPaneHorizontalRule;


/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var IPropertyPaneField_1 = __webpack_require__(45);
	function PropertyPaneLabel(targetProperty, properties) {
	    return {
	        type: IPropertyPaneField_1.PropertyPaneFieldType.Label,
	        targetProperty: targetProperty,
	        properties: properties
	    };
	}
	exports.PropertyPaneLabel = PropertyPaneLabel;


/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var IPropertyPaneField_1 = __webpack_require__(45);
	function PropertyPaneLink(targetProperty, properties) {
	    return {
	        type: IPropertyPaneField_1.PropertyPaneFieldType.Link,
	        targetProperty: undefined,
	        properties: properties
	    };
	}
	exports.PropertyPaneLink = PropertyPaneLink;


/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var IPropertyPaneField_1 = __webpack_require__(45);
	function PropertyPaneSlider(targetProperty, properties) {
	    return {
	        type: IPropertyPaneField_1.PropertyPaneFieldType.Slider,
	        targetProperty: targetProperty,
	        properties: properties
	    };
	}
	exports.PropertyPaneSlider = PropertyPaneSlider;


/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var IPropertyPaneField_1 = __webpack_require__(45);
	function PropertyPaneTextField(targetProperty, properties) {
	    return {
	        type: IPropertyPaneField_1.PropertyPaneFieldType.TextField,
	        targetProperty: targetProperty,
	        properties: properties
	    };
	}
	exports.PropertyPaneTextField = PropertyPaneTextField;


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var IPropertyPaneField_1 = __webpack_require__(45);
	function PropertyPaneToggle(targetProperty, properties) {
	    return {
	        type: IPropertyPaneField_1.PropertyPaneFieldType.Toggle,
	        targetProperty: targetProperty,
	        properties: properties
	    };
	}
	exports.PropertyPaneToggle = PropertyPaneToggle;


/***/ },
/* 86 */
/***/ function(module, exports) {

	"use strict";
	var BasePropertyPaneControl = (function () {
	    function BasePropertyPaneControl() {
	    }
	    BasePropertyPaneControl.prototype._internalOnAfterResize = function () {
	    };
	    BasePropertyPaneControl.prototype._internalOnConfigurationEvent = function (configurationEvent) {
	    };
	    BasePropertyPaneControl.prototype._internalSerialize = function () {
	        return undefined;
	    };
	    return BasePropertyPaneControl;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = BasePropertyPaneControl;


/***/ }
/******/ ])});;
//# sourceMappingURL=sp-webpart-base.js.map