/// <reference types="es6-promise" />
/**
 * PropertyPaneTextField component props.
 *
 * @public
 */
export interface IPropertyPaneTextFieldProps {
    /**
     * Whether or not the textfield is a multiline textfield.
     * Default value is false.
     */
    multiline?: boolean;
    /**
     * Whether or not the multiline textfield is resizable.
     * Default value is true.
     */
    resizable?: boolean;
    /**
     * Whether or not the textfield is underlined.
     * Default value is false.
     */
    underlined?: boolean;
    /**
     * Label for the textfield.
     */
    label?: string;
    /**
     * The textfield input description.
     */
    description?: string;
    /**
     * Current value of the textfield. Only provide this if the textfield is a controlled component where you
     * are maintaining its current state.
     */
    value?: string;
    /**
     * Default value of the textfield, if any.
     */
    errorMessage?: string;
    /**
     * The method is used to get the validation error message and determine whether the input value is valid or not.
     *
     *   When it returns string:
     *   - If valid, it returns empty string.
     *   - If invalid, it returns the error message string and the text field will
     *     show a red border and show an error message below the text field.
     *
     *   When it returns Promise<string>:
     *   - The resolved value is display as error message.
     *   - The rejected, the value is thrown away.
     *
     */
    onGetErrorMessage?: (value: string) => string | Promise<string>;
    /**
     * Text field will start to validate after users stop typing for `deferredValidationTime` milliseconds.
     * Default value is 200.
     */
    deferredValidationTime?: number;
    /**
     * Aria Label for textfield, if any.
     */
    ariaLabel?: string;
    /**
     * placeholder text to be displayed in the Textfield.
     */
    placeholder?: string;
    /**
     * Whether the property pane textfield is enabled or not.
     */
    disabled?: boolean;
}
