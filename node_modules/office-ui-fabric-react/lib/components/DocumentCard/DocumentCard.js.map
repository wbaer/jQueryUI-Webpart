{"version":3,"sources":["components/DocumentCard/DocumentCard.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,2DAA4E;AAC5E,6CAGyB;AACzB,+BAA6B;AAE7B;IAAkC,gCAAwC;IAA1E;;IAiDA,CAAC;IA5CQ,6BAAM,GAAb;QACM,IAAA,eAA6E,EAA3E,oBAAO,EAAE,4BAAW,EAAE,sBAAQ,EAAE,wBAAS,EAAE,cAAI,EAAE,4BAAW,CAAgB;QAClF,IAAI,UAAU,GAAG,CAAC,OAAO,IAAI,WAAW,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;QAEzD,gFAAgF;QAChF,IAAI,KAAK,CAAC;QACV,EAAE,CAAC,CAAC,IAAI,KAAK,qCAAgB,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;YACrD,KAAK,GAAG;gBACN,iBAAiB,EAAE,WAAW;aAC/B,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,CACL,6BACE,SAAS,EACP,eAAG,CACD,iBAAiB,EACjB;gBACE,6BAA6B,EAAE,UAAU;gBACzC,0BAA0B,EAAE,IAAI,KAAK,qCAAgB,CAAC,OAAO,GAAG,IAAI,GAAG,KAAK;aAC7E,EACD,SAAS,CACV,EAEH,OAAO,EAAG,UAAU,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,EAC3C,KAAK,EAAG,KAAK,IACX,QAAQ,CACN,CACP,CAAC;IACJ,CAAC;IAGO,+BAAQ,GAAhB,UAAiB,EAAiC;QAC5C,IAAA,eAAqC,EAAnC,oBAAO,EAAE,4BAAW,CAAgB;QAE1C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,OAAO,CAAC,EAAE,CAAC,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;YACnC,iGAAiG;YACjG,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,WAAW,CAAC;YACnC,EAAE,CAAC,cAAc,EAAE,CAAC;YACpB,EAAE,CAAC,eAAe,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;IACH,mBAAC;AAAD,CAjDA,AAiDC,CAjDiC,KAAK,CAAC,SAAS;AACjC,yBAAY,GAAuB;IAC/C,IAAI,EAAE,qCAAgB,CAAC,MAAM;CAC9B,CAAC;AAkCF;IADC,oBAAQ;4CAYR;AAhDU,oCAAY","file":"components/DocumentCard/DocumentCard.js","sourcesContent":["import * as React from 'react';\r\nimport { IDocumentCardProps, DocumentCardType } from './DocumentCard.Props';\r\nimport {\r\n  autobind,\r\n  css\r\n} from '../../Utilities';\r\nimport './DocumentCard.scss';\r\n\r\nexport class DocumentCard extends React.Component<IDocumentCardProps, any> {\r\n  public static defaultProps: IDocumentCardProps = {\r\n    type: DocumentCardType.normal\r\n  };\r\n\r\n  public render() {\r\n    let { onClick, onClickHref, children, className, type, accentColor } = this.props;\r\n    let actionable = (onClick || onClickHref) ? true : false;\r\n\r\n    // Override the border color if an accent color was provided (compact card only)\r\n    let style;\r\n    if (type === DocumentCardType.compact && accentColor) {\r\n      style = {\r\n        borderBottomColor: accentColor\r\n      };\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          css(\r\n            'ms-DocumentCard',\r\n            {\r\n              'ms-DocumentCard--actionable': actionable,\r\n              'ms-DocumentCard--compact': type === DocumentCardType.compact ? true : false\r\n            },\r\n            className\r\n          )\r\n        }\r\n        onClick={ actionable ? this._onClick : null }\r\n        style={ style }>\r\n        { children }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onClick(ev: React.MouseEvent<HTMLElement>): void {\r\n    let { onClick, onClickHref } = this.props;\r\n\r\n    if (onClick) {\r\n      onClick(ev);\r\n    } else if (!onClick && onClickHref) {\r\n      // If no onClick Function was provided and we do have an onClickHref, redirect to the onClickHref\r\n      window.location.href = onClickHref;\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}