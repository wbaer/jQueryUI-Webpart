"use strict";
var sp_core_library_1 = require("@microsoft/sp-core-library");
var DebugManifestPrompt_module_scss_1 = require("./styles/DebugManifestPrompt.module.scss");
var SPLoader_resx_1 = require("./SPLoader.resx");
var DebugManifestPrompt = (function () {
    function DebugManifestPrompt() {
        this._allowDebug = undefined;
    }
    Object.defineProperty(DebugManifestPrompt, "instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new DebugManifestPrompt();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    DebugManifestPrompt.prototype.peek = function () {
        return !!this._allowDebug;
    };
    DebugManifestPrompt.prototype.dangerouslyForce = function () {
        this._allowDebug = true;
    };
    DebugManifestPrompt.prototype.ensureDebugAllowed = function (ask) {
        var _this = this;
        if (ask === false || this._allowDebug !== undefined) {
            return Promise.resolve(!!this._allowDebug);
        }
        else {
            return new Promise(function (resolve, reject) {
                var overlayDiv = document.createElement('div');
                document.body.appendChild(overlayDiv);
                var dialogElement = document.createElement('div');
                dialogElement.setAttribute('data-automation-id', 'debugManifestDialog');
                dialogElement.setAttribute('role', 'dialog');
                dialogElement.className = DebugManifestPrompt_module_scss_1.default.dialog;
                var labelId = 'manifestWarningLabel';
                dialogElement.setAttribute('aria-labelledby', labelId);
                var labelElement = document.createElement('p');
                labelElement.setAttribute('id', labelId);
                labelElement.className = DebugManifestPrompt_module_scss_1.default.warning;
                labelElement.textContent = SPLoader_resx_1.default.debugManifestLoadingWarning;
                dialogElement.appendChild(labelElement);
                var warningCancelElement = document.createElement('p');
                warningCancelElement.className = DebugManifestPrompt_module_scss_1.default.warning;
                warningCancelElement.textContent = sp_core_library_1.Text.format(SPLoader_resx_1.default.debugManifestLoadingWarning2, SPLoader_resx_1.default.debugManifestLoadingCancel);
                dialogElement.appendChild(warningCancelElement);
                var actionContainer = document.createElement('div');
                actionContainer.className = DebugManifestPrompt_module_scss_1.default.actionContainer;
                var buttonHandler = function (result) {
                    if (dialogElement.parentNode) {
                        dialogElement.parentNode.removeChild(dialogElement);
                    }
                    if (overlayDiv.parentNode) {
                        overlayDiv.parentNode.removeChild(overlayDiv);
                    }
                    _this._allowDebug = result;
                    resolve(_this._allowDebug);
                };
                var confirmButton = document.createElement('button');
                confirmButton.setAttribute('data-automation-id', 'debugManifestConfirmButton');
                confirmButton.textContent = SPLoader_resx_1.default.debugManifestLoadingConfirm;
                confirmButton.onclick = function (ev) {
                    buttonHandler(true);
                };
                actionContainer.appendChild(confirmButton);
                var cancelButton = document.createElement('button');
                cancelButton.setAttribute('data-automation-id', 'debugManifestCancelButton');
                cancelButton.setAttribute('autofocus', '');
                cancelButton.textContent = SPLoader_resx_1.default.debugManifestLoadingCancel;
                cancelButton.onclick = function (ev) {
                    buttonHandler(false);
                };
                actionContainer.appendChild(cancelButton);
                dialogElement.appendChild(actionContainer);
                overlayDiv.className = DebugManifestPrompt_module_scss_1.default.overlay;
                document.body.appendChild(dialogElement);
            });
        }
    };
    return DebugManifestPrompt;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = DebugManifestPrompt;
