module.exports = "import * as React from 'react';\r\n\r\nexport interface INav {\r\n  /**\r\n   * The meta 'key' property of the currently selected NavItem of the Nav. Can return\r\n   * undefined if the currently selected nav item has no populated key property. Be aware\r\n   * that in order for Nav to properly understand which key is selected all NavItems in\r\n   * all groups of the Nav must have populated key properties.\r\n   */\r\n  selectedKey: string;\r\n}\r\n\r\nexport interface INavProps {\r\n  /**\r\n   * A collection of link groups to display in the navigation bar\r\n   */\r\n  groups: INavLinkGroup[];\r\n\r\n  /**\r\n   * Optional class name to allow styling.\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * Used to customize how content inside the link tag is rendered\r\n   * @defaultvalue Default link rendering\r\n   */\r\n  onRenderLink?: Function;\r\n\r\n  /**\r\n   * Function callback invoked when a link in the navigation is clicked\r\n   */\r\n  onLinkClick?: (ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => void;\r\n\r\n  /**\r\n   * Indicates whether the navigation component renders on top of other content in the UI\r\n   */\r\n  isOnTop?: boolean;\r\n\r\n  /**\r\n   * (Optional) The key of the nav item initially selected.\r\n   */\r\n  initialSelectedKey?: string;\r\n\r\n  /**\r\n   * (Optional) The key of the nav item selected by caller.\r\n   */\r\n  selectedKey?: string;\r\n\r\n  /**\r\n   * (Optional) The nav container aria label.\r\n   */\r\n  ariaLabel?: string;\r\n\r\n  /**\r\n   * (Optional) The nav container aria label.\r\n   */\r\n  expandButtonAriaLabel?: string;\r\n\r\n  /**\r\n   * @deprecated\r\n   * deprecated at v0.68.1 and will be removed at >= V1.0.0  not used.\r\n   * (Optional) The accessibility text for the expanded state\r\n   **/\r\n  expandedStateText?: string;\r\n\r\n  /**\r\n   * @deprecated\r\n   * deprecated at v0.68.1 and will be removed at >= V1.0.0  not used.\r\n   * (Optional) The accessibility text for the collapsed state text\r\n   **/\r\n  collapsedStateText?: string;\r\n}\r\n\r\nexport interface INavLinkGroup {\r\n  /**\r\n   * Text to render as the header of a group\r\n   */\r\n  name?: string;\r\n\r\n  /**\r\n   * Links to render within this group\r\n   */\r\n  links: INavLink[];\r\n\r\n  /**\r\n   * The name to use for functional automation tests\r\n   */\r\n  automationId?: string;\r\n}\r\n\r\nexport interface INavLink {\r\n  /**\r\n   * Text to render for this link\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * URL to navigate to for this link\r\n   */\r\n  url: string;\r\n\r\n  /**\r\n   * Meta info for the link server, if negative, client side added node.\r\n   */\r\n  key?: string;\r\n\r\n  /**\r\n   * Child links to this link, if any\r\n   */\r\n  links?: INavLink[];\r\n\r\n  /**\r\n   * Function callback invoked when a link in the navigation is clicked\r\n   */\r\n  onClick?: (ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => void;\r\n\r\n  /**\r\n   * button icon name if applied\r\n   */\r\n  icon?: string;\r\n\r\n  /**\r\n   * Classname to apply to the icon link.\r\n   */\r\n  iconClassName?: string;\r\n\r\n  /**\r\n   * @deprecated\r\n   * deprecated at v0.68.1 and will be removed at >= V1.0.0  not used.\r\n   * The name of the item to be used in logging engagement data\r\n   */\r\n  engagementName?: string;\r\n\r\n  /**\r\n   * @deprecated\r\n   * deprecated at v0.68.1 and will be removed at >= V1.0.0  not used.\r\n   * The alt text for the item\r\n   */\r\n  altText?: string;\r\n\r\n  /**\r\n   * The name to use for functional automation tests\r\n   */\r\n  automationId?: string;\r\n\r\n  /**\r\n   * Whether or not the link is in an expanded state\r\n   */\r\n  isExpanded?: boolean;\r\n\r\n  /**\r\n   * Aria label for nav link\r\n   */\r\n  ariaLabel?: string;\r\n\r\n  /**\r\n   * title for tooltip or description\r\n   */\r\n  title?: string;\r\n\r\n  /**\r\n   * Link <a> target.\r\n   */\r\n  target?: string;\r\n\r\n  /**\r\n   * Point to the parent node key.  This is used in EditNav when move node from sublink to\r\n   *   parent link vs vers.\r\n   */\r\n  parentId?: string;\r\n\r\n  /**\r\n   * (Optional) Any additional properties to apply to the rendered links.\r\n   */\r\n  [propertyName: string]: any;\r\n}\r\n";