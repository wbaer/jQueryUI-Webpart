{"version":3,"sources":["definitions/ApiPackage.ts"],"names":[],"mappings":"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","file":"definitions/ApiPackage.js","sourcesContent":["/* tslint:disable:no-bitwise */\r\n\r\nimport * as ts from 'typescript';\r\nimport Extractor from '../Extractor';\r\nimport ApiStructuredType from './ApiStructuredType';\r\nimport ApiEnum from './ApiEnum';\r\nimport ApiFunction from './ApiFunction';\r\nimport ApiItem, { ApiItemKind, IApiItemOptions } from './ApiItem';\r\nimport ApiItemContainer from './ApiItemContainer';\r\nimport TypeScriptHelpers from '../TypeScriptHelpers';\r\n\r\n/**\r\n  * This class is part of the ApiItem abstract syntax tree.  It represents the top-level\r\n  * exports for an Rush package.  This object acts as the root of the Extractor's tree.\r\n  */\r\nexport default class ApiPackage extends ApiItemContainer {\r\n  private static _getOptions(extractor: Extractor, rootFile: ts.SourceFile): IApiItemOptions {\r\n    const rootFileSymbol: ts.Symbol = TypeScriptHelpers.getSymbolForDeclaration(rootFile);\r\n    let statement: ts.VariableStatement;\r\n    let foundDescription: ts.Node = undefined;\r\n\r\n    for (const statementNode of rootFile.statements) {\r\n      if (statementNode.kind === ts.SyntaxKind.VariableStatement) {\r\n        statement = statementNode as ts.VariableStatement;\r\n        for (const statementDeclaration of statement.declarationList.declarations) {\r\n          if (statementDeclaration.name.getText() === 'packageDescription') {\r\n            foundDescription = statement;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      extractor,\r\n      declaration: rootFileSymbol.declarations[0],\r\n      declarationSymbol: rootFileSymbol,\r\n      jsdocNode: foundDescription\r\n    };\r\n  }\r\n  constructor(extractor: Extractor, rootFile: ts.SourceFile) {\r\n    super(ApiPackage._getOptions(extractor, rootFile));\r\n    this.kind = ApiItemKind.Package;\r\n\r\n    const exportSymbols: ts.Symbol[] = this.typeChecker.getExportsOfModule(this.declarationSymbol);\r\n    if (exportSymbols) {\r\n      for (const exportSymbol of exportSymbols) {\r\n        const followedSymbol: ts.Symbol = this.followAliases(exportSymbol);\r\n\r\n        if (!followedSymbol.declarations) {\r\n          this.reportWarning(`Definition with no declarations: ${exportSymbol.name}`);\r\n          continue;\r\n        }\r\n\r\n        for (const declaration of followedSymbol.declarations) {\r\n          const options: IApiItemOptions = {\r\n            extractor: this.extractor,\r\n            declaration,\r\n            declarationSymbol: followedSymbol,\r\n            jsdocNode: declaration,\r\n            exportSymbol\r\n          };\r\n\r\n          if (followedSymbol.flags & (ts.SymbolFlags.Class | ts.SymbolFlags.Interface)) {\r\n            this.addMemberItem(new ApiStructuredType(options));\r\n          } else if (followedSymbol.flags & ts.SymbolFlags.Function) {\r\n            this.addMemberItem(new ApiFunction(options));\r\n          } else if (followedSymbol.flags & ts.SymbolFlags.Enum) {\r\n            this.addMemberItem(new ApiEnum(options));\r\n          } else {\r\n            this.reportWarning(`Unsupported export: ${exportSymbol.name}`);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find a member in this package by name and return it if found.\r\n   * \r\n   * @param memberName - the name of the member ApiItem\r\n   */\r\n  public getMemberItem(memberName: string): ApiItem {\r\n    if (this.memberItems.has(memberName)) {\r\n      return this.memberItems.get(memberName);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public shouldHaveDocumentation(): boolean {\r\n    // We don't write JSDoc for the ApiPackage object\r\n    return false;\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\src"}