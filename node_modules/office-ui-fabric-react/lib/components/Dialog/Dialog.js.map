{"version":3,"sources":["components/Dialog/Dialog.tsx"],"names":[],"mappings":"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","file":"components/Dialog/Dialog.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  css,\r\n  getId\r\n} from '../../Utilities';\r\nimport { FocusTrapZone } from '../FocusTrapZone/index';\r\nimport { IDialogProps, DialogType } from './Dialog.Props';\r\nimport { Overlay } from '../../Overlay';\r\nimport { Layer } from '../../Layer';\r\nimport { Button, ButtonType } from '../../Button';\r\nimport { DialogFooter } from './DialogFooter';\r\nimport { Popup } from '../Popup/index';\r\nimport { withResponsiveMode, ResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\r\nimport './Dialog.scss';\r\n\r\n// @TODO - need to change this to a panel whenever the breakpoint is under medium (verify the spec)\r\n\r\nexport interface IDialogState {\r\n  isOpen?: boolean;\r\n  isAnimatingOpen?: boolean;\r\n  isAnimatingClose?: boolean;\r\n  id?: string;\r\n}\r\n\r\n@withResponsiveMode\r\nexport class Dialog extends BaseComponent<IDialogProps, IDialogState> {\r\n\r\n  public static defaultProps: IDialogProps = {\r\n    isOpen: false,\r\n    type: DialogType.normal,\r\n    isDarkOverlay: true,\r\n    isBlocking: false,\r\n    className: '',\r\n    containerClassName: '',\r\n    contentClassName: '',\r\n    topButtonsProps: []\r\n  };\r\n\r\n  constructor(props: IDialogProps) {\r\n    super(props);\r\n\r\n    this._onDialogRef = this._onDialogRef.bind(this);\r\n\r\n    this.state = {\r\n      id: getId('Dialog'),\r\n      isOpen: props.isOpen,\r\n      isAnimatingOpen: props.isOpen,\r\n      isAnimatingClose: false\r\n    };\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: IDialogProps) {\r\n    // Opening the dialog\r\n    if (newProps.isOpen && !this.state.isOpen) {\r\n      this.setState({\r\n        isOpen: true,\r\n        isAnimatingOpen: true,\r\n        isAnimatingClose: false\r\n      });\r\n    }\r\n\r\n    // Closing the dialog\r\n    if (!newProps.isOpen && this.state.isOpen) {\r\n      this.setState({\r\n        isAnimatingOpen: false,\r\n        isAnimatingClose: true\r\n      });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    let {\r\n      closeButtonAriaLabel,\r\n      elementToFocusOnDismiss,\r\n      firstFocusableSelector,\r\n      forceFocusInsideTrap,\r\n      ignoreExternalFocusing,\r\n      isBlocking,\r\n      isClickableOutsideFocusTrap,\r\n      isDarkOverlay,\r\n      onDismiss,\r\n      onLayerDidMount,\r\n      onLayerMounted,\r\n      responsiveMode,\r\n      subText,\r\n      title,\r\n      type\r\n    } = this.props;\r\n    let { id, isOpen, isAnimatingOpen, isAnimatingClose } = this.state;\r\n    // @TODO - the discussion on whether the Dialog contain a property for rendering itself is still being discussed\r\n    if (!isOpen) {\r\n      return null;\r\n    }\r\n\r\n    let subTextContent;\r\n    const dialogClassName = css('ms-Dialog', this.props.className, {\r\n      'ms-Dialog--lgHeader': type === DialogType.largeHeader,\r\n      'ms-Dialog--close': type === DialogType.close,\r\n      'is-open': isOpen,\r\n      'is-animatingOpen': isAnimatingOpen,\r\n      'is-animatingClose': isAnimatingClose\r\n    });\r\n    let groupings = this._groupChildren();\r\n\r\n    if (subText) {\r\n      subTextContent = <p className='ms-Dialog-subText' id={ id + '-subText' }>{ subText }</p>;\r\n    }\r\n\r\n    // @temp tuatology - Will adjust this to be a panel at certain breakpoints\r\n    if (responsiveMode >= ResponsiveMode.small) {\r\n      return (\r\n        <Layer onLayerDidMount={ onLayerMounted || onLayerDidMount }>\r\n          <Popup\r\n            role={ isBlocking ? 'alertdialog' : 'dialog' }\r\n            ariaLabelledBy={ title && id + '-title' }\r\n            ariaDescribedBy={ subText && id + '-subText' }\r\n            onDismiss={ onDismiss }\r\n          >\r\n            <div\r\n              className={ dialogClassName }\r\n              ref={ this._onDialogRef }>\r\n              <Overlay isDarkThemed={ isDarkOverlay } onClick={ isBlocking ? null : onDismiss } />\r\n              <FocusTrapZone\r\n                className={ css('ms-Dialog-main', this.props.containerClassName) }\r\n                elementToFocusOnDismiss={ elementToFocusOnDismiss }\r\n                isClickableOutsideFocusTrap={ isClickableOutsideFocusTrap ? isClickableOutsideFocusTrap : !isBlocking }\r\n                ignoreExternalFocusing={ ignoreExternalFocusing }\r\n                forceFocusInsideTrap={ forceFocusInsideTrap }\r\n                firstFocusableSelector={ firstFocusableSelector }>\r\n                <div className='ms-Dialog-header'>\r\n                  <p className='ms-Dialog-title' id={ id + '-title' }>{ title }</p>\r\n                  <div className='ms-Dialog-topButton'>\r\n                    { this.props.topButtonsProps.map((props) => (\r\n                      <Button {...props} />\r\n                    )) }\r\n                    <Button\r\n                      className='ms-Dialog-button ms-Dialog-button--close'\r\n                      buttonType={ ButtonType.icon }\r\n                      icon='Cancel'\r\n                      ariaLabel={ closeButtonAriaLabel }\r\n                      onClick={ onDismiss }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className='ms-Dialog-inner'>\r\n                  <div className={ css('ms-Dialog-content', this.props.contentClassName) }>\r\n                    { subTextContent }\r\n                    { groupings.contents }\r\n                  </div>\r\n                  { groupings.footers }\r\n                </div>\r\n              </FocusTrapZone>\r\n            </div>\r\n          </Popup>\r\n        </Layer>\r\n      );\r\n    }\r\n  }\r\n\r\n  // @TODO - typing the footers as an array of DialogFooter is difficult because\r\n  // casing \"child as DialogFooter\" causes a problem because\r\n  // \"Neither type 'ReactElement<any>' nor type 'DialogFooter' is assignable to the other.\"\r\n  private _groupChildren(): { footers: any[]; contents: any[]; } {\r\n\r\n    let groupings: { footers: any[]; contents: any[]; } = {\r\n      footers: [],\r\n      contents: []\r\n    };\r\n\r\n    React.Children.map(this.props.children, child => {\r\n      if (typeof child === 'object' && child !== null && child.type === DialogFooter) {\r\n        groupings.footers.push(child);\r\n      } else {\r\n        groupings.contents.push(child);\r\n      }\r\n    });\r\n\r\n    return groupings;\r\n  }\r\n\r\n  private _onDialogRef(ref: HTMLDivElement) {\r\n    if (ref) {\r\n      this._events.on(ref, 'animationend', this._onAnimationEnd);\r\n    } else {\r\n      this._events.off();\r\n    }\r\n  }\r\n\r\n  // Watch for completed animations and set the state\r\n  private _onAnimationEnd(ev: AnimationEvent) {\r\n\r\n    // The dialog has just opened (faded in)\r\n    if (ev.animationName.indexOf('fadeIn') > -1) {\r\n      this.setState({\r\n        isOpen: true,\r\n        isAnimatingOpen: false\r\n      });\r\n    }\r\n\r\n    // The dialog has just closed (faded out)\r\n    if (ev.animationName.indexOf('fadeOut') > -1) {\r\n      this.setState({\r\n        isOpen: false,\r\n        isAnimatingClose: false\r\n      });\r\n\r\n      // Call the onDismiss callback\r\n      if (this.props.onDismissed) {\r\n        this.props.onDismissed();\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}