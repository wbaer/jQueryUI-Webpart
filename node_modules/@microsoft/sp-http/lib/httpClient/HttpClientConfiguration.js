"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var decorators_1 = require("@microsoft/decorators");
var HttpClientConfiguration = (function () {
    function HttpClientConfiguration(flags, overrideFlags) {
        this.flags = {};
        this.initializeFlags();
        this._mergeFlags(flags);
        if (overrideFlags) {
            this._mergeFlags(overrideFlags);
        }
    }
    HttpClientConfiguration.prototype.overrideWith = function (sourceFlags) {
        return new HttpClientConfiguration(this.flags, sourceFlags);
    };
    HttpClientConfiguration.prototype.initializeFlags = function () {
    };
    HttpClientConfiguration.prototype._mergeFlags = function (source) {
        for (var _i = 0, _a = Object.keys(this.flags); _i < _a.length; _i++) {
            var key = _a[_i];
            if (source.hasOwnProperty(key)) {
                if (source[key] !== undefined) {
                    this.flags[key] = source[key];
                }
            }
        }
    };
    return HttpClientConfiguration;
}());
__decorate([
    decorators_1.virtual
], HttpClientConfiguration.prototype, "overrideWith", null);
__decorate([
    decorators_1.virtual
], HttpClientConfiguration.prototype, "initializeFlags", null);
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = HttpClientConfiguration;
exports.predefinedConfigurations = {
    v1: new HttpClientConfiguration({})
};
