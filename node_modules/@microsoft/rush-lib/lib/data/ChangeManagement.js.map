{"version":3,"sources":["data/ChangeManagement.ts"],"names":[],"mappings":"AAAA,4FAA4F;AAC5F,2DAA2D;;AAU3D;;GAEG;AACH,IAAY,UAMX;AAND,WAAY,UAAU;IACpB,2CAAQ,CAAA;IACR,uDAAc,CAAA;IACd,6CAAS,CAAA;IACT,6CAAS,CAAA;IACT,6CAAS,CAAA;AACX,CAAC,EANW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAMrB","file":"data/ChangeManagement.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/**\r\n * Representation for a changes file\r\n */\r\nexport interface IChangeFile {\r\n  changes: IChangeInfo[];\r\n  email: string;\r\n}\r\n\r\n/**\r\n * Represents all of the types of change requests.\r\n */\r\nexport enum ChangeType {\r\n  none = 0,\r\n  dependency = 1,\r\n  patch = 2,\r\n  minor = 3,\r\n  major = 4\r\n}\r\n\r\n/** Defines an IChangeInfo object. */\r\nexport interface IChangeInfo {\r\n  /**\r\n   * Defines the type of change. This is not expected to exist within the JSON file definition as we\r\n   * parse it from the \"type\" property.\r\n   */\r\n  changeType?: ChangeType;\r\n\r\n  /**\r\n   * Defines the array of related changes for the given package. This is used to iterate over comments\r\n   * requested by the change requests.\r\n   */\r\n  changes?: IChangeInfo[];\r\n\r\n  /**\r\n   * A user provided comment for the change.\r\n   */\r\n  comment?: string;\r\n\r\n  /**\r\n   * The email of the user who provided the comment. Pulled from the git log.\r\n   */\r\n  author?: string;\r\n\r\n  /**\r\n   * The commit hash for the change.\r\n   */\r\n  commit?: string;\r\n\r\n  /**\r\n   * The new downstream range dependency, as calculated by the findChangeRequests function.\r\n   */\r\n  newRangeDependency?: string;\r\n\r\n  /**\r\n   * The new version for the package, as calculated by the findChangeRequests function.\r\n   */\r\n  newVersion?: string;\r\n\r\n  /**\r\n   * The order in which the change request should be published.\r\n   */\r\n  order?: number;\r\n\r\n  /**\r\n   * The name of the package.\r\n   */\r\n  packageName: string;\r\n\r\n  /**\r\n   * The type of the package publishing request (patch/minor/major), as provided by the JSON file.\r\n   */\r\n  type?: string;\r\n}\r\n"],"sourceRoot":"..\\..\\src"}