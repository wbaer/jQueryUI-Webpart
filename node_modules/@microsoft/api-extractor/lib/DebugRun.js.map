{"version":3,"sources":["DebugRun.ts"],"names":[],"mappings":"AAAA,yDAAyD;AACzD,oEAAoE;;AAEpE,+BAAiC;AACjC,uBAAyB;AACzB,yCAAoC;AACpC,kEAA6D;AAC7D,kEAA6D;AAC7D,mEAAiG;AAEjG,IAAM,eAAe,GAAuB;IAC1C,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC,GAAG;IAC3B,MAAM,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ;IAC9B,gBAAgB,EAAE,EAAE,CAAC,oBAAoB,CAAC,MAAM;IAChD,sBAAsB,EAAE,IAAI;IAC5B,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK;IACrB,OAAO,EAAE,uBAAuB;IAChC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,0CAA0C;CAC7D,CAAC;AAEF,IAAM,SAAS,GAAc,IAAI,mBAAS,CAAE;IAC1C,eAAe,EAAE,eAAe;IAChC,YAAY,EACV,UAAC,OAAe,EAAE,QAAgB,EAAE,UAAkB;QACpD,OAAO,CAAC,GAAG,CAAC,mBAAiB,OAAS,GAAG,EAAE,CAAC,GAAG;eAC3C,OAAK,QAAQ,SAAI,UAAY,CAAA,CAAC,CAAC;IACrC,CAAC;CACJ,CAAC,CAAC;AAEH,SAAS,CAAC,oBAAoB,CAAC,gCAAgC,CAAC,CAAC;AAEjE,SAAS,CAAC,OAAO,CAAC,EAAC,cAAc,EAAE,gCAAgC;IACjE,UAAU,EAAE,EAAE,EAAC,CAAC,CAAC;AAEnB,IAAM,qBAAqB,GAAkC;IAC3D,SAAS,EAAE,EAAE;IACb,WAAW,EAAE,iBAAiB;IAC9B,UAAU,EAAE,EAAE;IACd,UAAU,EAAE,EAAE;CACf,CAAC;AACF,IAAM,gBAAgB,GAA2B,gCAAsB,CAAC,eAAe,CAAC,qBAAqB,CAAC,CAAC;AAC/G,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,UAAU,CAAC,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAE/E,IAAM,gBAAgB,GAAqB,IAAI,0BAAgB,EAAE,CAAC;AAClE,gBAAgB,CAAC,YAAY,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC;AAElE,IAAM,gBAAgB,GAAqB,IAAI,0BAAgB,EAAE,CAAC;AAClE,gBAAgB,CAAC,aAAa,CAAC,qBAAqB,EAAE,SAAS,CAAC,CAAC;AAEjE,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC","file":"DebugRun.js","sourcesContent":["// NOTE: THIS SOURCE FILE IS FOR DEBUGGING PURPOSES ONLY.\r\n//       IT IS INVOKED BY THE \"Run.cmd\" AND \"Debug.cmd\" BATCH FILES.\r\n\r\nimport * as ts from 'typescript';\r\nimport * as os from 'os';\r\nimport Extractor from './Extractor';\r\nimport ApiFileGenerator from './generators/ApiFileGenerator';\r\nimport ApiJsonGenerator from './generators/ApiJsonGenerator';\r\nimport ApiDefinitionReference, { IApiDefinintionReferenceParts } from './ApiDefinitionReference';\r\n\r\nconst compilerOptions: ts.CompilerOptions = {\r\n  target: ts.ScriptTarget.ES5,\r\n  module: ts.ModuleKind.CommonJS,\r\n  moduleResolution: ts.ModuleResolutionKind.NodeJs,\r\n  experimentalDecorators: true,\r\n  jsx: ts.JsxEmit.React,\r\n  rootDir: './testInputs/example2',\r\n  typeRoots: ['./'] // We need to ignore @types in these tests\r\n};\r\n\r\nconst extractor: Extractor = new Extractor( {\r\n  compilerOptions: compilerOptions,\r\n  errorHandler:\r\n    (message: string, fileName: string, lineNumber: number): void => {\r\n      console.log(`ErrorHandler: ${message}` + os.EOL\r\n        + `  ${fileName}#${lineNumber}`);\r\n    }\r\n});\r\n\r\nextractor.loadExternalPackages('./testInputs/external-api-json');\r\n\r\nextractor.analyze({entryPointFile: './testInputs/example2/index.ts',\r\n  otherFiles: []});\r\n\r\nconst externalPackageApiRef: IApiDefinintionReferenceParts = {\r\n  scopeName: '',\r\n  packageName: 'es6-collections',\r\n  exportName: '',\r\n  memberName: ''\r\n};\r\nconst apiDefinitionRef: ApiDefinitionReference = ApiDefinitionReference.createFromParts(externalPackageApiRef);\r\nconsole.log(extractor.docItemLoader.getPackage(apiDefinitionRef, console.log));\r\n\r\nconst apiFileGenerator: ApiFileGenerator = new ApiFileGenerator();\r\napiFileGenerator.writeApiFile('./lib/DebugRun.api.ts', extractor);\r\n\r\nconst apiJsonGenerator: ApiJsonGenerator = new ApiJsonGenerator();\r\napiJsonGenerator.writeJsonFile('./lib/DebugRun.json', extractor);\r\n\r\nconsole.log('DebugRun completed.');\r\n"],"sourceRoot":"..\\src"}