{"version":3,"sources":["logging.ts"],"names":[],"mappings":"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","file":"logging.js","sourcesContent":["/* tslint:disable:max-line-length */\r\n\r\nimport * as gutil from 'gulp-util';\r\nimport * as gulp from 'gulp';\r\nimport * as path from 'path';\r\n/* tslint:disable:typedef */\r\nconst prettyTime = require('pretty-hrtime');\r\n/* tslint:enable:typedef */\r\nimport * as state from './State';\r\nimport { getFlagValue } from './config';\r\nimport { getConfig } from './index';\r\nimport * as Chalk from 'chalk';\r\n\r\nconst WROTE_ERROR_KEY: string = '__gulpCoreBuildWroteError';\r\n\r\ninterface ILocalCache {\r\n  warnings: string[];\r\n  errors: string[];\r\n  taskRun: number;\r\n  subTasksRun: number;\r\n  testsRun: number;\r\n  testsPassed: number;\r\n  testsFailed: number;\r\n  testsFlakyFailed: number;\r\n  testsSkipped: number;\r\n  taskErrors: number;\r\n  coverageResults: number;\r\n  coveragePass: number;\r\n  coverageTotal: number;\r\n  totalTaskHrTime: [number, number];\r\n  start?: [number, number];\r\n  taskCreationTime?: [number, number];\r\n  totalTaskSrc: number;\r\n  wroteSummary: boolean;\r\n  writingSummary: boolean;\r\n  writeSummaryCallbacks: Array<() => void>;\r\n  watchMode?: boolean;\r\n  fromRunGulp?: boolean;\r\n  exitCode: number;\r\n  writeSummaryLogs: string[];\r\n  gulp: gulp.Gulp;\r\n  gulpErrorCallback: (err: Object) => void;\r\n  gulpStopCallback: (err: Object) => void;\r\n  errorAndWarningSuppressions: { [key: string]: boolean };\r\n  shouldLogWarningsDuringSummary: boolean;\r\n  shouldLogErrorsDuringSummary: boolean;\r\n}\r\n\r\nlet wiredUpErrorHandling: boolean = false;\r\nlet duringFastExit: boolean = false;\r\n\r\n/* tslint:disable:no-any */\r\nconst globalInstance: any = global as any;\r\n/* tslint:enable:no-any */\r\n\r\nconst localCache: ILocalCache = globalInstance.__loggingCache = globalInstance.__loggingCache || {\r\n  warnings: [],\r\n  errors: [],\r\n  testsRun: 0,\r\n  subTasksRun: 0,\r\n  testsPassed: 0,\r\n  testsFailed: 0,\r\n  testsFlakyFailed: 0,\r\n  testsSkipped: 0,\r\n  taskRun: 0,\r\n  taskErrors: 0,\r\n  coverageResults: 0,\r\n  coveragePass: 0,\r\n  coverageTotal: 0,\r\n  totalTaskHrTime: undefined,\r\n  totalTaskSrc: 0,\r\n  wroteSummary: false,\r\n  writingSummary: false,\r\n  writeSummaryCallbacks: [],\r\n  exitCode: 0,\r\n  writeSummaryLogs: [],\r\n  errorAndWarningSuppressions: {},\r\n  gulp: undefined,\r\n  gulpErrorCallback: undefined,\r\n  gulpStopCallback: undefined,\r\n  shouldLogErrorsDuringSummary: false,\r\n  shouldLogWarningsDuringSummary: false\r\n};\r\n\r\nif (!localCache.start) {\r\n  localCache.start = process.hrtime();\r\n}\r\n\r\nwireUpProcessErrorHandling();\r\n\r\nfunction isVerbose(): boolean {\r\n  return getFlagValue('verbose');\r\n}\r\n\r\n/* tslint:disable:no-any */\r\nfunction formatError(e: any): string {\r\n/* tslint:enable:no-any */\r\n  'use strict';\r\n\r\n  if (!e.err) {\r\n    if (isVerbose()) {\r\n      return e.message + '\\r\\n' + e.stack;\r\n    } else {\r\n      return e.message;\r\n    }\r\n  }\r\n\r\n  // PluginError\r\n  if (typeof e.err.showStack === 'boolean') {\r\n    return e.err.toString() + (e.err.stack && isVerbose() ? '\\r\\n' + e.err.stack : '');\r\n  }\r\n\r\n  // normal error\r\n  if (e.err.stack) {\r\n    if (isVerbose()) {\r\n      return e.err.stack;\r\n    } else {\r\n      return e.err.message;\r\n    }\r\n  }\r\n\r\n  // unknown (string, number, etc.)\r\n  if (typeof (Error) === 'undefined') {\r\n    if (isVerbose()) {\r\n      return e.message + '\\r\\n' + e.stack;\r\n    } else {\r\n      return e.message;\r\n    }\r\n  } else {\r\n    let output: string = String(e.err);\r\n\r\n    try {\r\n      output = JSON.stringify(e.err);\r\n    } catch (e) {\r\n      // Do nothing\r\n    }\r\n\r\n    if (isVerbose()) {\r\n      return new Error(output).stack;\r\n  } else {\r\n      return new Error(output).message;\r\n    }\r\n  }\r\n}\r\n\r\nfunction afterStreamFlushed(streamName: string, callback: () => void): void {\r\n  'use strict';\r\n  if (duringFastExit) {\r\n    callback();\r\n  } else {\r\n    const stream: NodeJS.WritableStream = process[streamName];\r\n    const outputWritten: boolean = stream.write('');\r\n    if (outputWritten) {\r\n      /* tslint:disable:ban-native-functions */\r\n      setTimeout(() => {\r\n        callback();\r\n      }, 250);\r\n      /* tslint:enable:ban-native-functions */\r\n    } else {\r\n      stream.once('drain', () => {\r\n        /* tslint:disable:ban-native-functions */\r\n        setTimeout(() => {\r\n          callback();\r\n        }, 250);\r\n        /* tslint:enable:ban-native-functions */\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction afterStreamsFlushed(callback: () => void): void {\r\n  'use strict';\r\n  afterStreamFlushed('stdout', () => {\r\n    afterStreamFlushed('stderr', () => {\r\n      callback();\r\n    });\r\n  });\r\n}\r\n\r\nfunction writeSummary(callback: () => void): void {\r\n  'use strict';\r\n  const shouldRelogIssues: boolean = getFlagValue('relogIssues');\r\n\r\n  localCache.writeSummaryCallbacks.push(callback);\r\n\r\n  if (!localCache.writingSummary) {\r\n    localCache.writingSummary = true;\r\n\r\n    // flush the log\r\n    afterStreamsFlushed(() => {\r\n      log(gutil.colors.magenta('==================[ Finished ]=================='));\r\n\r\n      if (shouldRelogIssues && getWarnings().length) {\r\n        const warnings: string[] = getWarnings();\r\n        for (let x: number = 0; x < warnings.length; x++) {\r\n          console.error(gutil.colors.yellow(warnings[x]));\r\n        }\r\n      }\r\n\r\n      if (shouldRelogIssues && (localCache.taskErrors > 0 || getErrors().length)) {\r\n        const errors: string[] = getErrors();\r\n        for (let x: number = 0; x < errors.length; x++) {\r\n          console.error(gutil.colors.red(errors[x]));\r\n        }\r\n      }\r\n\r\n      afterStreamsFlushed(() => {\r\n        for (const writeSummaryString of localCache.writeSummaryLogs) {\r\n          log(writeSummaryString);\r\n        }\r\n        const totalDuration: [number, number] = process.hrtime(getStart());\r\n\r\n        log(`Project ${state.builtPackage.name} version:`, gutil.colors.yellow(state.builtPackage.version));\r\n        log('Build tools version:', gutil.colors.yellow(state.coreBuildPackage.version));\r\n        log('Node version:', gutil.colors.yellow(process.version));\r\n        // log('Create tasks duration:', gutil.colors.yellow(prettyTime(localCache.taskCreationTime)));\r\n        // log('Read src tasks duration:', gutil.colors.yellow(prettyTime(localCache.totalTaskHrTime)));\r\n        log('Total duration:', gutil.colors.yellow(prettyTime(totalDuration)));\r\n        // log(`Tasks run: ${gutil.colors.yellow(localCache.taskRun + '')} Subtasks run: ${gutil.colors.yellow(localCache.subTasksRun + '')}`);\r\n\r\n        if (localCache.testsRun > 0) {\r\n          log('Tests results -',\r\n            'Passed:', gutil.colors.green(localCache.testsPassed + ''),\r\n            'Failed:', gutil.colors.red(localCache.testsFailed + ''),\r\n            // 'Flakey:', gutil.colors.yellow(localCache.testsFlakyFailed + ''),\r\n            'Skipped:', gutil.colors.yellow(localCache.testsSkipped + ''));\r\n        }\r\n\r\n        if (localCache.coverageResults > 0) {\r\n          log(\r\n            'Coverage results -',\r\n            'Passed:', gutil.colors.green(localCache.coveragePass + ''),\r\n            'Failed:', gutil.colors.red((localCache.coverageResults - localCache.coveragePass) + ''),\r\n            'Avg. Cov.:', gutil.colors.yellow(Math.floor(localCache.coverageTotal / localCache.coverageResults) + '%'));\r\n        }\r\n\r\n        if (getWarnings().length) {\r\n          log('Task warnings:', gutil.colors.yellow(getWarnings().length.toString()));\r\n        }\r\n\r\n        let totalErrors: number = 0;\r\n\r\n        if (localCache.taskErrors > 0 || getErrors().length) {\r\n          totalErrors = (localCache.taskErrors + getErrors().length);\r\n          log('Task errors:', gutil.colors.red(totalErrors + ''));\r\n        }\r\n\r\n        localCache.wroteSummary = true;\r\n        const callbacks: (() => void)[] = localCache.writeSummaryCallbacks;\r\n        localCache.writeSummaryCallbacks = [];\r\n        for (const writeSummaryCallback of callbacks) {\r\n          writeSummaryCallback();\r\n        }\r\n      });\r\n    });\r\n  } else if (localCache.wroteSummary) {\r\n    const callbacks: (() => void)[] = localCache.writeSummaryCallbacks;\r\n    localCache.writeSummaryCallbacks = [];\r\n    for (const writeSummaryCallback of callbacks) {\r\n      writeSummaryCallback();\r\n    }\r\n  }\r\n}\r\n\r\n/* tslint:disable:no-any */\r\nfunction _writeTaskError(e: any): void {\r\n/* tslint:enable:no-any */\r\n  'use strict';\r\n  if (!e || !(e.err && e.err[WROTE_ERROR_KEY])) {\r\n    writeError(e);\r\n    localCache.taskErrors++;\r\n  }\r\n}\r\n\r\nfunction exitProcess(errorCode: number): void {\r\n  'use strict';\r\n\r\n  if (!localCache.watchMode) {\r\n    process.stdout.write('', () => {\r\n      process.exit(errorCode);\r\n    });\r\n  }\r\n}\r\n\r\nfunction wireUpProcessErrorHandling(): void {\r\n  'use strict';\r\n  if (!wiredUpErrorHandling) {\r\n    wiredUpErrorHandling = true;\r\n    process.on('exit', (code: number) => {\r\n      'use strict';\r\n      duringFastExit = true;\r\n\r\n      if (!global['dontWatchExit']) { // tslint:disable-line:no-string-literal\r\n        if (!localCache.wroteSummary) {\r\n          localCache.wroteSummary = true;\r\n          console.log('About to exit with code:', code);\r\n          console.error('Process terminated before summary could be written, possible error in async code not continuing!');\r\n          console.log('Trying to exit with exit code 1');\r\n          process.exit(1);\r\n        } else {\r\n          if (localCache.exitCode !== 0) {\r\n            console.log(`Exiting with exit code: ${localCache.exitCode}`);\r\n            process.exit(localCache.exitCode);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    process.on('uncaughtException',\r\n      (err: Error) => {\r\n        'use strict';\r\n        console.error(err);\r\n\r\n        _writeTaskError(err);\r\n        writeSummary(() => {\r\n          exitProcess(1);\r\n\r\n          if (localCache.gulp) {\r\n            localCache.gulp.stop();\r\n          }\r\n\r\n          if (localCache.gulpErrorCallback) {\r\n            localCache.gulpErrorCallback(err);\r\n          }\r\n        });\r\n      });\r\n  }\r\n}\r\n\r\nfunction markErrorAsWritten(error: Error): void {\r\n  try {\r\n    error[WROTE_ERROR_KEY] = true;\r\n  } catch (e) {\r\n    // Do Nothing\r\n  }\r\n}\r\n\r\n/**\r\n * Adds a message to be displayed in the summary after execution is complete.\r\n * @param value - the message to display\r\n */\r\nexport function logSummary(value: string): void {\r\n  'use strict';\r\n  localCache.writeSummaryLogs.push(value);\r\n}\r\n\r\n/**\r\n * Log a message to the console\r\n * @param args - the messages to log to the console\r\n */\r\nexport function log(...args: Array<string | Chalk.ChalkChain>): void {\r\n  'use strict';\r\n  gutil.log.apply(this, args);\r\n}\r\n\r\n/**\r\n * Resets the state of the logging cache\r\n * @internal\r\n */\r\nexport function reset(): void {\r\n  'use strict';\r\n  localCache.start = process.hrtime();\r\n  localCache.warnings = [];\r\n  localCache.errors = [];\r\n  localCache.coverageResults = 0;\r\n  localCache.coveragePass = 0;\r\n  localCache.coverageTotal = 0;\r\n  localCache.taskRun = 0;\r\n  localCache.subTasksRun = 0;\r\n  localCache.taskErrors = 0;\r\n  localCache.totalTaskHrTime = undefined;\r\n  localCache.totalTaskSrc = 0;\r\n  localCache.wroteSummary = false;\r\n  localCache.writingSummary = false;\r\n  localCache.writeSummaryCallbacks = [];\r\n  localCache.testsRun = 0;\r\n  localCache.testsPassed = 0;\r\n  localCache.testsFailed = 0;\r\n  localCache.testsFlakyFailed = 0;\r\n  localCache.testsSkipped = 0;\r\n  localCache.writeSummaryLogs = [];\r\n}\r\n\r\n/** The result of a functional test run */\r\nexport enum TestResultState {\r\n  Passed,\r\n  Failed,\r\n  FlakyFailed,\r\n  Skipped\r\n}\r\n\r\n/**\r\n * Store a single functional test run's information\r\n * @param name - the name of the test\r\n * @param result - the result of the test\r\n * @param duration - the length of time it took for the test to execute\r\n */\r\nexport function functionalTestRun(name: string, result: TestResultState, duration: number): void {\r\n  'use strict';\r\n  localCache.testsRun++;\r\n\r\n  switch (result) {\r\n    case TestResultState.Failed:\r\n      localCache.testsFailed++;\r\n      break;\r\n    case TestResultState.Passed:\r\n      localCache.testsPassed++;\r\n      break;\r\n    case TestResultState.FlakyFailed:\r\n      localCache.testsFlakyFailed++;\r\n      break;\r\n    case TestResultState.Skipped:\r\n      localCache.testsSkipped++;\r\n      break;\r\n  }\r\n}\r\n\r\nexport function endTaskSrc(taskName: string, startHrtime: [number, number], fileCount: number): void {\r\n  'use strict';\r\n  localCache.totalTaskSrc++;\r\n  const taskDuration: [number, number] = process.hrtime(startHrtime);\r\n  if (!localCache.totalTaskHrTime) {\r\n    localCache.totalTaskHrTime = taskDuration;\r\n  } else {\r\n    localCache.totalTaskHrTime[0] += taskDuration[0];\r\n    const nanoSecTotal: number = taskDuration[1] + localCache.totalTaskHrTime[1];\r\n    if (nanoSecTotal > 1e9) {\r\n      localCache.totalTaskHrTime[0]++;\r\n      localCache.totalTaskHrTime[1] = nanoSecTotal - 1e9;\r\n    } else {\r\n      localCache.totalTaskHrTime[1] = nanoSecTotal;\r\n    }\r\n  }\r\n\r\n  log(taskName, 'read src task duration:', gutil.colors.yellow(prettyTime(taskDuration)), `- ${fileCount} files`);\r\n}\r\n\r\n/**\r\n * Store coverage information, potentially logging an error if the coverage is below the threshold\r\n * @param coverage - the coverage of the file as a percentage\r\n * @param threshold - the minimum coverage for the file as a percentage, an error will be logged if coverage is below the threshold\r\n * @param filePath - the path to the file whose coverage is being measured\r\n */\r\nexport function coverageData(coverage: number, threshold: number, filePath: string): void {\r\n  'use strict';\r\n  localCache.coverageResults++;\r\n\r\n  if (coverage < threshold) {\r\n    error('Coverage:', Math.floor(coverage) + '% (<' + threshold + '%) -', filePath);\r\n  } else {\r\n    localCache.coveragePass++;\r\n  }\r\n\r\n  localCache.coverageTotal += coverage;\r\n}\r\n\r\nconst colorCodeRegex: RegExp = /\\x1B[[(?);]{0,2}(;?\\d)*./g;\r\n\r\n/**\r\n * Adds a suppression for an error or warning\r\n * @param str - the error or warning as a string\r\n */\r\nexport function addSuppression(str: string): void {\r\n  'use strict';\r\n\r\n  str = str\r\n    .replace(colorCodeRegex, '') // remove colors\r\n    .replace(/\\r\\n/g, '\\n'); // normalize newline\r\n  localCache.errorAndWarningSuppressions[str] = true;\r\n\r\n  logSummary(`${gutil.colors.yellow('Supressing')} - ${str}`);\r\n}\r\n\r\n/**\r\n * Logs a warning. It will be logged to standard error and cause the build to fail\r\n * if buildConfig.shouldWarningsFailBuild is true, otherwise it will be logged to standard output.\r\n * @param message - the warning description\r\n */\r\nexport function warn(...args: Array<string | Chalk.ChalkChain>): void {\r\n  'use strict';\r\n  args.splice(0, 0, 'Warning -');\r\n\r\n  const stringMessage: string = args.join(' ');\r\n\r\n  if (!localCache.errorAndWarningSuppressions[stringMessage.replace(colorCodeRegex, '')]) {\r\n    localCache.warnings.push(stringMessage);\r\n    log(gutil.colors.yellow.apply(undefined, args));\r\n  }\r\n}\r\n\r\n/**\r\n * Logs an error to standard error and causes the build to fail.\r\n * @param message - the error description\r\n */\r\nexport function error(...args: Array<string | Chalk.ChalkChain>): void {\r\n  'use strict';\r\n  args.splice(0, 0, 'Error -');\r\n\r\n  const stringMessage: string = args.join(' ');\r\n\r\n  if (!localCache.errorAndWarningSuppressions[stringMessage.replace(colorCodeRegex, '')]) {\r\n    localCache.errors.push(stringMessage);\r\n    log(gutil.colors.red.apply(undefined, args));\r\n  }\r\n}\r\n\r\n/**\r\n * Logs a message about a particular file\r\n * @param write - the function which will write message\r\n * @param taskName - the name of the task which is doing the logging\r\n * @param filePath - the path to the file which encountered an issue\r\n * @param line - the line in the file which had an issue\r\n * @param column - the column in the file which had an issue\r\n * @param errorCode - the custom error code representing this error\r\n * @param message - a description of the error\r\n */\r\nexport function fileLog(write: (text: string) => void, taskName: string, filePath: string, line: number, column: number, errorCode: string, message: string): void {\r\n  'use strict';\r\n\r\n  if (!filePath) {\r\n    filePath = '<undefined path>';\r\n  } else if (path.isAbsolute(filePath)) {\r\n    filePath = path.relative(process.cwd(), filePath);\r\n  }\r\n\r\n  write(`${gutil.colors.cyan(taskName)} - ${filePath}(${line},${column}): error ${errorCode}: ${message}`);\r\n}\r\n\r\n/**\r\n * Logs a warning regarding a specific file.\r\n * @param filePath - the path to the file which encountered an issue\r\n * @param line - the line in the file which had an issue\r\n * @param column - the column in the file which had an issue\r\n * @param warningCode - the custom warning code representing this warning\r\n * @param message - a description of the warning\r\n */\r\nexport function fileWarning(taskName: string, filePath: string, line: number, column: number, errorCode: string,  message: string): void {\r\n  fileLog(warn, taskName, filePath, line, column, errorCode, message);\r\n}\r\n\r\n/**\r\n * Logs an error regarding a specific file to standard error and causes the build to fail.\r\n * @param filePath - the path to the file which encountered an issue\r\n * @param line - the line in the file which had an issue\r\n * @param column - the column in the file which had an issue\r\n * @param errorCode - the custom error code representing this error\r\n * @param message - a description of the error\r\n */\r\nexport function fileError(taskName: string, filePath: string, line: number, column: number, errorCode: string, message: string): void {\r\n  fileLog(error, taskName, filePath, line, column, errorCode, message);\r\n}\r\n\r\n/**\r\n * Logs a message to standard output if the verbose flag is specified.\r\n * @param messargsage - the messages to log when in verbose mode\r\n */\r\nexport function verbose(...args: Array<string | Chalk.ChalkChain>): void {\r\n  'use strict';\r\n\r\n  if (getFlagValue('verbose')) {\r\n    log.apply(undefined, args);\r\n  }\r\n}\r\n\r\nexport function generateGulpError(error: Object): Object {\r\n  if (isVerbose()) {\r\n    return error;\r\n  } else {\r\n    /* tslint:disable:no-any */\r\n    const output: any = {\r\n    /* tslint:enable:no-any */\r\n      showStack: false,\r\n      toString: (): string => {\r\n        return '';\r\n      }\r\n    };\r\n\r\n    markErrorAsWritten(output);\r\n\r\n    return output;\r\n  }\r\n}\r\n\r\n/* tslint:disable:no-any */\r\n/**\r\n * Logs an error to standard error and causes the build to fail.\r\n * @param e - the error (can be a string or Error object)\r\n */\r\nexport function writeError(e: any): void {\r\n/* tslint:enable:no-any */\r\n  'use strict';\r\n  if (e) {\r\n    if (!e[WROTE_ERROR_KEY]) {\r\n      if (e.err) {\r\n        if (!e.err[WROTE_ERROR_KEY]) {\r\n          const msg: string = formatError(e);\r\n          const time: string = prettyTime(e.hrDuration);\r\n\r\n          error(\r\n            '\\'' + gutil.colors.cyan(e.task) + '\\'',\r\n            gutil.colors.red(e.subTask ? 'sub task errored after' : 'errored after'),\r\n            gutil.colors.magenta(time),\r\n            '\\r\\n',\r\n            msg\r\n          );\r\n          markErrorAsWritten(e.err[WROTE_ERROR_KEY]);\r\n        }\r\n      } else if (e.fileName) {\r\n        // This is probably a plugin error\r\n        if (isVerbose()) {\r\n          error(\r\n            e.message,\r\n            '\\r\\n',\r\n            e.plugin + ': \\'' + gutil.colors.yellow(e.fileName) + '\\':' + e.lineNumber,\r\n            '\\r\\n',\r\n            e.stack\r\n          );\r\n        } else {\r\n          error(\r\n            e.message,\r\n            '\\r\\n',\r\n            e.plugin + ': \\'' + gutil.colors.yellow(e.fileName) + '\\':' + e.lineNumber\r\n          );\r\n        }\r\n      } else {\r\n        if (isVerbose()) {\r\n          error(\r\n            'Unknown',\r\n            '\\r\\n',\r\n            gutil.colors.red(e.message),\r\n            '\\r\\n',\r\n            e.stack);\r\n        } else {\r\n          error(\r\n            'Unknown',\r\n            '\\r\\n',\r\n            gutil.colors.red(e.message));\r\n        }\r\n      }\r\n      markErrorAsWritten(e);\r\n    }\r\n  } else {\r\n    error('Unknown Error Object');\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the list of warnings which have been logged\r\n */\r\nexport function getWarnings(): string[] {\r\n  'use strict';\r\n  return localCache.warnings;\r\n}\r\n\r\n/** Returns the list of errors which have been logged */\r\nexport function getErrors(): string[] {\r\n  'use strict';\r\n  return localCache.errors;\r\n}\r\n\r\nexport function getStart(): [number, number] {\r\n  'use strict';\r\n  return localCache.start;\r\n}\r\n\r\nexport function setWatchMode(): void {\r\n  'use strict';\r\n  localCache.watchMode = true;\r\n}\r\n\r\nexport function getWatchMode(): boolean {\r\n  'use strict';\r\n  return localCache.watchMode;\r\n}\r\n\r\nexport function setExitCode(exitCode: number): void {\r\n  'use strict';\r\n  localCache.exitCode = exitCode;\r\n}\r\n\r\nexport function logStartSubtask(name: string): void {\r\n  log(`Starting subtask '${gutil.colors.cyan(name)}'...`);\r\n  localCache.subTasksRun++;\r\n}\r\n\r\nexport function logEndSubtask(name: string, startTime: [number, number], errorObject?: Error): void {\r\nconst duration: [number, number] = process.hrtime(startTime);\r\n\r\n  if (name) {\r\n    if (!errorObject) {\r\n      const durationString: string = prettyTime(duration);\r\n      log(`Finished subtask '${gutil.colors.cyan(name)}' after ${gutil.colors.magenta(durationString)}`);\r\n    } else {\r\n      writeError({\r\n        err: errorObject,\r\n        task: name,\r\n        subTask: true,\r\n        hrDuration: duration\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport function initialize(gulp: gulp.Gulp, gulpErrorCallback?: (err: Error) => void, gulpStopCallback?: (err: Error) => void): void {\r\n  'use strict';\r\n  // This will add logging to the gulp execution\r\n\r\n  localCache.gulp = gulp;\r\n\r\n  wireUpProcessErrorHandling();\r\n\r\n  localCache.gulpErrorCallback = gulpErrorCallback || (() => {\r\n    'use strict';\r\n    // Do Nothing\r\n  });\r\n\r\n  localCache.gulpStopCallback = gulpStopCallback || (() => {\r\n    'use strict';\r\n    // Do Nothing\r\n  });\r\n\r\n  gulp.on('start', (err: Object) => {\r\n    'use strict';\r\n    log('Starting gulp');\r\n  });\r\n\r\n  gulp.on('stop', (err: Object) => {\r\n    'use strict';\r\n    writeSummary(() => {\r\n      // error if we have any errors\r\n      if (localCache.taskErrors > 0 ||\r\n        (getWarnings().length && getConfig().shouldWarningsFailBuild) ||\r\n        getErrors().length ||\r\n        localCache.testsFailed > 0) {\r\n        exitProcess(1);\r\n      }\r\n\r\n      localCache.gulpStopCallback(err);\r\n      exitProcess(0);\r\n    });\r\n  });\r\n\r\n  gulp.on('err', (err: Object) => {\r\n    'use strict';\r\n    _writeTaskError(err);\r\n    writeSummary(() => {\r\n      exitProcess(1);\r\n      localCache.gulpErrorCallback(err);\r\n    });\r\n  });\r\n\r\n  /* tslint:disable:no-any */\r\n  gulp.on('task_start', (e: any) => {\r\n  /* tslint:enable:no-any */\r\n    'use strict';\r\n    if (localCache.fromRunGulp) {\r\n      log('Starting', '\\'' + gutil.colors.cyan(e.task) + '\\'...');\r\n    }\r\n\r\n    localCache.taskRun++;\r\n  });\r\n\r\n  /* tslint:disable:no-any */\r\n  gulp.on('task_stop', (e: any) => {\r\n  /* tslint:enable:no-any */\r\n    'use strict';\r\n    const time: string = prettyTime(e.hrDuration);\r\n\r\n    if (localCache.fromRunGulp) {\r\n      log(\r\n        'Finished', '\\'' + gutil.colors.cyan(e.task) + '\\'',\r\n        'after', gutil.colors.magenta(time)\r\n      );\r\n    }\r\n  });\r\n\r\n  /* tslint:disable:no-any */\r\n  gulp.on('task_err', (err: any) => {\r\n  /* tslint:enable:no-any */\r\n    'use strict';\r\n    _writeTaskError(err);\r\n    writeSummary(() => {\r\n      exitProcess(1);\r\n    });\r\n  });\r\n\r\n  /* tslint:disable:no-any */\r\n  gulp.on('task_not_found', (err: any) => {\r\n  /* tslint:enable:no-any */\r\n    'use strict';\r\n    log(\r\n      gutil.colors.red('Task \\'' + err.task + '\\' is not in your gulpfile')\r\n    );\r\n    log('Please check the documentation for proper gulpfile formatting');\r\n    exitProcess(1);\r\n  });\r\n}\r\n\r\nexport function markTaskCreationTime(): void {\r\n  'use strict';\r\n  localCache.taskCreationTime = process.hrtime(getStart());\r\n}\r\n"],"sourceRoot":"..\\src"}