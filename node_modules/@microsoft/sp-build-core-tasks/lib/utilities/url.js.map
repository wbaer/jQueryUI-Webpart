{"version":3,"sources":["utilities/url.ts"],"names":[],"mappings":";AAAA;IAAgC,kBAAqB;SAArB,UAAqB,EAArB,qBAAqB,EAArB,IAAqB;QAArB,6BAAqB;;IACnD,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QACvC,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAED,IAAI,MAAM,GAAW,QAAQ,CAAC,CAAC,CAAC,CAAC;IACjC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACjD,MAAM,GAAM,mBAAmB,CAAC,MAAM,CAAC,SAAI,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAG,CAAC;IAC/E,CAAC;IAED,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;AACrC,CAAC;AAXD,0CAWC;AAED,6BAAoC,GAAW;IAC7C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACT,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAED,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAClC,CAAC;AAND,kDAMC;AAED,eAAsB,IAAY;IAChC;;;;;;;;OAQG;IACH,IAAM,QAAQ,GAAW,8BAA8B,CAAC;IAExD,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAChC,CAAC;AAbD,sBAaC;AAED,6BAAoC,GAAW;IAC7C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACT,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAED,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AACjC,CAAC;AAND,kDAMC;AAED,4BAAmC,GAAW;IAC5C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACT,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAED,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AACjC,CAAC;AAND,gDAMC","file":"utilities/url.js","sourcesContent":["export function joinUrlSegments(...segments: string[]): string { // tslint:disable-line:export-name\r\n  if (!segments || segments.length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  let result: string = segments[0];\r\n  for (let i: number = 1; i < segments.length; i++) {\r\n    result = `${trimTrailingSlashes(result)}/${trimLeadingSlashes(segments[i])}`;\r\n  }\r\n\r\n  return trimTrailingSlashes(result);\r\n}\r\n\r\nexport function ensureTrailingSlash(str: string): string {\r\n  if (!str) {\r\n    return undefined;\r\n  }\r\n\r\n  return str.replace(/\\/*$/, '/');\r\n}\r\n\r\nexport function isUrl(path: string): boolean {\r\n  /* Matches the following:\r\n   * http://contoso.org/foo.js\r\n   * https://contoso\r\n   * http:/\\foo.bar\r\n   * https:\\/foo.bar\r\n   * http:\\\\foo.bar\r\n   * https:\\\\foo.bar\r\n   * HTTp:\\\\foo.bar\r\n   */\r\n  const urlRegex: RegExp = /([hH][tT]{2}[pP]s?):[/\\\\]{2}/;\r\n\r\n  return !!path.match(urlRegex);\r\n}\r\n\r\nexport function trimTrailingSlashes(str: string): string {\r\n  if (!str) {\r\n    return undefined;\r\n  }\r\n\r\n  return str.replace(/\\/+$/, '');\r\n}\r\n\r\nexport function trimLeadingSlashes(str: string): string {\r\n  if (!str) {\r\n    return undefined;\r\n  }\r\n\r\n  return str.replace(/^\\/+/, '');\r\n}\r\n"],"sourceRoot":"..\\..\\src"}