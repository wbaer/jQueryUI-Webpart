"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SPRte_1 = require("./SPRte");
var office_ui_fabric_react_1 = require("office-ui-fabric-react");
var SPRteTouchDevice = (function (_super) {
    __extends(SPRteTouchDevice, _super);
    function SPRteTouchDevice(props) {
        return _super.call(this, props) || this;
    }
    SPRteTouchDevice._getFormattingBarDefaultPosition = function (isRtl) {
        if (isRtl === void 0) { isRtl = false; }
        var left = isRtl ? 254 : undefined;
        var top = 198;
        var position = 'fixed';
        var right = undefined;
        return { left: left, top: top, position: position, right: right };
    };
    SPRteTouchDevice.prototype.componentWillUnmount = function () {
        _super.prototype.componentWillUnmount.call(this);
    };
    SPRteTouchDevice.prototype._afterEditorCreated = function (editor) {
        _super.prototype._afterEditorCreated.call(this, editor);
    };
    SPRteTouchDevice.prototype._initState = function () {
        this.state = {
            displayMode: this.props.displayMode,
            formattingBarPosition: SPRteTouchDevice._getFormattingBarDefaultPosition(this._isRtl),
            isFormattingBarHidden: false,
            isLinkDialogOpen: false
        };
    };
    SPRteTouchDevice.prototype._getFormattingBarPosition = function () {
        return SPRteTouchDevice._getFormattingBarDefaultPosition(this._isRtl);
    };
    SPRteTouchDevice.prototype._handleScroll = function () {
    };
    SPRteTouchDevice.prototype._handleSelectionChange = function (range, forceUpdate) {
        if (range) {
            this.setState({ currentSubmenuOpen: undefined });
            if (this._restoreOnFocus()) {
                this._updateFormattingBar(false);
                return;
            }
        }
        if (!range) {
            return;
        }
        else {
            this._updateSelection(range, forceUpdate);
        }
    };
    return SPRteTouchDevice;
}(SPRte_1.default));
__decorate([
    office_ui_fabric_react_1.autobind
], SPRteTouchDevice.prototype, "_handleSelectionChange", null);
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SPRteTouchDevice;
