"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require("react");
var office_ui_fabric_react_1 = require("office-ui-fabric-react");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var CanvasControlFactory_1 = require("../canvasControl/CanvasControlFactory");
var CanvasLayout_1 = require("../canvasLayout/CanvasLayout");
var CanvasToolboxHint_1 = require("../canvasToolboxHint/CanvasToolboxHint");
var ControlZone_1 = require("../controlZone/ControlZone");
var CanvasStrings_resx_1 = require("../../loc/CanvasStrings.resx");
var Toolbar_1 = require("../../toolbar/toolbar/Toolbar");
require("CanvasSection.scss");
var CanvasSection = (function (_super) {
    __extends(CanvasSection, _super);
    function CanvasSection(props, context) {
        return _super.call(this, props, context) || this;
    }
    CanvasSection._createEmptyControlLayout = function (zoneIndex, sectionIndex, controlIndex) {
        return {
            zoneIndex: zoneIndex,
            sectionIndex: sectionIndex,
            controlIndex: controlIndex
        };
    };
    CanvasSection.prototype.render = function () {
        var _this = this;
        var store = this.context.store;
        var displayMode = store.displayMode;
        var _a = this.props, zoneIndex = _a.zoneIndex, section = _a.section, selectedPosition = _a.selectedPosition;
        var isSectionSelected = selectedPosition.zoneIndex === zoneIndex &&
            selectedPosition.sectionIndex === section.index;
        var controlComponents = [];
        var controls = section.controls;
        var numControls = controls.length;
        controls.forEach(function (curCtrl, curIdx) {
            var isControlSelected = isSectionSelected &&
                selectedPosition.controlIndex === curCtrl.position.controlIndex;
            controlComponents.push(React.createElement(ControlZone_1.default, { displayMode: displayMode, id: curCtrl.id, isSelected: isControlSelected, key: curCtrl.id, row: undefined, position: curCtrl.position },
                CanvasControlFactory_1.default.CreateCanvasControl(curCtrl, store),
                React.createElement(Toolbar_1.default, { controlType: curCtrl.controlType, displayMode: displayMode, id: curCtrl.id, row: undefined, onConfigureButtonClick: store.handleConfigureButtonClicked, onDeleteButtonClick: store.handleDeleteControlButtonClicked, controlPosition: curCtrl.position })));
            var nextControlIndex = (curIdx + 1 === numControls) ?
                curCtrl.position.controlIndex + 1 :
                controls[curIdx + 1].position.controlIndex;
            var nextCtrlPosition = CanvasSection._createEmptyControlLayout(curCtrl.position.zoneIndex, curCtrl.position.sectionIndex, nextControlIndex);
            controlComponents.push(React.createElement(CanvasToolboxHint_1.default, { ariaLabel: CanvasStrings_resx_1.default.ToolboxHintTitle, row: undefined, layout: nextCtrlPosition, key: "hint." + nextCtrlPosition.controlIndex }));
        });
        var firstControlIdx = controls.length > 0 ?
            controls[0].position.controlIndex :
            CanvasLayout_1.default.firstLayoutIndex;
        var firstControlLayout = {
            zoneIndex: zoneIndex,
            sectionIndex: section.index,
            controlIndex: firstControlIdx
        };
        var isReadMode = displayMode === sp_core_library_1.DisplayMode.Read;
        var layoutSectionClassName = office_ui_fabric_react_1.css('CanvasSection', 'ms-Grid-col', 'ms-u-sm12', "ms-u-xl" + (this.props.section.factor || 12), {
            'CanvasSection--edit': !isReadMode,
            'CanvasSection--read': isReadMode,
            'CanvasSection--selected': isSectionSelected
        });
        return (React.createElement("div", { className: layoutSectionClassName, ref: function (ref) { return _this._domElement = ref; }, "data-automation-id": 'CanvasSection' },
            React.createElement(CanvasToolboxHint_1.default, { ariaLabel: CanvasStrings_resx_1.default.ToolboxHintTitle, row: undefined, layout: firstControlLayout }),
            controlComponents));
    };
    return CanvasSection;
}(React.Component));
CanvasSection.contextTypes = {
    store: React.PropTypes.object.isRequired
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = CanvasSection;
